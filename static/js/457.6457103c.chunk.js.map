{"version":3,"file":"static/js/457.6457103c.chunk.js","mappings":"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","sources":["Providers/Database/Context.js","Providers/Database/Provider.js","Providers/Database/index.js","components/EventTable/fields.js","components/ListboxComponent/index.js","components/FilterPanel/index.js","config/menuItems.js","components/Menu/MenuContent.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext(null)\r\n\r\nexport default Context","import React, {useCallback, useEffect, useReducer} from 'react'\r\nimport Context from './Context'\r\nimport {groups as d3groups, group as d3group, mean as d3mean, csv as d3csv} from \"d3\"\r\nimport {isArray, uniq} from 'lodash';\r\nimport axios from 'axios';\r\nimport RG_stations_listed from \"./data/Jan_24_2023/stations_listed.csv\"\r\nimport RG_locations_listed from \"./data/Jan_24_2023/locations_listed.csv\"\r\nimport RG_metadata from \"./data/Jan_24_2023/metadata.csv\"\r\nimport RG_streamDetail from \"./data/Jan_24_2023/streamDetail.csv\"\r\n\r\nfunction reducer(state, action) {\r\n    const { type, path, isLoading=false,error = false,\r\n        hasError = false, value } = action;\r\n    switch (type) {\r\n        case \"LOADING_CHANGED\":\r\n            return { ...state, [path]: { ...state[path], isLoading } };\r\n        case \"VALUE_CHANGE\":\r\n            return {\r\n                ...state,\r\n                [path]: { ...state[path], value, isLoading, error, hasError },\r\n            };\r\n        case \"INIT\":\r\n            return {...state,isInit:value}\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nfunction handleData({stationData, locationData, metaData}) {\r\n    const groupByLocation = d3groups(stationData, d => d[\"city_id\"]);\r\n    // route\r\n    console.time('---group meta---')\r\n    const byLocName = d3group(locationData, d=>d['city_id']);\r\n    const metabyLocName = d3group(metaData,d=>d['city_id']);\r\n    console.timeEnd('---group meta---')\r\n\r\n    const locs = groupByLocation.map(d => {\r\n        const meta = metabyLocName.get(d[0])??[];\r\n        const locinfo = (byLocName.get(d[0])??[])[0]??{};\r\n        return {\r\n            ...locinfo,\r\n            \"title\": `${locinfo.city} - ${locinfo.country}`,\r\n            count: d[1].length,\r\n            values: d[1],\r\n            // genre: d3groups(meta,d=>d.station_genre).map(d=>{d.title=d[0];d.count=d[1].length;return d}),\r\n            city: [[locinfo.city,meta]].map(d=>{d.title=d[0];d.count=d[1].length;return d}),\r\n        }\r\n    });\r\n    locs.sort((a, b) => b.count - a.count);\r\n\r\n\r\n    const countries = d3groups(stationData, d => d[\"country\"]).map(d => {\r\n        return {\r\n            \"title\": d[0],\r\n            long: d3mean(d[1], e => e.long),\r\n            lat: d3mean(d[1], e => e.lat),\r\n            count: d[1].length,\r\n            values: d[1]\r\n        }\r\n    }).sort((a, b) => b.count - a.count);\r\n\r\n    return {locs, countries};\r\n}\r\nconst init = {rawData: {value:{stationData:[],\r\n            locationData:[],\r\n            metaData:[], streamDetail:[]}},\r\n    locs:{},\r\n    countries:{},\r\n    events: {},\r\n    loading:false,\r\n    error:false,\r\n    isInit:false\r\n}\r\nlet isfirst = 0;\r\nconst Provider = ({  children }) => {\r\n    const [state, dispatch] = useReducer(reducer, init);\r\n    useEffect(() => {\r\n        if ((!state.rawData.isLoading)&&(!state.rawData.value.metaData.length)) {\r\n            isfirst = 1;\r\n            try {\r\n                console.time('Load and process data');\r\n                console.time('-Load data-');\r\n                dispatch({type: 'LOADING_CHANGED', path: 'rawData', isLoading: true});\r\n                dispatch({type: 'LOADING_CHANGED', path: 'locs', isLoading: true});\r\n                dispatch({type: 'LOADING_CHANGED', path: 'countries', isLoading: true});\r\n                // load data\r\n                Promise.all([\r\n                    d3csv(RG_stations_listed),\r\n                    d3csv(RG_locations_listed),\r\n                    d3csv(RG_metadata),\r\n                    d3csv(RG_streamDetail),\r\n                ]).then(([stationData, locationData, metaData, streamDetail]) => {\r\n                    console.timeEnd('-Load data-');\r\n                    console.time('-Correct data-');\r\n                    const locationDataMap = {};\r\n                    locationData.forEach(d => {\r\n                        d.lat = (+d.longitude);\r\n                        d.long = (+d.latitude);\r\n                        delete d.longitude;\r\n                        delete d.latitude;\r\n                        locationDataMap[d['city_id']] = d;\r\n                    });\r\n                    let stationDataMap = {};\r\n                    stationData.forEach(d => {\r\n                        d.lat = locationDataMap[d['city_id']].lat;\r\n                        d.long = locationDataMap[d['city_id']].long;\r\n                        d.country = locationDataMap[d['city_id']].country;\r\n                        d.city = locationDataMap[d['city_id']].city;\r\n                        stationDataMap[d['station_id']] = d;\r\n                    });\r\n\r\n                    metaData.forEach((d) => {\r\n                        d.station_genre = stationDataMap[d['station_id']].station_genre;\r\n                        d.city = locationDataMap[d['city_id']].city;\r\n                        d.country = locationDataMap[d['city_id']].country;\r\n                        d.station = stationDataMap[d['station_id']].station;\r\n                        d.stream_artist = streamDetail[d['stream_detail_id']].stream_artist;\r\n                        // d.stream_title = streamDetail[d['stream_detail_id']].stream_title;\r\n                        d.stream_song = streamDetail[d['stream_detail_id']].stream_song;\r\n                        // d.time_station = streamDetail[d['stream_detail_id']].time_station;\r\n                    })\r\n                    // metaData.sort((a,b)=>(+new Date(b.time_station))- (+new Date(a.time_station)));\r\n                    const rawData = {stationData, locationData, metaData, streamDetail,stationDataMap,locationDataMap};\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'rawData', value: rawData, isLoading: false,});\r\n                    console.timeEnd('-Correct data-');\r\n                    console.time('-filterdata-');\r\n                    const {locs, countries} = handleData(rawData);\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'locs', value: locs, isLoading: false});\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'countries', value: countries, isLoading: false});\r\n                    console.timeEnd('-filterdata-');\r\n                    console.timeEnd('Load and process data');\r\n                });\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'rawData',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'locs',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'countries',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const getListError = useCallback(\r\n        (path) => {\r\n            return state[path] ? state[path].error : false;\r\n        },\r\n        [state]\r\n    );\r\n    const getList = useCallback(\r\n        (path) => {\r\n            return state[path] && state[path].value ? state[path].value : [];\r\n        },\r\n        [state]\r\n    );\r\n\r\n    // get list of field\r\n    const getDistinctField = useCallback(\r\n        (field) => {\r\n            switch (field) {\r\n                case 'city':\r\n                    return state.rawData && state.rawData.value.locationData ? state.rawData.value.locationData.map(d=>d.city) : [];\r\n                case 'country':\r\n                    return state.countries && state.countries.value ? state.countries.value.map(d=>d.title) : [];\r\n                case 'station':\r\n                    return state.rawData && state.rawData.value.stationData ? uniq(state.rawData.value.stationData.map(d=>d.station)) : [];\r\n                case 'station_genre':\r\n                    return state.rawData && state.rawData.value.metaData ? uniq(state.rawData.value.metaData.map(d=>d.station_genre)) : [];\r\n                case 'stream_artist':\r\n                    return state.rawData && state.rawData.value.streamDetail ? uniq(state.rawData.value.streamDetail.map(d=>d.stream_artist)) : [];\r\n                case 'stream_song':\r\n                    return state.rawData && state.rawData.value.streamDetail ? uniq(state.rawData.value.streamDetail.map(d=>d.stream_song)) : [];\r\n                default:\r\n                    return [];\r\n            }\r\n        },\r\n        [state]\r\n    );\r\n    const getEvents = useCallback(\r\n        () => {\r\n            return (state.events && state.events.value ? state.events.value : []);\r\n        },\r\n        [state]\r\n    );\r\n    const requestEvents = useCallback(\r\n        (filter,limit) => {\r\n            dispatch({type: 'LOADING_CHANGED', path: 'events', isLoading: true});\r\n            new Promise((resolve,reject)=>{\r\n                let data = (state.rawData.value??{metaData:[]}).metaData.slice();\r\n                Object.keys(filter).forEach(filterKey=>{\r\n                    if (filter[filterKey] && data.length) {\r\n                        if (isArray(filter[filterKey])){\r\n                            if (filter[filterKey].length) {\r\n                                data = data.filter(d => filter[filterKey].find(e=>e===d[filterKey]));\r\n                            }\r\n                        }else if (filter[filterKey])\r\n                        {\r\n                            data = data.filter(d => d[filterKey] === filter[filterKey]);\r\n                        }\r\n                    }\r\n                })\r\n                // data.sort((a,b)=>(+new Date(b.time_station))- (+new Date(a.time_station)));\r\n                const value = data.slice(0,limit);\r\n                dispatch({type: 'VALUE_CHANGE', path: 'events', value, isLoading: false});\r\n                resolve(value);\r\n            })\r\n        },\r\n        [state]\r\n    );\r\n    const getDetail = useCallback(\r\n        (stream_detail_id) => {\r\n            const r = (state.events && state.events.value ? state.events.value : []).find(d=>d.stream_detail_id===stream_detail_id);\r\n            if (r) {\r\n                return getExtra (r,state.rawData.value.stationDataMap,state.rawData.value.locationDataMap,state.rawData.value.streamDetail);\r\n            }else\r\n                return null\r\n        },\r\n        [state]\r\n    );\r\n    function getExtra (r,stationDataMap,locationDataMap,streamDetail){\r\n        return {\r\n            ...r,\r\n            station_description:stationDataMap[r['station_id']].station_description,\r\n            station_url:stationDataMap[r['station_id']].station_url,\r\n            lat:locationDataMap[r['city_id']].lat,\r\n            long:locationDataMap[r['city_id']].long,\r\n            url:stationDataMap[r['station_id']].url,\r\n            // stream_song:streamDetail[r['stream_detail_id']].stream_song,\r\n            ...streamDetail[r['stream_detail_id']]\r\n        }\r\n    }\r\n    const getDownloadData = useCallback((listids)=>{\r\n        if (listids) {\r\n            let data = (state.rawData.value ?? {metaData: []}).metaData;\r\n            return listids.sort((a, b) => a - b).map(i => getExtra(data[i], state.rawData.value.stationDataMap, state.rawData.value.locationDataMap, state.rawData.value.streamDetail))\r\n        }else\r\n            return (state.rawData.value ?? {metaData: []}).metaData\r\n                .map(d => getExtra(d, state.rawData.value.stationDataMap, state.rawData.value.locationDataMap, state.rawData.value.streamDetail));\r\n    },[state]);\r\n\r\n    const isLoading = useCallback(\r\n        (path) => {\r\n            return state[path] ? state[path].isLoading : false;\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        <Context.Provider value={{\r\n            getList,\r\n            getEvents,\r\n            requestEvents,\r\n            getDistinctField,\r\n            getDetail,\r\n            getListError,\r\n            getDownloadData,\r\n            isLoading\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Provider;","import { useContext } from 'react'\r\nimport Context from './Context'\r\nexport { default as withDatabase } from './with.js'\r\nexport { default } from './Provider.js'\r\n\r\nexport function useDatabase() {\r\n    return useContext(Context)\r\n}","export const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n    },\r\n    {\r\n        accessorKey: 'time_station',\r\n        header: 'Time',\r\n        type:'time',\r\n        filterDisable:true\r\n    }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,getDistinctField} = useDatabase();\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    useEffect(()=>{\r\n        if (!(isLoading('rawData')||isLoading('countries')))\r\n        {\r\n            console.log('here')\r\n            const newOptions = {};\r\n            filterSearch.forEach(f=>{\r\n                newOptions[f.accessorKey] = getDistinctField(f.accessorKey);\r\n            });\r\n            setFilterOptions(newOptions);\r\n        }\r\n    },[isLoading('rawData'),isLoading('countries')])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><Autocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            options={filterOptions[f.accessorKey]??[]}\r\n            // getOptionLabel={(option) => option.title}\r\n            value={filters[f.accessorKey]??[]}\r\n            defaultValue={null}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n    </Stack>\r\n}","import React from 'react'\nimport {\n  AccountBox as AccountBoxIcon,\n  ChatBubble,\n  ChromeReaderMode,\n  Dashboard as DashboardIcon,\n  ExitToApp as ExitToAppIcon,\n  FilterList,\n  FormatTextdirectionRToL as RTLIcon,\n  FormatTextdirectionLToR as LTRIcon,\n  GetApp,\n  InfoOutlined,\n  Language as LanguageIcon,\n  Lock as LockIcon,\n  MenuOpen as MenuOpenIcon,\n  QuestionAnswer,\n  SettingsApplications as SettingsIcon,\n  Style as StyleIcon,\n  Tab,\n  ViewList,\n  Web,\n  FilterAlt,\n  Home as HomeIcon,\n    Map as MapIcon,\n    FileUpload\n} from '@mui/icons-material'\n\nimport allLocales from './locales'\nimport allThemes from './themes'\nimport FilterPanel from \"../components/FilterPanel\";\n\nconst getMenuItems = (props) => {\n  const {\n    intl,\n    updateLocale,\n    locale,\n    menuContext,\n    themeContext,\n    a2HSContext,\n    auth: authData,\n  } = props\n\n  const { toggleThis, isDesktop, isAuthMenuOpen, isMiniSwitchVisibility } =\n    menuContext\n  const { themeID, setThemeID, isRTL, toggleThisTheme } = themeContext\n\n  const { auth, setAuth } = authData\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\n\n  const localeItems = allLocales.map((l) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: l.locale }),\n      onClick: () => {\n        updateLocale(l.locale)\n      },\n      leftIcon: <LanguageIcon />,\n    }\n  })\n\n  const isAuthorised = auth.isAuthenticated\n\n  const themeItems = allThemes.map((t) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: t.id }),\n      onClick: () => {\n        setThemeID(t.id)\n      },\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\n    }\n  })\n\n  // if (isAuthMenuOpen || !isAuthorised) {\n  //   return [\n  //     {\n  //       value: '/my_account',\n  //       primaryText: intl.formatMessage({\n  //         id: 'my_account',\n  //         defaultMessage: 'My Account',\n  //       }),\n  //       leftIcon: <AccountBoxIcon />,\n  //     },\n  //   ]\n  // }\n  return [\n    {\n      value: null,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'filter',\n        defaultMessage: 'Filter',\n      }),\n      leftIcon: <FilterAlt />,\n      primaryTogglesNestedList: true,\n      nestedItems: [\n        {\n          primaryText: <FilterPanel/>\n        }\n      ]\n    },\n    {\n      value: '/',\n      visible: isAuthorised,\n      primaryText: intl.formatMessage({ id: 'home' }),\n      leftIcon: <HomeIcon />,\n    },\n    {\n      value: '/about',\n      visible: true,\n      primaryText: intl.formatMessage({ id: 'about' }),\n      leftIcon: <InfoOutlined />,\n    },\n    { divider: true },\n    {\n      primaryText: intl.formatMessage({ id: 'settings' }),\n      primaryTogglesNestedList: true,\n      leftIcon: <SettingsIcon />,\n      nestedItems: [\n        {\n          primaryText: intl.formatMessage({ id: 'theme' }),\n          secondaryText: intl.formatMessage({ id: themeID }),\n          primaryTogglesNestedList: true,\n          leftIcon: <StyleIcon />,\n          nestedItems: themeItems,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'language' }),\n          secondaryText: intl.formatMessage({ id: locale }),\n          primaryTogglesNestedList: true,\n          leftIcon: <LanguageIcon />,\n          nestedItems: localeItems,\n        },\n        {\n          visible: isDesktop ? true : false,\n          onClick: () => {\n            toggleThis('isMiniSwitchVisibility')\n          },\n          primaryText: intl.formatMessage({\n            id: 'menu_mini_mode',\n          }),\n          leftIcon: isMiniSwitchVisibility ? (\n            <MenuOpenIcon />\n          ) : (\n            <ChromeReaderMode />\n          ),\n        },\n        {\n          onClick: () => {\n            toggleThisTheme('isRTL')\n          },\n          primaryText: `${isRTL ? 'LTR' : 'RTL'} mode`,\n          leftIcon: isRTL ? <LTRIcon /> : <RTLIcon />,\n        },\n      ],\n    },\n    {\n      value: null,\n      visible: isAppInstallable && !isAppInstalled,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'install',\n        defaultMessage: 'Install',\n      }),\n      leftIcon: <GetApp />,\n    },\n  ]\n}\nexport default getMenuItems\n","import React from 'react'\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\nimport SelectableMenuList from 'material-ui-shell/lib/containers/SelectableMenuList'\nimport { useAddToHomeScreen } from 'base-shell/lib/providers/AddToHomeScreen'\nimport { useAuth } from 'base-shell/lib/providers/Auth'\nimport { useConfig } from 'base-shell/lib/providers/Config'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\nimport { useLocale } from 'base-shell/lib/providers/Locale'\nimport { useMenu } from 'material-ui-shell/lib/providers/Menu'\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\nimport getMenuItems from '../../config/menuItems'\nimport FilterPanel from \"../FilterPanel\";\n\nconst Menu = (props) => {\n  const intl = useIntl()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const auth = useAuth()\n  const menuContext = useMenu()\n  const a2HSContext = useAddToHomeScreen()\n  const { toggleThis, isMiniMode, isMiniSwitchVisibility } = menuContext || {}\n  const { appConfig } = useConfig()\n  const { setLocale, locale = 'en' } = useLocale()\n  const themeContext = useAppTheme()\n\n  const menuItems = getMenuItems({\n    intl,\n    locale,\n    updateLocale: setLocale,\n    menuContext,\n    themeContext,\n    appConfig,\n    a2HSContext,\n    auth,\n    ...props,\n  }).filter((item) => {\n    return item.visible !== false\n  })\n\n  const index = location ? location.pathname : '/'\n\n  const handleChange = (event, index) => {\n    if (index !== undefined) {\n      toggleThis('isMobileMenuOpen', false)\n    }\n    if (index !== undefined && index !== Object(index)) {\n      navigate(index)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        /*  direction: isRTL ? 'rtl' : 'ltr' */\n      }}\n    >\n      <Scrollbar style={{ flex: 1 }}>\n        {/*<FilterPanel/>*/}\n        <SelectableMenuList\n          key={isMiniSwitchVisibility + themeContext.isRTL}\n          onIndexChange={handleChange}\n          useMinified={isMiniMode}\n          items={menuItems}\n          index={index}\n        />\n      </Scrollbar>\n    </div>\n  )\n}\n\nexport default Menu\n"],"names":["React","reducer","state","action","type","path","isLoading","error","hasError","value","isInit","Error","init","rawData","stationData","locationData","metaData","streamDetail","locs","countries","events","loading","children","useReducer","dispatch","useEffect","length","console","time","Promise","all","d3csv","RG_stations_listed","RG_locations_listed","RG_metadata","RG_streamDetail","then","timeEnd","locationDataMap","forEach","d","lat","longitude","long","latitude","stationDataMap","country","city","station_genre","station","stream_artist","stream_song","groupByLocation","d3groups","byLocName","d3group","metabyLocName","map","meta","get","locinfo","count","values","title","sort","a","b","d3mean","e","handleData","getListError","useCallback","getList","getDistinctField","field","uniq","getEvents","requestEvents","filter","limit","resolve","reject","data","slice","Object","keys","filterKey","isArray","find","getDetail","stream_detail_id","r","getExtra","station_description","station_url","url","getDownloadData","listids","i","useDatabase","useContext","Context","fields","accessorKey","header","filterDisable","filterSearch","f","props","ref","role","other","itemCount","Array","viewboxRef","useRef","ViewportList","viewportRef","items","Type","key","id","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","FilterPanel","filters","useSelector","selectFilters","useDispatch","useState","filterOptions","setFilterOptions","log","newOptions","Stack","spacing","padding","Autocomplete","multiple","size","limitTags","ListboxComponent","defaultValue","onChange","event","setFilter","renderInput","params","TextField","label","intl","updateLocale","locale","menuContext","themeContext","a2HSContext","authData","auth","toggleThis","isDesktop","isMiniSwitchVisibility","isAuthMenuOpen","themeID","setThemeID","isRTL","toggleThisTheme","isAppInstallable","setAuth","isAppInstalled","deferredPrompt","localeItems","allLocales","l","undefined","visible","primaryText","formatMessage","onClick","leftIcon","Language","isAuthorised","isAuthenticated","themeItems","allThemes","t","Style","style","color","prompt","defaultMessage","FilterAlt","primaryTogglesNestedList","nestedItems","Home","InfoOutlined","divider","secondaryText","MenuOpen","ChromeReaderMode","GetApp","useIntl","navigate","useNavigate","location","useLocation","useAuth","useMenu","useAddToHomeScreen","isMiniMode","appConfig","useConfig","useLocale","setLocale","useAppTheme","menuItems","getMenuItems","item","index","pathname","display","flexDirection","height","flex","onIndexChange","useMinified"],"sourceRoot":""}