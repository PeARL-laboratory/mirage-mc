{"version":3,"file":"static/js/244.759145bb.chunk.js","mappings":"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","sources":["components/Dialog/index.js","components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","components/ListboxComponent/index.js","components/FilterPanel/index.js","components/FontsizeControl/index.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/EventTable/DownloadOption.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/PaperCustom/index.js","components/RadarChart/index.js","components/Map/index.js","components/DetailCard/index.js","components/EventDetail/index.js","components/EventMap/index.js","components/Search/index.js","components/ListenCard/index.js","components/MediaDetail/index.js","components/AppHeader/LanguageMenu.js","components/AppHeader/FontSizeMenu.js","components/AppHeader/LayoutMenu.js","components/AppHeader/index.js","pages/LandingPage/LandingPage.js","Providers/Query/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, IconButton,\r\n    Slide,\r\n    useMediaQuery,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => (\r\n    <Slide direction=\"up\" {...props} ref={ref} />\r\n))\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst QuestionDialog = ({\r\n                            isProcessing = false,\r\n                            isOpen = false,\r\n                            id = '',\r\n                            message = '',\r\n                            title = '',\r\n                            action = '',\r\n                            haveButton=false,\r\n                            handleAction = () => {},\r\n                            handleClose = () => {},\r\n                            ...rest\r\n                        }) => {\r\n    const intl = useIntl()\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            {...rest}\r\n        >\r\n            {/*<DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>*/}\r\n            <BootstrapDialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                {title}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {message}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {haveButton&&<DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    {intl.formatMessage({id: 'cancel', defaultMessage: 'Cancel'})}\r\n                </Button>\r\n                <Button\r\n                    disabled={isProcessing}\r\n                    onClick={() => {\r\n                        handleAction(handleClose)\r\n                    }}\r\n                    color=\"secondary\"\r\n                >\r\n                    {action}\r\n                </Button>\r\n            </DialogActions>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default QuestionDialog","import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport earthDay from '../../assets/earth-blue-marble.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Button, ButtonGroup, Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {alpha} from \"@mui/material/styles\";\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend, zoomLoc, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n    const theme = useTheme();\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n    useEffect(()=>{\r\n        onSelectLegend('selectCountry',(d)=>{\r\n            onSelect({country:[d['title']]});\r\n            zoomTo(d.long,d.lat);\r\n        })\r\n    },[zoomTo,onSelect])\r\n\r\n    const zoomIn = useCallback(()=>{\r\n        if (globeEl.current) {\r\n            const loc = {...globeEl.current.pointOfView()}\r\n            loc.altitude = loc.altitude/2\r\n            globeEl.current.pointOfView(loc,2000)\r\n        }\r\n    },[globeEl])\r\n    const zoomOut = useCallback(()=>{\r\n        if (globeEl.current) {\r\n            const loc = {...globeEl.current.pointOfView()}\r\n            loc.altitude = loc.altitude*2\r\n            globeEl.current.pointOfView(loc,2000)\r\n        }\r\n    },[globeEl])\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#ffffff\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n            //      marginTop:'-20vh',\r\n            // height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                // height={height*1.2}\r\n                height={height}\r\n                ref={globeEl}\r\n                globeImageUrl={(theme.palette.mode==='dark')?earthNight:earthDay}\r\n                backgroundColor={(theme.palette.mode==='dark')?'black':'#7ec7f6'}\r\n                showAtmosphere={true}\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {/*{toolbarRef&&<Portal container={toolbarRef.current}>*/}\r\n        {/*    <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>*/}\r\n        {/*</Portal>}*/}\r\n        <ButtonGroup\r\n            orientation=\"vertical\"\r\n            aria-label=\"map tool\"\r\n            variant={\"contained\"}\r\n            sx={{position:'absolute',right:0,top:0,margin:1,\r\n                // backgroundColor: theme=>alpha(theme.palette.common.white, 0.15),\r\n                '& button':{\r\n                    padding:1,\r\n                    // '&:hover': {\r\n                    //     backgroundColor: theme=>alpha(theme.palette.common.white, 0.25),\r\n                    // }\r\n            }}}\r\n        >\r\n\r\n            <Button onClick={onSaveImage}><SaveIcon/></Button>\r\n            <Button onClick={zoomIn}><AddIcon/></Button>\r\n            <Button onClick={zoomOut}><RemoveIcon/></Button>\r\n        </ButtonGroup>\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nimport {Checkbox} from \"@mui/material\";\r\nimport EventOutIcon from '@mui/icons-material/ShoppingCartCheckout';\r\nimport EventIcon from '@mui/icons-material/ShoppingCart';\r\nexport const fields = [\r\n    {\r\n        id: 'inBasket',\r\n        header: 'Selected',\r\n        accessorKey: 'inBasket',\r\n        // size: 50,\r\n        Cell: ({ renderedCellValue, row }) => (\r\n            <Checkbox\r\n                disabled\r\n                icon={<EventOutIcon />}\r\n                checkedIcon={<EventIcon color={'secondary'}/>}\r\n                checked={row.original.inBasket}\r\n            />\r\n        ),\r\n    },\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'track_name',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    }\r\n    // ,\r\n    // {\r\n    //     accessorKey: 'time_station',\r\n    //     header: 'Time',\r\n    //     type:'time',\r\n    //     filterDisable:true,\r\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    // }\r\n];\r\nexport const fieldsWithoutSelected = fields.filter((d,i)=>i);\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\n\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,searchByStream,getList} = useDatabase();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    const fields = getList('fields');\r\n\r\n    useEffect(()=>{\r\n        setFilterOptions({...fields});\r\n    },[fields])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n        {/*<TimeRangePicker*/}\r\n        {/*    fromVal={(filters[\"time_station\"]?.from)??null}*/}\r\n        {/*    toVal={(filters[\"time_station\"]?.to)??null}*/}\r\n        {/*    onChange={(key,value) => {*/}\r\n        {/*        const val = {...(filters[\"time_station\"] ?? {})};*/}\r\n        {/*        if (value)*/}\r\n        {/*            val[key] = value;*/}\r\n        {/*        else*/}\r\n        {/*            delete val[key];*/}\r\n        {/*        dispatch(setFilter({key:\"time_station\",value:val}));*/}\r\n        {/*    }}*/}\r\n        {/*/>*/}\r\n    </Stack>\r\n}\r\n\r\nfunction CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import {ButtonGroup, Button, Stack} from \"@mui/material\";\r\nimport {Add as AddIcon, Remove as RemoveIcon} from '@mui/icons-material';\r\n\r\nexport default function FontsizeControl({title,onChange}) {\r\n    return<Stack direction={\"row\"} alignItems={'center'} justifyContent={'space-between'}>\r\n        {title}\r\n        <ButtonGroup size=\"small\" variant=\"outlined\" aria-label=\"outlined button group\"  sx={{color:\"unset\"}}>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(true)}>\r\n            <AddIcon/>\r\n        </Button>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(false)}>\r\n            <RemoveIcon/>\r\n        </Button>\r\n    </ButtonGroup>\r\n    </Stack>\r\n}","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography, Menu, MenuItem, Box,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             appBarLeftContent = null,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={'absolute'}\r\n                sx={{\r\n                    width: undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar sx={{\r\n                    backgroundColor: (t) =>\r\n                        t.palette.mode === 'dark'\r\n                            ? t.palette.background.default\r\n                            : t.palette.primary.dark,\r\n                    margin: 0,\r\n                    padding: 0,\r\n                }}>\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {appBarLeftContent}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import SaveIcon from \"@mui/icons-material/Save\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport {Button, Menu, MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function({onDownloadSearchList=()=>{},onDownloadSelectedList=()=>{}}){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <><Button\r\n        color=\"primary\"\r\n        target={\"_blank\"}\r\n        size={\"small\"}\r\n        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n        // onClick={handleExportData}\r\n        startIcon={<SaveIcon/>}\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n    >\r\n        Download\r\n    </Button>\r\n        <Menu anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}>\r\n            <MenuItem onClick={()=>{onDownloadSearchList();handleClose();}}>Data from Search list</MenuItem>\r\n            <MenuItem onClick={()=>{onDownloadSelectedList();handleClose();}}>Data from Selected list</MenuItem>\r\n            <MenuItem onClick={handleClose} href={process.env.REACT_APP_DATA_DOWNLOAD}>MIRAGE-MetaCorpus Song List</MenuItem>\r\n            <MenuItem onClick={handleClose} disabled>MIRAGE-MetaCorpus Station List</MenuItem>\r\n        </Menu>\r\n        </>\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport {MaterialReactTable,MRT_ToolbarAlertBanner} from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button, IconButton, Toolbar, Tooltip} from \"@mui/material\";\r\nimport AddEventIcon from '@mui/icons-material/AddShoppingCart';\r\nimport RemoveEventIcon from '@mui/icons-material/RemoveShoppingCart';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport DownloadOption from \"./DownloadOption\";\r\n\r\n\r\n\r\nconst EventTable = ({id='tableevent',columns,data,totalData,selectedData,disableAdding,\r\n                        isLoadingData,onSelectRow,highlightId,onSendToList,onRemoveFromList}) => {\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        try {\r\n            rowVirtualizerInstanceRef.current?.scrollToIndex?.(0);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, [sorting]);\r\n\r\n    useEffect(()=>{\r\n        setRowSelection({})\r\n    },[data])\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportRowsFromTable = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            key={id}\r\n            id={id}\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            // enableBottomToolbar={!!Object.keys(rowSelection).length}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            enableRowSelection\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx:{display:'flex', flexDirection:\"column\", height:'100%'}}}\r\n            // muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            onRowSelectionChange={setRowSelection}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting, rowSelection }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 2 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.event_id=== row.original.event_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            enableFullScreenToggle={false}\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            positionToolbarAlertBanner={\"bottom\"}\r\n            renderTopToolbarCustomActions={({ table }) => {\r\n                return (\r\n                    <Box\r\n                        sx={{display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap'}}\r\n                    >\r\n                        <DownloadOption\r\n                            // onDownloadSearchList={()=>handleExportRows(table.getPrePaginationRowModel().rows)}\r\n                            onDownloadSearchList={()=>handleExportRows(totalData)}\r\n                            onDownloadSelectedList={()=>handleExportRows(selectedData)}\r\n                        />\r\n                    </Box>\r\n                )\r\n            }}\r\n            renderBottomToolbar={({table})=> {\r\n                const handleSelected = onSendToList?() => {\r\n                    onSendToList(table.getSelectedRowModel().flatRows.map(d=>d.original))\r\n                }:()=>{};\r\n                const handleRemoveSelected = onRemoveFromList?() => {\r\n                    onRemoveFromList(table.getSelectedRowModel().flatRows.map(d=>d.original))\r\n                }:()=>{};\r\n                return (<Toolbar\r\n                    sx={{\r\n                        display: Object.keys(rowSelection).length ? 'flex' : 'none',\r\n                    }}\r\n                >\r\n                    <Box sx={{flexGrow: 2}}>\r\n                        <MRT_ToolbarAlertBanner\r\n                            stackAlertBanner\r\n                            table={table}\r\n                        />\r\n                    </Box>\r\n                    {(onSendToList&&(!disableAdding)) && <Tooltip title={\"Add to Selected list\"}><IconButton\r\n                        // color=\"info\"\r\n                        // disabled={!table.getIsSomeRowsSelected()}\r\n                        onClick={handleSelected}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <AddEventIcon/>\r\n                    </IconButton>\r\n                    </Tooltip>}\r\n                    {(onRemoveFromList) && <Tooltip title={\"Remove from Selected list\"}><IconButton\r\n                        // color=\"info\"\r\n                        // disabled={!table.getIsSomeRowsSelected()}\r\n                        onClick={handleRemoveSelected}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <RemoveEventIcon/>\r\n                    </IconButton>\r\n                    </Tooltip>}\r\n                </Toolbar>)\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {styled} from \"@mui/material/styles\";\r\nimport {Paper} from \"@mui/material\";\r\n\r\nconst PaperCustom = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    borderRadius:10,\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default PaperCustom;","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useState, useMemo} from \"react\";\r\n\r\nexport default function  RadarChart ({inputData,axisInfo,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    useEffect(()=>{\r\n        if (axisInfo.length && inputData.length) {\r\n            const data = inputData.map(d => {\r\n                const item = {\r\n                    type: 'scatterpolar',\r\n                    r: [],\r\n                    theta: [],\r\n                    fill: 'toself'\r\n                };\r\n                axisInfo.forEach((k, ki) => {\r\n                    item.r[ki] = d[k.key] ?? undefined;\r\n                    item.theta[ki] = k.label;\r\n                })\r\n                item.r.push(item.r[0]);\r\n                item.theta.push(item.theta[0]);\r\n                return item;\r\n            });\r\n            setData(data);\r\n        }else{\r\n            setData([]);\r\n        }\r\n    },[inputData,axisInfo])\r\n    let layout = useMemo(()=>({\r\n        paper_bgcolor: 'rgba(255,255,255,0)',\r\n        plot_bgcolor:'rgba(255,255,255,0)',\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:40,r:20,l:20,b:40},\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        polar: {\r\n            radialaxis: {\r\n                visible: true,\r\n                range: [0, 1]\r\n            }\r\n        },\r\n        showlegend: false\r\n    }),[height,width,theme]);\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                    'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                    'filename': 'Station_Map',\r\n                    'height': 1080,\r\n                    'width': 1920,\r\n                    'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                // '#Station':false\r\n            }}\r\n        />\r\n    );\r\n}","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = useMemo(()=>({\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    }),[height,width,theme,domain]);\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Paper, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useSpring, animated, easings  } from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect, useMemo} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n// import {Helmet} from \"react-helmet\";\r\nimport RadarChart from \"../RadarChart\";\r\nimport Map from \"../Map\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    const timeStation = moment(data.time_station).format('LLL');\r\n    const duration = moment.utc(data.track_duration*1000).format(\"HH:mm:ss\");\r\n    const stream_title = data.stream_title??'N/A';\r\n    const analyticData = useMemo(()=>[data],[data]);\r\n    const analyticAxis = useMemo(()=>[\r\n        {key:\"track_danceability\",label:\"Danceability\"},\r\n        {key:\"track_speechiness\",label:\"Speechiness\"},\r\n        {key:\"track_acousticness\",label:\"Acousticness\"},\r\n        {key:\"track_instrumentalness\",label:\"Instrumentalness\"},\r\n        {key:\"track_liveness\",label:\"Liveness\"},\r\n        {key:\"track_energy\",label:\"Energy\"},\r\n        {key:\"track_valence\",label:\"Valence\"}\r\n    ],[]);\r\n    return <Stack spacing={1}>\r\n        <PaperCustom>\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station} <Typography component={\"span\"} variant={\"subtitle1\"}>{data.station_frequency??'_'}</Typography>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>\r\n                <tr><td>Genre</td><td>{data.station_genre && <Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                    {data.station_genre.map(d=><Chip label={d} key={d} size={'small'}/>)}\r\n                </Stack>}</td></tr>\r\n                <tr><td>Description</td><td>{data.station_description}</td></tr>\r\n            </table>\r\n        </PaperCustom>\r\n\r\n        <PaperCustom>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Stream name</td><td>{stream_title}</td></tr>\r\n                {/*<tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>*/}\r\n            </table>\r\n        </PaperCustom>\r\n        <PaperCustom elevation={3}>\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <Typography color=\"text.secondary\" gutterBottom> {timeStation}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"h4\" component=\"div\"\r\n                            onClick={data.track_name ? () => onSelect({track_name: [data.track_name]}) : null}>\r\n                    {data.track_name}\r\n                </Typography>\r\n                {data.track_year_released && <Typography color=\"text.secondary\" gutterBottom> {data.track_year_released}</Typography>}\r\n                {data.track_duration && <Typography color=\"text.secondary\" gutterBottom>Duration: <Chip label={duration} size={'small'} /></Typography>}\r\n                {data.track_popularity && <Typography color=\"text.secondary\" gutterBottom>Popularity: <Chip\r\n                    icon={<Favorite/>}\r\n                    label={data.track_popularity} size={'small'} /></Typography>}\r\n                {data.track_genre && <Chip label={data.track_genre} size={'small'}/>}\r\n                {data.track_loudness && <Typography color=\"text.secondary\" gutterBottom>Loudness: <Chip label={`${data.track_loudness} db`} size={'small'}/>\r\n                </Typography>}\r\n            </Grid>\r\n            {data.artist_info && <Grid item xs={6}>\r\n                <Box sx={{flex: '1 0 auto', display: 'flex'}}>\r\n                    <Avatar aria-label=\"recipe\"\r\n                            src={data.artist_info.artist_image_url}\r\n                            sx={{mr: 1}}>{data.artist_info.artist_name[0]}</Avatar>\r\n                    <div>\r\n                        <Typography variant=\"h5\" color={'text.primary'}>{data.artist_info.artist_name}</Typography>\r\n                        <Typography variant=\"subtitle2\">from {data.artist_info.artist_country ?? \"N/A\"}</Typography>\r\n                    </div>\r\n                </Box>\r\n                {data.artist_info.artist_genres && (data.artist_info.artist_genres.map(t => <Chip key={t} label={t}\r\n                                                                                    size={'small'}/>))}\r\n            </Grid>}\r\n            <Grid item xs={12}>\r\n                {(data.track_instrumentation&&data.track_instrumentation.length) ? (\r\n                    <Stack direction={'row'} spacing={1} flexWrap sx={{width: '100%', flexWrap: 'wrap'}}>\r\n                        <Typography>Instruments: </Typography>\r\n                        {data.track_instrumentation.map(t => <Chip\r\n                            key={t} label={t} size={'small'}/>)}\r\n                    </Stack>):''}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                    <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                        Metrics\r\n                    </Typography>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                </Grid>\r\n                <AutoSizer style={{ height: 300, width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <RadarChart\r\n                            inputData={analyticData}\r\n                            axisInfo={analyticAxis}\r\n                            height={height-40} width={width}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                    <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                        Lyrics {data.track_language ? `(${data.track_language})` : \"\"}\r\n                    </Typography>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        </PaperCustom>\r\n    </Stack>\r\n}\r\nexport default DetailCard\r\n\r\nfunction CollapsibleComp ({header,banner,defaultValue,...props}) {\r\n    const [open,setopen] = useState(defaultValue);\r\n    const runningText = useSpring({\r\n        reset: open,\r\n        cancel: open,\r\n        config:{ duration: 20000},\r\n        loop:!open,\r\n        from: { transform: \"translateX(100%)\" },\r\n        to: { transform: \"translateX(-100%)\" },\r\n    });\r\n    return <Card elevation={10} sx={{mt:1}}>\r\n        <CardActions disableSpacing>\r\n            <Typography variant={\"h5\"}>{header}</Typography>\r\n            {(banner&&!open)&&<div style={{width:'100%', overflow:'hidden', marginLeft: 10, marginRight: 10, whiteSpace: 'nowrap'}}>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    <animated.div style={runningText} className={'textbanner'}>{banner}</animated.div>\r\n                    {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n                </Typography></div>}\r\n            <ExpandMore expand={open} onClick={()=>setopen(!open)}/>\r\n        </CardActions>\r\n        <Collapse in={open} unmountOnExit={true} {...props}/>\r\n    </Card>\r\n}\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport DetailCard from \"../DetailCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n        {/*<Card sx={{...sx,width:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*    <CardContent sx={{height: '100%', position: 'relative'}}>*/}\r\n\r\n                <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                      m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                      sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                    {currentDetail ?\r\n                        <DetailCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                            List</>}\r\n                </Grid>\r\n            {/*</CardContent>*/}\r\n        {/*</Card>*/}\r\n    </>\r\n    )\r\n}","import Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events}) {\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n    return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n        {({ height, width }) => {\r\n            return <Map height={height} width={width}\r\n                        locs={eventlocs} highlight={currentDetail}/>\r\n        }}\r\n    </AutoSizer>\r\n}","import {Box, Button, Typography} from \"@mui/material\";\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Dialog from \"../Dialog\";\r\nimport {useState} from \"react\";\r\nimport FilterPanel from \"../FilterPanel\";\r\n\r\n\r\nexport default function () {\r\n    const [isOpen,setIsOpen] = useState();\r\n    return <><Button\r\n        size={\"small\"}\r\n        sx={theme=>({ position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n            borderColor: alpha(theme.palette.common.white, 0.5),\r\n            borderStyle:'solid',\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            textTransform:'none',\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        width: '100%',\r\n            paddingLeft:theme.spacing(1),\r\n            paddingRight:theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        }})}\r\n        startIcon={<SearchIcon/>}\r\n        variant={\"contained\"}\r\n        onClick={()=>setIsOpen(true)}\r\n    >\r\n        <Typography variant={\"span\"}>Search...</Typography>\r\n        {/*<SearchIconWrapper>*/}\r\n        {/*    <SearchIcon />*/}\r\n        {/*</SearchIconWrapper>*/}\r\n        {/*<StyledInputBase*/}\r\n        {/*    placeholder=\"Search…\"*/}\r\n        {/*    inputProps={{ 'aria-label': 'search' }}*/}\r\n        {/*/>*/}\r\n    </Button>\r\n        <Dialog isOpen={isOpen} id={\"searchFilter\"}\r\n                title={\"Search\"}\r\n                message={<FilterPanel/>}\r\n                handleClose={()=>setIsOpen(false)}\r\n                fullWidth={true}\r\n                maxWidth={\"sm\"}\r\n                scroll={\"paper\"}\r\n        >\r\n\r\n        </Dialog>\r\n        </>\r\n}","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {useSpring, animated, easings} from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const {expand, ...other} = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard({data, onSelect}) {\r\n    return <Stack spacing={1}>\r\n        <PaperCustom>\r\n            <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n            <Typography variant=\"h4\" component=\"div\"\r\n                        onClick={data.track_name ? () => onSelect({track_name: [data.track_name]}) : null}>\r\n                {data.track_name}\r\n            </Typography>\r\n            {data.year_released && <Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n            {data.track_name_genre && <Chip label={data.track_name_genre} size={'small'}/>}\r\n        </Grid>\r\n                {data.artist_info && <Grid item>\r\n                    <Box sx={{flex: '1 0 auto', display: 'flex'}}>\r\n                        <Avatar aria-label=\"recipe\"\r\n                                src={data.artist_info.artist_image_url}\r\n                                sx={{mr: 1}}>{data.artist_info.artist_name[0]}</Avatar>\r\n                        <div>\r\n                            <Typography variant=\"h5\" color={'text.primary'}>{data.artist_info.artist_name}</Typography>\r\n                            <Typography variant=\"subtitle2\">from {data.artist_info.artist_country ?? \"N/A\"}</Typography>\r\n                        </div>\r\n                    </Box>\r\n                    {data.artist_info.artist_genres && (data.artist_info.artist_genres.map(t => <Chip key={t} label={t}\r\n                                                                                          size={'small'}/>))}\r\n                </Grid>}\r\n            </Grid>\r\n        </PaperCustom>\r\n        <PaperCustom>\r\n        {(data.spotify_uri || data.track_YouTubeID) && <Grid item xs={12}>\r\n            <Grid container>\r\n                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n            </Grid>\r\n            {data.spotify_uri && <Grid item xs={12}>\r\n                <iframe loading=\"lazy\"\r\n                        src={data.spotify_uri.replace('com/track', 'com/embed/track')}\r\n                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                        data-mce-fragment=\"1\"></iframe>\r\n            </Grid>}\r\n            {data.track_YouTubeID && <Grid item xs={12}>\r\n                <iframe width={'100%'} height={'auto'}\r\n                        loading=\"lazy\"\r\n                        src={`https://www.youtube-nocookie.com/embed/${data.track_YouTubeID}`}\r\n                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                        allowFullScreen\r\n                />\r\n            </Grid>}\r\n        </Grid>}\r\n        </PaperCustom>\r\n    </Stack>\r\n\r\n\r\n}\r\n\r\nexport default DetailCard","import {\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport ListenCard from \"../ListenCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n            <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                  m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                  sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                {currentDetail ?\r\n                    <ListenCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                        List</>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {IconButton, Menu, MenuItem} from \"@mui/material\";\r\nimport {Language as LanguageIcon} from \"@mui/icons-material\";\r\nimport allLocales from \"../../config/locales\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'language' })}\r\n        onClick={handleClick}\r\n    >\r\n        <LanguageIcon/> <span style={{fontSize:'small',paddingLeft:5,textTransform:\"uppercase\"}}>{locale}</span>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"language-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            allLocales.map(l=><MenuItem\r\n                key={l.locale}\r\n                selected={l.locale === locale}\r\n                onClick={()=>setLocale(l.locale)}\r\n            >\r\n                <LanguageIcon style={{paddingRight:5}}/> {intl.formatMessage({ id: l.locale })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {FormatSize} from \"@mui/icons-material\";\r\nimport {Box, IconButton, Menu} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\nimport FontsizeControl from \"../FontsizeControl\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DECREASE_FONT_SIZE, INCREASE_FONT_SIZE} from \"../../reducer/actions/setting\";\r\n\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const dispatch = useDispatch();\r\n    const changeFontSize = (isIncrease)=>{\r\n        if (isIncrease)\r\n            dispatch({ type: INCREASE_FONT_SIZE});\r\n        else\r\n            dispatch({ type: DECREASE_FONT_SIZE})\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <>\r\n        <IconButton title={intl.formatMessage({id: 'Font size'})}\r\n                    onClick={handleClick}>\r\n            <FormatSize/>\r\n        </IconButton>\r\n        <Menu\r\n            id=\"font-size-menu\"\r\n            aria-labelledby=\"demo-positioned-button\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n        >\r\n            <Box sx={{paddingLeft:2,paddingRight:2}}>\r\n                <FontsizeControl title={intl.formatMessage({id: 'Font size'})} onChange={changeFontSize}/>\r\n            </Box>\r\n        </Menu>\r\n    </>\r\n}","import {Checkbox, IconButton, ListItemIcon, Menu, MenuItem} from \"@mui/material\";\r\nimport {Check, SpaceDashboard as SpaceDashboardIcon} from \"@mui/icons-material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl,layoutItems,onChange}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'Layout' })}\r\n        onClick={handleClick}\r\n    >\r\n        <SpaceDashboardIcon/>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"layout-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            Object.keys(layoutItems).map(k=><MenuItem\r\n                key={k}\r\n                onClick={()=>onChange(k,layoutItems[k],!layoutItems[k].val)}\r\n            >\r\n                <ListItemIcon>\r\n                    <Checkbox checked={layoutItems[k].val} />\r\n                </ListItemIcon>{intl.formatMessage({ id: layoutItems[k].key })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {Box, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {\r\n    Brightness4 as Brightness4Icon,\r\n    BrightnessHigh as BrightnessHighIcon,\r\n    FormatSize,\r\n    Help as HelpIcon, Language, Menu as MenuIcon\r\n} from \"@mui/icons-material\";\r\nimport SpaceDashboardIcon from \"@mui/icons-material/SpaceDashboard\";\r\nimport {useTheme as useAppTheme} from \"material-ui-shell/lib/providers/Theme\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useIntl} from \"react-intl\";\r\nimport LanguageMenu from \"./LanguageMenu\";\r\nimport FontSizeMenu from \"./FontSizeMenu\";\r\nimport LayoutMenu from \"./LayoutMenu\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ({layoutItems,layoutItemsOnChange=()=>{}}){\r\n    const intl = useIntl();\r\n    const dispatch = useDispatch();\r\n    const { toggleThisTheme, isDarkMode } = useAppTheme()\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n    return <>\r\n        <img src={require('../../assets/logo.png')} loading=\"lazy\" style={{height:'auto',width:150}}></img>\r\n        <IconButton title={\"About us\"} size={\"small\"} sx={{transform:\"translate(-10px,10px)\"}}\r\n        onClick={()=>dispatch({ type: SET_MENU, opened: true })}>\r\n            <HelpIcon fontSize=\"inherit\"/>\r\n        </IconButton>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                    display: { xs: 'block', md: 'none' },\r\n                }}\r\n            >\r\n\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <IconButton\r\n                            title={\"Toggle theme\"}\r\n                            onClick={() => {\r\n                                toggleThisTheme('isDarkMode')\r\n                            }}\r\n                        >\r\n                            {isDarkMode ? (\r\n                                <BrightnessHighIcon/>\r\n                            ) : (\r\n                                <Brightness4Icon/>\r\n                            )}\r\n                        </IconButton>\r\n                        {isDarkMode ? (\r\n                            <>Light Mode</>\r\n                        ) : (\r\n                            <>Dark Mode</>\r\n                        )}\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n                        Layout\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <FontSizeMenu intl={intl}/>\r\n                        Font size\r\n                    </Typography>\r\n                </MenuItem><MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LanguageMenu intl={intl}/>\r\n                    </Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton\r\n                title={\"Toggle theme\"}\r\n                onClick={() => {\r\n                    toggleThisTheme('isDarkMode')\r\n                }}\r\n            >\r\n                {isDarkMode ? (\r\n                    <BrightnessHighIcon/>\r\n                ) : (\r\n                    <Brightness4Icon/>\r\n                )}\r\n            </IconButton>\r\n            {/*layoutItems*/}\r\n            <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n            <FontSizeMenu intl={intl}/>\r\n            <LanguageMenu intl={intl}/>\r\n        </Box>\r\n    </>\r\n}","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable/index\";\r\nimport { Responsive as ResponsiveGridLayout, WidthProvider } from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport * as FlexLayout from \"flexlayout-react\";\r\nimport \"./layout.css\";\r\nimport {AddCircle, Brightness4 as Brightness4Icon, BrightnessHigh as BrightnessHighIcon} from \"@mui/icons-material\";\r\nimport EventMap from \"../../components/EventMap\";\r\nimport Search from \"../../components/Search\";\r\nimport MediaDetail from \"../../components/MediaDetail\";\r\nimport AppHeader from \"../../components/AppHeader\";\r\nimport {actionCreators} from \"../../reducer/actions/selectedList\";\r\nimport {fields, fieldsWithoutSelected} from \"../../components/EventTable/fields\";\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n    // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail,setFuncCollection} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [layoutItems,setLayoutItems] = useState({\r\n        Earth:{key:\"Earth View\",val:true},\r\n        eventList:{key:\"Song List\",val:true},\r\n        eventDetail:{key:\"Song Details\",val:true},\r\n        eventMap:{key:\"Song List Map\",val:true},\r\n        mediaDetail:{key:\"Listen\",val:true},\r\n        eventSelectedList:{key:\"Selected Songs\",val:false},\r\n        eventSelectedListDetail:{key:\"Song List Details\",val:false},\r\n    });\r\n    const toolbarRef = useRef(null);\r\n    const layoutRef = useRef(null);\r\n    const currentDetail = getDetail();\r\n    const eventTotalData = useSelector(state => state.seletedList.currentList);\r\n    const eventSelectedData = useSelector(state => Array.from(state.seletedList.items.values( ) ));\r\n    const query = useQuery();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = useCallback((value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    },[]);\r\n\r\n    // const onTogleWin = useCallback((key)=>{\r\n    //     setLayoutItems({...layoutItems,[key]:!layoutItems[key]});\r\n    // },[layoutItems])\r\n\r\n    // const generateLayout = (k)=>{\r\n    //     switch (k){\r\n    //         case 'eventList':\r\n    //             return <EventTable data={getEvents()}\r\n    //                                isLoadingData={isLoadingEvent}\r\n    //                                onSelectRow={onSelectStream}\r\n    //                                highlightId={currentDetail}\r\n    //                                onTogleWin={()=>onTogleWin(\"eventList\")}\r\n    //             />\r\n    //         case 'eventDetail':\r\n    //             return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n    //                                 events={getEvents()}\r\n    //                                 locs={getList('locs')}\r\n    //                                 sx={{height:'100%',position:'relative'}}\r\n    //                                 onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n    //             />\r\n    //         default:\r\n    //             return ''\r\n    //     }\r\n    // }\r\n\r\n    const [layouts,setLayouts] = useState(()=>FlexLayout.Model.fromJson({\r\n        global: {\r\n            // \"splitterSize\": 1,\r\n            // \"splitterExtra\": 4,\r\n            \"tabEnableFloat\": true,\r\n            \"tabSetMinWidth\": 100,\r\n            \"tabSetMinHeight\": 100,\r\n            \"borderMinSize\": 100\r\n        },\r\n        borders:[\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"top\",\r\n                \"size\": 400,\r\n                \"active\": true,\r\n                \"children\": [\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"left\",\r\n                \"size\": 500,\r\n                \"children\": [\r\n                    {\r\n                        \"type\": \"tab\",\r\n                        \"name\": \"Earth View\",\r\n                        enableClose: false,\r\n                        \"component\": \"Earth\"\r\n                    }\r\n                ],\r\n                \"selected\": 0,\r\n            }\r\n        ],\r\n        layout: {\r\n            type: \"row\",\r\n            weight: 100,\r\n            children: [\r\n                {\"type\": \"row\",\r\n                    children: [\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Song List\",\r\n                                    component: \"eventList\",\r\n                                },\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Selected Songs\",\r\n                                    component: \"eventSelectedList\",\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Song List Map\",\r\n                                    component: \"eventMap\",\r\n                                },{\r\n                                    type: \"tab\",\r\n                                    name: \"Song Detail\",\r\n                                    component: \"eventDetail\",\r\n                                },{\r\n                                    type: \"tab\",\r\n                                    name: \"Listen\",\r\n                                    component: \"mediaDetail\",\r\n                                }\r\n                            ]\r\n                        }\r\n                        ]\r\n                }\r\n            ]\r\n        }\r\n    }));\r\n\r\n    useEffect(()=>{\r\n        dispatch(actionCreators.newList(getEvents()));\r\n    },[getEvents()])\r\n\r\n    const factory = (node) => {\r\n        let component = node.getComponent();\r\n        switch (component){\r\n            case 'eventList':\r\n                return <EventTable id='eventListTable'\r\n                                   data={eventTotalData??[]}\r\n                                   columns={fields}\r\n                                   isLoadingData={isLoadingEvent}\r\n                                   onSelectRow={onSelectStream}\r\n                                   highlightId={currentDetail}\r\n                                   totalData={eventTotalData}\r\n                                   selectedData={eventSelectedData}\r\n                                   onSendToList={(l)=>dispatch(actionCreators.addsToBasket(l))}\r\n                                   onRemoveFromList={(l)=>dispatch(actionCreators.removeItems(l))}\r\n                                   // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n                />;\r\n            case 'eventSelectedList':\r\n                return <EventTable id='eventSelectedListTable'\r\n                                   data={eventSelectedData}\r\n                                   columns={fieldsWithoutSelected}\r\n                                   isLoadingData={isLoadingEvent}\r\n                                   onSelectRow={onSelectStream}\r\n                                   highlightId={currentDetail}\r\n                                   totalData={eventTotalData}\r\n                                   selectedData={eventSelectedData}\r\n                                   disableAdding={true}\r\n                                   onSendToList={(l)=>dispatch(actionCreators.addsToBasket(l))}\r\n                                   onRemoveFromList={(l)=>dispatch(actionCreators.removeItems(l))}\r\n                                   // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n                />\r\n            case 'eventMap':\r\n                return <EventMap\r\n                    currentDetail={currentDetail}\r\n                    events={getEvents()}\r\n                    locs={getList('locs')}\r\n                />\r\n            case 'eventDetail':\r\n                return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                    events={getEvents()}\r\n                                    locs={getList('locs')}\r\n                                    sx={{height:'100%',position:'relative'}}\r\n                                    // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n                />\r\n            case 'mediaDetail':\r\n                return <MediaDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                    events={getEvents()}\r\n                                    locs={getList('locs')}\r\n                                    sx={{height:'100%',position:'relative'}}\r\n                    // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n                />\r\n            case 'Earth':\r\n                return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')}\r\n                                        countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        onSelectLegend={setFuncCollection}\r\n                                        width={width} height={height}\r\n                                        toolbarRef={toolbarRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    // const onRenderTabSet = (tabSetNode, renderValues) =>{\r\n    //     // debugger\r\n    //     if (!Object.keys(layoutItems).reduce((pre,k)=>pre && (layoutItems[k].val),true)) {\r\n    //         renderValues.stickyButtons.push(<AddCircle\r\n    //             color={'primary'}\r\n    //             title= \"Add\"\r\n    //             key= \"Add button\"\r\n    //             className={\"flexlayout__tab_toolbar_button\"}\r\n    //             style={{width: \"1.1em\", height: \"1.1em\"}}\r\n    //         />)\r\n    //         // renderValues.stickyButtons.push(React.createElement(\"img\", {\r\n    //         //     src: \"images/add.svg\",\r\n    //         //     alt: \"Add\",\r\n    //         //     key: \"Add button\",\r\n    //         //     title: \"Add Tab (using onRenderTabSet callback, see Demo)\",\r\n    //         //     style: {width: \"1.1em\", height: \"1.1em\"},\r\n    //         //     className: \"flexlayout__tab_toolbar_button\",\r\n    //         //     // onClick: function () { return _this.onAddFromTabSetButton(node); }\r\n    //         // }));\r\n    //     }\r\n    // }\r\n    const layoutItemsOnChange = useCallback((key,item,isOn)=>{\r\n        debugger\r\n        if (layoutRef.current)\r\n        {\r\n            if (isOn)\r\n                layoutRef.current.addTabToActiveTabSet({\r\n                    name: item.key,\r\n                    component: key,\r\n                });\r\n            else{\r\n                // layouts\r\n                // find id\r\n                const current = Object.keys(layouts._idMap).find(k=>layouts._idMap[k]._attributes.component===key)\r\n                if (current)\r\n                    layouts.doAction(FlexLayout.Actions.deleteTab(current))\r\n            }\r\n            layoutItems[key].val = isOn;\r\n            setLayoutItems({...layoutItems});\r\n        }\r\n    },[layoutRef,layouts])\r\n    return (<Page\r\n            appBarLeftContent={<AppHeader layoutItems={layoutItems} layoutItemsOnChange={layoutItemsOnChange}/>}\r\n            appBarContent={<>\r\n            <Search/>\r\n            <div ref={toolbarRef}></div>\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            {/*<div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>*/}\r\n            {/*    <AutoSizer style={{ height: 'calc(100vh - 64px)', width: '100%' }} >*/}\r\n            {/*        {({ height, width }) => {*/}\r\n            {/*            return <Earth3D locs={getList('locs')}*/}\r\n            {/*                            countries={getList('countries')}*/}\r\n            {/*                            onSelect={onSelect}*/}\r\n            {/*                            onSelectLegend={setFuncCollection}*/}\r\n            {/*                            width={width} height={height}*/}\r\n            {/*                            toolbarRef={toolbarRef}*/}\r\n            {/*                            zoomLoc={zoomLoc}*/}\r\n            {/*            />*/}\r\n            {/*        }}*/}\r\n            {/*    </AutoSizer>*/}\r\n            {/*</div>*/}\r\n        <div style={{height: '100%', position:'relative', pointerEvents:'all', overflow:'hidden'}}>\r\n            <FlexLayout.Layout model={layouts}\r\n                               ref={layoutRef}\r\n                               factory={factory}\r\n                               // onRenderTabSet={onRenderTabSet}\r\n                               popoutURL=\"#/popout\"\r\n                               realtimeResize={false}\r\n                               onModelChange={(m)=>{\r\n                                   // check tab\r\n                                   Object.keys(layoutItems).forEach(k=>layoutItems[k].val=false);\r\n                                   // m._root._children.forEach(m=>m._children.forEach(m=> {\r\n                                   //     if (m._attributes.component&&layoutItems[m._attributes.component])\r\n                                   //         layoutItems[m._attributes.component].val = true\r\n                                   //     else\r\n                                   //          m._children.forEach(m => layoutItems[m._attributes.component]?(layoutItems[m._attributes.component].val = true):'')\r\n                                   // }));\r\n                                   // m._borders._borders.forEach(m=>m._children.forEach(m=>layoutItems[m._attributes.component].val=true));\r\n                                   Object.values(m._idMap).forEach(m=> {\r\n                                       if (m._attributes.component&&layoutItems[m._attributes.component])\r\n                                           layoutItems[m._attributes.component].val = true\r\n                                   })\r\n                                   setLayoutItems(layoutItems)\r\n                                   setLayouts(m)\r\n                               }}\r\n            />\r\n\r\n            {/*<AutoSizer style={{ minHeight: '100%', width: '100%', position:'relative' }} >*/}\r\n            {/*    {({ height, width }) => {*/}\r\n            {/*        return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}*/}\r\n            {/*                      layouts={layouts}*/}\r\n            {/*                     onBreakpointChange={onBreakpointChange}*/}\r\n            {/*                     onLayoutChange={onLayoutChange}*/}\r\n            {/*                      preventCollision={true}*/}\r\n            {/*                      compactType={null}*/}\r\n            {/*                      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}*/}\r\n            {/*                     margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}*/}\r\n            {/*                         width={width}*/}\r\n            {/*                         rowHeight={(height-20)/10 -10}*/}\r\n            {/*                         height={height}*/}\r\n            {/*                      style={{position:'relative',height:height, pointerEvents:'all'}} >*/}\r\n            {/*            {*/}\r\n            {/*                Object.keys(layoutItems).map(k=>layoutItems[k]?<div key={k} style={{pointerEvents:'all'}}>*/}\r\n            {/*                    {generateLayout(k)}*/}\r\n            {/*                </div>:'')*/}\r\n            {/*            }*/}\r\n            {/*</ResponsiveGridLayout>}}*/}\r\n            {/*</AutoSizer>*/}\r\n        </div>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import {useLocation} from \"react-router-dom\";\r\nimport {useDatabase} from \"../Database\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport default function useQuery() {\r\n    const { search } = useLocation();\r\n    const {requestDetail} = useDatabase();\r\n    return useMemo(() => {\r\n        const queryObject = new URLSearchParams(search);\r\n        if (queryObject.get(\"id\")) {\r\n            requestDetail({_id: queryObject.get(\"id\")});\r\n            return queryObject;\r\n        }\r\n    }, [search]);\r\n}"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","BootstrapDialogTitle","children","onClose","other","_objectWithoutProperties","_excluded","_jsxs","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","theme","palette","grey","CloseIcon","_ref","_ref$isProcessing","isProcessing","_ref$isOpen","isOpen","_ref$message","id","message","_ref$title","title","_ref$action","action","_ref$haveButton","haveButton","_ref$handleAction","handleAction","_ref$handleClose","handleClose","rest","_excluded2","intl","useIntl","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","TransitionComponent","DialogContent","DialogContentText","DialogActions","Button","formatMessage","defaultMessage","disabled","exportAsImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","locs","countries","width","height","onSelect","onSelectLegend","zoomLoc","globeEl","toolbarRef","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","zoomIn","loc","zoomOut","background","Globe","globeImageUrl","mode","earthNight","earthDay","backgroundColor","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","ButtonGroup","orientation","variant","margin","padding","SaveIcon","AddIcon","RemoveIcon","fields","header","accessorKey","Cell","renderedCellValue","row","Checkbox","icon","EventOutIcon","checkedIcon","EventIcon","checked","original","inBasket","dynamic","fieldsWithoutSelected","filter","filterSearch","f","filterDisable","role","itemCount","Array","isArray","viewboxRef","ViewportList","viewportRef","items","Type","type","_createElement","key","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","state","FilterPanel","filters","useSelector","selectFilters","dispatch","useDispatch","filterOptions","setFilterOptions","_useDatabase","useDatabase","isLoading","searchByStream","getList","Stack","spacing","_filters$f$accessorKe","CusAutocomplete","multiple","size","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","value","onChange","event","setFilter","onInputChange","newInputValue","renderInput","params","TextField","label","_ref2$onInputChange","_React$useState","_React$useState2","input","setInput","Autocomplete","inputValue","newValue","reason","onBlur","FontsizeControl","alignItems","justifyContent","semicolor","_color","d3color","opacity","toString","ts","isDarkMode","isRTL","fontSize","_source","source","Function","createTheme","pageTitle","_ref$appBarLeftConten","appBarLeftContent","onBackClick","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","useAppTheme","isOnline","useOnline","_ref3","useConfig","appConfig","menu","_ref3$appBarLeadingCo","appBarLeadingContent","headerTitle","String","display","flexDirection","overflow","AppBar","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundImage","boxShadow","Toolbar","t","default","primary","dark","ChevronLeft","Typography","noWrap","flex","minHeight","LinearProgress","secondary","main","_ref$onDownloadSearch","onDownloadSearchList","_ref$onDownloadSelect","onDownloadSelectedList","anchorEl","setAnchorEl","Boolean","_Fragment","target","startIcon","currentTarget","endIcon","KeyboardArrowDownIcon","Menu","MenuItem","process","_ref$id","columns","data","totalData","selectedData","disableAdding","isLoadingData","onSelectRow","highlightId","onSendToList","onRemoveFromList","rowSelection","setRowSelection","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","_rowVirtualizerInstan","_rowVirtualizerInstan2","scrollToIndex","call","error","console","handleExportRows","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","MaterialReactTable","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowSelection","enableRowVirtualization","muiTablePaperProps","initialState","density","onSortingChange","onRowSelectionChange","rowVirtualizerProps","overscan","muiTableBodyRowProps","cursor","_id","enableColumnResizing","enableFullScreenToggle","defaultColumn","minSize","maxSize","positionToolbarAlertBanner","renderTopToolbarCustomActions","table","Box","gap","flexWrap","DownloadOption","renderBottomToolbar","_ref4","handleSelected","getSelectedRowModel","flatRows","handleRemoveSelected","Object","keys","flexGrow","MRT_ToolbarAlertBanner","stackAlertBanner","Tooltip","AddEventIcon","RemoveEventIcon","UndoRedo","canUndo","canRedo","onUndo","onRedo","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","PaperCustom","styled","Paper","borderRadius","shortest","RadarChart","inputData","axisInfo","highlight","setData","item","r","theta","fill","k","ki","_d$k$key","layout","paper_bgcolor","plot_bgcolor","autoscale","l","font","family","typography","fontFamily","text","polar","radialaxis","visible","showlegend","Plot","config","showEditInChartStudio","plotlyServerURL","scaleLinear","zoomi","d3range","Map","center","lon","zoom","setDomain","_botColor","extent","ticks","tsize","tickS","mapbox","name","x","y","marker","hoverinfo","line","_toConsumableArray","longd","latd","Math","min","_highlight","city_id","paper","mapboxTick","legend","showticksuffix","xanchor","expand","ExpandMoreIcon","transform","_data$stream_title","_data$station_frequen","_data$artist_info$art","timeStation","moment","time_station","format","track_duration","stream_title","analyticData","analyticAxis","component","station","station_frequency","station_description","Link","station_url","MapIcon","url","station_genre","Chip","elevation","Grid","container","xs","gutterBottom","track_name","track_year_released","track_popularity","Favorite","track_genre","track_loudness","artist_info","Avatar","src","artist_image_url","mr","artist_name","artist_country","artist_genres","track_instrumentation","Divider","mt","mb","AutoSizer","track_language","currentDetail","bgcolor","contrastText","DetailCard","events","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","setIsOpen","_defineProperty","shape","borderColor","alpha","common","white","borderStyle","textTransform","paddingLeft","paddingRight","up","SearchIcon","fullWidth","maxWidth","scroll","year_released","track_name_genre","spotify_uri","track_YouTubeID","replace","frameBorder","allow","allowFullScreen","ListenCard","_useLocale","useLocale","setLocale","_useLocale$locale","locale","LanguageIcon","anchorOrigin","vertical","horizontal","transformOrigin","allLocales","selected","FormatSize","isIncrease","INCREASE_FONT_SIZE","DECREASE_FONT_SIZE","layoutItems","SpaceDashboardIcon","ListItemIcon","_ref$layoutItemsOnCha","layoutItemsOnChange","_useAppTheme","toggleThisTheme","anchorElNav","setAnchorElNav","handleCloseNavMenu","require","SET_MENU","opened","HelpIcon","md","MenuIcon","keepMounted","textAlign","BrightnessHighIcon","Brightness4Icon","LayoutMenu","FontSizeMenu","LanguageMenu","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","setZoomLoc","Earth","eventList","eventDetail","eventMap","mediaDetail","eventSelectedList","eventSelectedListDetail","setLayoutItems","layoutRef","eventTotalData","seletedList","currentList","eventSelectedData","from","values","search","useLocation","queryObject","URLSearchParams","get","useQuery","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","extra","setFilters","FlexLayout","fromJson","global","borders","enableClose","weight","layouts","setLayouts","actionCreators","newList","isOn","addTabToActiveTabSet","_idMap","_attributes","doAction","deleteTab","Page","AppHeader","Search","pointerEvents","model","factory","node","getComponent","EventTable","addsToBasket","removeItems","EventMap","EventDetail","MediaDetail","popoutURL","realtimeResize","onModelChange","Backdrop","drawer"],"sourceRoot":""}