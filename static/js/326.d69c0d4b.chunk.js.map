{"version":3,"file":"static/js/326.d69c0d4b.chunk.js","mappings":"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","sources":["components/EventTable/fields.js","components/ListboxComponent/index.js","components/FilterPanel/index.js","config/menuItems.js","components/Menu/MenuContent.js"],"sourcesContent":["export const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'time_station',\r\n        header: 'Time',\r\n        type:'time',\r\n        filterDisable:true\r\n    }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\nconst filterSearchAsyn = filterSearch.filter(f=>f.dynamic);\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,searchByStream,getList} = useDatabase();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    const fields = getList('fields');\r\n\r\n    useEffect(()=>{\r\n        setFilterOptions({...fields});\r\n    },[fields])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n    </Stack>\r\n}\r\n\r\nfunction CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import React from 'react'\nimport {\n  AccountBox as AccountBoxIcon,\n  ChatBubble,\n  ChromeReaderMode,\n  Dashboard as DashboardIcon,\n  ExitToApp as ExitToAppIcon,\n  FilterList,\n  FormatTextdirectionRToL as RTLIcon,\n  FormatTextdirectionLToR as LTRIcon,\n  GetApp,\n  InfoOutlined,\n  Language as LanguageIcon,\n  Lock as LockIcon,\n  MenuOpen as MenuOpenIcon,\n  QuestionAnswer,\n  SettingsApplications as SettingsIcon,\n  Style as StyleIcon,\n  Tab,\n  ViewList,\n  Web,\n  FilterAlt,\n  Home as HomeIcon,\n    Map as MapIcon,\n    FileUpload\n} from '@mui/icons-material'\n\nimport allLocales from './locales'\nimport allThemes from './themes'\n// import FilterPanel from \"../components/FilterPanel/index_static\";\nimport FilterPanel from \"../components/FilterPanel\";\n\nconst getMenuItems = (props) => {\n  const {\n    intl,\n    updateLocale,\n    locale,\n    menuContext,\n    themeContext,\n    a2HSContext,\n    auth: authData,\n    openAbout,\n  } = props\n\n  const { toggleThis, isDesktop, isAuthMenuOpen, isMiniSwitchVisibility } =\n    menuContext\n  const { themeID, setThemeID, isRTL, toggleThisTheme } = themeContext\n\n  const { auth, setAuth } = authData\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\n\n  const localeItems = allLocales.map((l) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: l.locale }),\n      onClick: () => {\n        updateLocale(l.locale)\n      },\n      leftIcon: <LanguageIcon />,\n    }\n  })\n\n  const isAuthorised = auth.isAuthenticated\n\n  const themeItems = allThemes.map((t) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: t.id }),\n      onClick: () => {\n        setThemeID(t.id)\n      },\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\n    }\n  })\n\n  // if (isAuthMenuOpen || !isAuthorised) {\n  //   return [\n  //     {\n  //       value: '/my_account',\n  //       primaryText: intl.formatMessage({\n  //         id: 'my_account',\n  //         defaultMessage: 'My Account',\n  //       }),\n  //       leftIcon: <AccountBoxIcon />,\n  //     },\n  //   ]\n  // }\n  return [\n    {\n      value: null,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'search',\n        defaultMessage: 'Search',\n      }),\n      leftIcon: <FilterAlt />,\n      primaryTogglesNestedList: true,\n      nestedItems: [\n        {\n          primaryText: <FilterPanel/>\n        }\n      ]\n    },\n    {\n      value: '/',\n      visible: isAuthorised,\n      primaryText: intl.formatMessage({ id: 'home' }),\n      leftIcon: <HomeIcon />,\n    },\n    {\n      value: null,\n      visible: true,\n      primaryText: intl.formatMessage({ id: 'about' }),\n      leftIcon: <InfoOutlined />,\n      onClick:openAbout\n    },\n    { divider: true },\n    {\n      primaryText: intl.formatMessage({ id: 'settings' }),\n      primaryTogglesNestedList: true,\n      leftIcon: <SettingsIcon />,\n      nestedItems: [\n        {\n          primaryText: intl.formatMessage({ id: 'theme' }),\n          secondaryText: intl.formatMessage({ id: themeID }),\n          primaryTogglesNestedList: true,\n          leftIcon: <StyleIcon />,\n          nestedItems: themeItems,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'language' }),\n          secondaryText: intl.formatMessage({ id: locale }),\n          primaryTogglesNestedList: true,\n          leftIcon: <LanguageIcon />,\n          nestedItems: localeItems,\n        },\n        {\n          visible: isDesktop ? true : false,\n          onClick: () => {\n            toggleThis('isMiniSwitchVisibility')\n          },\n          primaryText: intl.formatMessage({\n            id: 'menu_mini_mode',\n          }),\n          leftIcon: isMiniSwitchVisibility ? (\n            <MenuOpenIcon />\n          ) : (\n            <ChromeReaderMode />\n          ),\n        },\n        {\n          onClick: () => {\n            toggleThisTheme('isRTL')\n          },\n          primaryText: `${isRTL ? 'LTR' : 'RTL'} mode`,\n          leftIcon: isRTL ? <LTRIcon /> : <RTLIcon />,\n        },\n      ],\n    },\n    {\n      value: null,\n      visible: isAppInstallable && !isAppInstalled,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'install',\n        defaultMessage: 'Install',\n      }),\n      leftIcon: <GetApp />,\n    },\n  ]\n}\nexport default getMenuItems\n","import React from 'react'\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\nimport SelectableMenuList from 'material-ui-shell/lib/containers/SelectableMenuList'\nimport { useAddToHomeScreen } from 'base-shell/lib/providers/AddToHomeScreen'\nimport { useAuth } from 'base-shell/lib/providers/Auth'\nimport { useConfig } from 'base-shell/lib/providers/Config'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\nimport { useLocale } from 'base-shell/lib/providers/Locale'\nimport { useMenu } from 'material-ui-shell/lib/providers/Menu'\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\nimport getMenuItems from '../../config/menuItems'\nimport {useDispatch} from \"react-redux\";\nimport {SET_MENU} from \"../../reducer/actions/setting\";\n// import FilterPanel from \"../FilterPanel\";\n\nconst Menu = (props) => {\n  const intl = useIntl()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const auth = useAuth()\n  const menuContext = useMenu()\n  const a2HSContext = useAddToHomeScreen()\n  const { toggleThis, isMiniMode, isMiniSwitchVisibility } = menuContext || {}\n  const { appConfig } = useConfig()\n  const { setLocale, locale = 'en' } = useLocale()\n  const themeContext = useAppTheme()\n  const dispatch = useDispatch();\n\n  const menuItems = getMenuItems({\n    intl,\n    locale,\n    updateLocale: setLocale,\n    menuContext,\n    themeContext,\n    appConfig,\n    a2HSContext,\n    auth,\n    openAbout:()=>{dispatch({ type: SET_MENU, opened: true });},\n    ...props,\n  }).filter((item) => {\n    return item.visible !== false\n  })\n\n\n  const index = location ? location.pathname : '/'\n\n  const handleChange = (event, index) => {\n    if (index !== undefined) {\n      toggleThis('isMobileMenuOpen', false)\n    }\n    if (index !== undefined && index !== Object(index)) {\n      navigate(index)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        /*  direction: isRTL ? 'rtl' : 'ltr' */\n      }}\n    >\n      <Scrollbar style={{ flex: 1 }}>\n        {/*<FilterPanel/>*/}\n        <SelectableMenuList\n          key={isMiniSwitchVisibility + themeContext.isRTL}\n          onIndexChange={handleChange}\n          useMinified={isMiniMode}\n          items={menuItems}\n          index={index}\n        />\n      </Scrollbar>\n    </div>\n  )\n}\n\nexport default Menu\n"],"names":["fields","accessorKey","header","dynamic","type","filterDisable","filterSearch","filter","f","React","props","ref","children","role","other","itemCount","Array","isArray","length","viewboxRef","useRef","ViewportList","viewportRef","items","count","Type","key","id","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","state","slice","FilterPanel","filters","useSelector","selectFilters","dispatch","useDispatch","useState","filterOptions","setFilterOptions","useDatabase","isLoading","searchByStream","getList","useEffect","Stack","spacing","padding","CusAutocomplete","multiple","size","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","d","value","onChange","event","setFilter","onInputChange","newInputValue","undefined","renderInput","params","TextField","label","input","setInput","Autocomplete","inputValue","newValue","reason","onBlur","intl","updateLocale","locale","menuContext","themeContext","a2HSContext","authData","auth","openAbout","toggleThis","isDesktop","isMiniSwitchVisibility","isAuthMenuOpen","themeID","setThemeID","isRTL","toggleThisTheme","isAppInstallable","setAuth","isAppInstalled","deferredPrompt","localeItems","allLocales","l","visible","primaryText","formatMessage","onClick","leftIcon","Language","isAuthorised","isAuthenticated","themeItems","allThemes","t","Style","style","color","prompt","defaultMessage","FilterAlt","primaryTogglesNestedList","nestedItems","Home","InfoOutlined","divider","secondaryText","MenuOpen","ChromeReaderMode","GetApp","useIntl","navigate","useNavigate","location","useLocation","useAuth","useMenu","useAddToHomeScreen","isMiniMode","appConfig","useConfig","useLocale","setLocale","useAppTheme","menuItems","getMenuItems","SET_MENU","opened","item","index","pathname","display","flexDirection","height","flex","onIndexChange","Object","useMinified"],"sourceRoot":""}