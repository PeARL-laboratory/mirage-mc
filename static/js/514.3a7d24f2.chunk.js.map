{"version":3,"file":"static/js/514.3a7d24f2.chunk.js","mappings":"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","sources":["components/Dialog/index.js","components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","components/ListboxComponent/index.js","components/FilterPanel/index.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/PaperCustom/index.js","components/DetailCard/index.js","components/EventDetail/index.js","components/Map/index.js","components/EventMap/index.js","components/Search/index.js","components/ListenCard/index.js","components/MediaDetail/index.js","pages/LandingPage/LandingPage.js","Providers/Query/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, IconButton,\r\n    Slide,\r\n    useMediaQuery,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => (\r\n    <Slide direction=\"up\" {...props} ref={ref} />\r\n))\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst QuestionDialog = ({\r\n                            isProcessing = false,\r\n                            isOpen = false,\r\n                            id = '',\r\n                            message = '',\r\n                            title = '',\r\n                            action = '',\r\n                            haveButton=false,\r\n                            handleAction = () => {},\r\n                            handleClose = () => {},\r\n                            ...rest\r\n                        }) => {\r\n    const intl = useIntl()\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            {...rest}\r\n        >\r\n            {/*<DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>*/}\r\n            <BootstrapDialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                {title}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {message}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {haveButton&&<DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    {intl.formatMessage({id: 'cancel', defaultMessage: 'Cancel'})}\r\n                </Button>\r\n                <Button\r\n                    disabled={isProcessing}\r\n                    onClick={() => {\r\n                        handleAction(handleClose)\r\n                    }}\r\n                    color=\"secondary\"\r\n                >\r\n                    {action}\r\n                </Button>\r\n            </DialogActions>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default QuestionDialog","import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Button, ButtonGroup, Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {alpha} from \"@mui/material/styles\";\r\n\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend, zoomLoc, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n    useEffect(()=>{\r\n        onSelectLegend('selectCountry',(d)=>{\r\n            onSelect({country:[d['title']]});\r\n            zoomTo(d.long,d.lat);\r\n        })\r\n    },[zoomTo,onSelect])\r\n\r\n    const zoomIn = useCallback(()=>{\r\n        if (globeEl.current) {\r\n            const loc = {...globeEl.current.pointOfView()}\r\n            loc.altitude = loc.altitude/2\r\n            globeEl.current.pointOfView(loc,2000)\r\n        }\r\n    },[globeEl])\r\n    const zoomOut = useCallback(()=>{\r\n        if (globeEl.current) {\r\n            const loc = {...globeEl.current.pointOfView()}\r\n            loc.altitude = loc.altitude*2\r\n            globeEl.current.pointOfView(loc,2000)\r\n        }\r\n    },[globeEl])\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n            //      marginTop:'-20vh',\r\n            // height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                // height={height*1.2}\r\n                height={height}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n                showAtmosphere={true}\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {/*{toolbarRef&&<Portal container={toolbarRef.current}>*/}\r\n        {/*    <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>*/}\r\n        {/*</Portal>}*/}\r\n        <ButtonGroup\r\n            orientation=\"vertical\"\r\n            aria-label=\"map tool\"\r\n            variant={\"contained\"}\r\n            sx={{position:'absolute',right:0,top:0,margin:1,\r\n                // backgroundColor: theme=>alpha(theme.palette.common.white, 0.15),\r\n                '& button':{\r\n                    padding:1,\r\n                    // '&:hover': {\r\n                    //     backgroundColor: theme=>alpha(theme.palette.common.white, 0.25),\r\n                    // }\r\n            }}}\r\n        >\r\n\r\n            <Button onClick={onSaveImage}><SaveIcon/></Button>\r\n            <Button onClick={zoomIn}><AddIcon/></Button>\r\n            <Button onClick={zoomOut}><RemoveIcon/></Button>\r\n        </ButtonGroup>\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    }\r\n    // ,\r\n    // {\r\n    //     accessorKey: 'time_station',\r\n    //     header: 'Time',\r\n    //     type:'time',\r\n    //     filterDisable:true,\r\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    // }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\n\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,searchByStream,getList} = useDatabase();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    const fields = getList('fields');\r\n\r\n    useEffect(()=>{\r\n        setFilterOptions({...fields});\r\n    },[fields])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n        {/*<TimeRangePicker*/}\r\n        {/*    fromVal={(filters[\"time_station\"]?.from)??null}*/}\r\n        {/*    toVal={(filters[\"time_station\"]?.to)??null}*/}\r\n        {/*    onChange={(key,value) => {*/}\r\n        {/*        const val = {...(filters[\"time_station\"] ?? {})};*/}\r\n        {/*        if (value)*/}\r\n        {/*            val[key] = value;*/}\r\n        {/*        else*/}\r\n        {/*            delete val[key];*/}\r\n        {/*        dispatch(setFilter({key:\"time_station\",value:val}));*/}\r\n        {/*    }}*/}\r\n        {/*/>*/}\r\n    </Stack>\r\n}\r\n\r\nfunction CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const { toggleThis, isDesktop, isMenuOpen } = useContext(MenuContext)\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n    const handleDrawerMenuClick = () => {\r\n        if (!isMenuOpen) {\r\n            toggleThis('isMiniMode', false)\r\n            toggleThis('isMenuOpen', true)\r\n            if (!isDesktop) {\r\n                toggleThis('isMobileMenuOpen')\r\n            }\r\n        } else {\r\n            toggleThis('isMobileMenuOpen')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={isDesktop ? 'absolute' : undefined}\r\n                sx={{\r\n                    width:\r\n                        isMenuOpen && isDesktop ? `calc(100% - ${width}px)` : undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    {(isMenuOpen && isDesktop) ||\r\n                        (!onBackClick && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerMenuClick}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ))}\r\n                    {/* james- check if this is dead code? */}\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {!onBackClick && isMenuOpen && false && (\r\n                        <div style={{ marginRight: 32 }} />\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {/* james- check if this is dead code? */}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\n\r\n\r\n\r\n\r\nconst EventTable = ({data,isLoadingData,onSelectRow,highlightId}) => {\r\n    const columns = fields;\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        rowVirtualizerInstanceRef.current?.scrollToIndex(0);\r\n    }, [sorting]);\r\n\r\n\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            enableBottomToolbar={false}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx:{display:'flex', flexDirection:\"column\", height:'100%'}}}\r\n            muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 8 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.stream_detail_id=== row.original.stream_detail_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            // muiTableBodyProps={{\r\n            //     sx: {\r\n            //         //stripe the rows, make odd rows a darker color\r\n            //         '& tr': {\r\n            //             backgroundColor: (theme)=> theme.mode == 'dark' ? 'rgba(0,0,0,0.58)' : 'rgba(255,255,255,0.76)',\r\n            //         },\r\n            //     },\r\n            // }}\r\n            renderTopToolbarCustomActions={({ table }) => (\r\n                <Box\r\n                    sx={{ display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap' }}\r\n                >\r\n                    <Button\r\n                        color=\"primary\"\r\n                        target={\"_blank\"}\r\n                        size={\"small\"}\r\n                        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n                        // onClick={handleExportData}\r\n                        href={process.env.REACT_APP_DATA_DOWNLOAD}\r\n                        startIcon={<SaveIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Download All Data\r\n                    </Button>\r\n                    <Button\r\n                        disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                        //export all rows, including from the next page, (still respects filtering and sorting)\r\n                        onClick={() =>\r\n                            handleExportRows(table.getPrePaginationRowModel().rows)\r\n                        }\r\n                        startIcon={<SaveIcon />}\r\n                        variant=\"contained\"\r\n                        size={\"small\"}\r\n                    >\r\n                        Export Current Data\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    disabled={table.getRowModel().rows.length === 0}*/}\r\n                    {/*    //export all rows as seen on the screen (respects pagination, sorting, filtering, etc.)*/}\r\n                    {/*    onClick={() => handleExportRows(table.getRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Page Rows*/}\r\n                    {/*</Button>*/}\r\n                    {/*<Button*/}\r\n                    {/*    disabled={*/}\r\n                    {/*        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()*/}\r\n                    {/*    }*/}\r\n                    {/*    //only export selected rows*/}\r\n                    {/*    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Selected Rows*/}\r\n                    {/*</Button>*/}\r\n                </Box>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {styled} from \"@mui/material/styles\";\r\nimport {Paper} from \"@mui/material\";\r\n\r\nconst PaperCustom = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    borderRadius:10,\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default PaperCustom;","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Paper, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useSpring, animated, easings  } from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    const timeStation = moment(data.time_station).format('LLL');\r\n    const stream_name = data.stream_name??'N/A';\r\n    return <Stack spacing={1}>\r\n        <PaperCustom>\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station} <Typography component={\"span\"} variant={\"subtitle1\"}>{data.broadcast_frequency??'0.0'} FM</Typography>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>\r\n            </table>\r\n        </PaperCustom>\r\n\r\n        <PaperCustom>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Stream name</td><td>{stream_name}</td></tr>\r\n                <tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>\r\n                <tr><td>Description</td><td>{data.stream_description}</td></tr>\r\n                <tr><td>Genre</td><td>{data.stream_genre && <Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                    <Chip label={data.stream_genre} size={'small'}/></Stack>}</td></tr>\r\n            </table>\r\n        </PaperCustom>\r\n        <PaperCustom elevation={3}>\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n                <Typography color=\"text.secondary\" gutterBottom> {timeStation}</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant=\"h4\" component=\"div\"\r\n                            onClick={data.stream_song ? () => onSelect({stream_song: [data.stream_song]}) : null}>\r\n                    {data.stream_song}\r\n                </Typography>\r\n                {data.year_released && <Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n                {data.stream_song_genre && <Chip label={data.stream_song_genre} size={'small'}/>}\r\n            </Grid>\r\n            <Grid item >\r\n                <Box sx={{flex: '1 0 auto', display: 'flex'}}>\r\n                    <Avatar aria-label=\"recipe\"\r\n                            src={data.stream_artist_image_url}\r\n                            sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                    <div>\r\n                        <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                        <Typography variant=\"subtitle2\">from {data.stream_artist_country ?? \"N/A\"}</Typography>\r\n                    </div>\r\n                </Box>\r\n                {data.stream_artist_genre && (data.stream_artist_genre.map(t => <Chip key={t} label={t} size={'small'}/>))}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {data.stream_instrument_list && (\r\n                    <Stack direction={'row'} spacing={1} flexWrap sx={{width: '100%', flexWrap: 'wrap'}}>\r\n                        <Typography>Instruments: </Typography>\r\n                        {data.stream_instrument_list.split(';').map(t => <Chip\r\n                            key={t} label={t} size={'small'}/>)}\r\n                    </Stack>)}\r\n            </Grid>\r\n            {data.stream_lyrics && <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                    <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                        Lyrics {data.stream_lyrics_language ? `(${data.stream_lyrics_language})` : \"\"}\r\n                    </Typography>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                </Grid>\r\n                {data.stream_lyrics}\r\n            </Grid>}\r\n        </Grid>\r\n        </PaperCustom>\r\n    </Stack>\r\n}\r\nexport default DetailCard\r\n\r\nfunction CollapsibleComp ({header,banner,defaultValue,...props}) {\r\n    const [open,setopen] = useState(defaultValue);\r\n    const runningText = useSpring({\r\n        reset: open,\r\n        cancel: open,\r\n        config:{ duration: 20000},\r\n        loop:!open,\r\n        from: { transform: \"translateX(100%)\" },\r\n        to: { transform: \"translateX(-100%)\" },\r\n    });\r\n    return <Card elevation={10} sx={{mt:1}}>\r\n        <CardActions disableSpacing>\r\n            <Typography variant={\"h5\"}>{header}</Typography>\r\n            {(banner&&!open)&&<div style={{width:'100%', overflow:'hidden', marginLeft: 10, marginRight: 10, whiteSpace: 'nowrap'}}>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    <animated.div style={runningText} className={'textbanner'}>{banner}</animated.div>\r\n                    {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n                </Typography></div>}\r\n            <ExpandMore expand={open} onClick={()=>setopen(!open)}/>\r\n        </CardActions>\r\n        <Collapse in={open} unmountOnExit={true} {...props}/>\r\n    </Card>\r\n}\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport DetailCard from \"../DetailCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n        {/*<Card sx={{...sx,width:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*    <CardContent sx={{height: '100%', position: 'relative'}}>*/}\r\n\r\n                <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                      m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                      sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                    {currentDetail ?\r\n                        <DetailCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                            List</>}\r\n                </Grid>\r\n            {/*</CardContent>*/}\r\n        {/*</Card>*/}\r\n    </>\r\n    )\r\n}","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = {\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    };\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","import Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events}) {\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n    return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n        {({ height, width }) => {\r\n            return <Map height={height} width={width}\r\n                        locs={eventlocs} highlight={currentDetail}/>\r\n        }}\r\n    </AutoSizer>\r\n}","import {Box, Button, Typography} from \"@mui/material\";\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Dialog from \"../Dialog\";\r\nimport {useState} from \"react\";\r\nimport FilterPanel from \"../FilterPanel\";\r\n\r\n\r\nexport default function () {\r\n    const [isOpen,setIsOpen] = useState();\r\n    return <><Button\r\n        size={\"small\"}\r\n        sx={theme=>({ position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n            borderColor: alpha(theme.palette.common.white, 0.5),\r\n            borderStyle:'solid',\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            textTransform:'none',\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        width: '100%',\r\n            paddingLeft:theme.spacing(1),\r\n            paddingRight:theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        }})}\r\n        startIcon={<SearchIcon/>}\r\n        variant={\"contained\"}\r\n        onClick={()=>setIsOpen(true)}\r\n    >\r\n        <Typography variant={\"span\"}>Search...</Typography>\r\n        {/*<SearchIconWrapper>*/}\r\n        {/*    <SearchIcon />*/}\r\n        {/*</SearchIconWrapper>*/}\r\n        {/*<StyledInputBase*/}\r\n        {/*    placeholder=\"Search…\"*/}\r\n        {/*    inputProps={{ 'aria-label': 'search' }}*/}\r\n        {/*/>*/}\r\n    </Button>\r\n        <Dialog isOpen={isOpen} id={\"searchFilter\"}\r\n                title={\"Search\"}\r\n                message={<FilterPanel/>}\r\n                handleClose={()=>setIsOpen(false)}\r\n                fullWidth={true}\r\n                maxWidth={\"sm\"}\r\n                scroll={\"paper\"}\r\n        >\r\n\r\n        </Dialog>\r\n        </>\r\n}","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {useSpring, animated, easings} from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const {expand, ...other} = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard({data, onSelect}) {\r\n    return <Stack spacing={1}>\r\n        <PaperCustom>\r\n            <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n            <Typography variant=\"h4\" component=\"div\"\r\n                        onClick={data.stream_song ? () => onSelect({stream_song: [data.stream_song]}) : null}>\r\n                {data.stream_song}\r\n            </Typography>\r\n            {data.year_released && <Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n            {data.stream_song_genre && <Chip label={data.stream_song_genre} size={'small'}/>}\r\n        </Grid>\r\n        <Grid item>\r\n            <Box sx={{flex: '1 0 auto', display: 'flex'}}>\r\n                <Avatar aria-label=\"recipe\"\r\n                        src={data.stream_artist_image_url}\r\n                        sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                <div>\r\n                    <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                    <Typography variant=\"subtitle2\">from {data.stream_artist_country ?? \"N/A\"}</Typography>\r\n                </div>\r\n            </Box>\r\n            {data.stream_artist_genre && (data.stream_artist_genre.map(t => <Chip key={t} label={t} size={'small'}/>))}\r\n        </Grid>\r\n            </Grid>\r\n        </PaperCustom>\r\n        <PaperCustom>\r\n        {(data.spotify_uri || data.youtube_url) && <Grid item xs={12}>\r\n            <Grid container>\r\n                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n            </Grid>\r\n            {data.spotify_uri && <Grid item xs={12}>\r\n                <iframe loading=\"lazy\"\r\n                        src={data.spotify_uri.replace('com/track', 'com/embed/track')}\r\n                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                        data-mce-fragment=\"1\"></iframe>\r\n            </Grid>}\r\n            {data.youtube_url && <Grid item xs={12}>\r\n                <iframe width={'100%'} height={'auto'}\r\n                        loading=\"lazy\"\r\n                        src={data.youtube_url.replace(\"youtube.com/watch?v=\", \"youtube-nocookie.com/embed/\")}\r\n                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                        allowFullScreen\r\n                />\r\n            </Grid>}\r\n        </Grid>}\r\n        </PaperCustom>\r\n    </Stack>\r\n\r\n\r\n}\r\n\r\nexport default DetailCard","import {\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport ListenCard from \"../ListenCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n            <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                  m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                  sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                {currentDetail ?\r\n                    <ListenCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                        List</>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable/index\";\r\nimport { Responsive as ResponsiveGridLayout, WidthProvider } from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport * as FlexLayout from \"flexlayout-react\";\r\nimport \"./layout.css\";\r\nimport {AddCircle} from \"@mui/icons-material\";\r\nimport EventMap from \"../../components/EventMap\";\r\nimport Search from \"../../components/Search\";\r\nimport MediaDetail from \"../../components/MediaDetail\";\r\n\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n    // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail,setFuncCollection} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [layoutItems,setLayoutItems] = useState({eventList:true,eventDetail:true,eventMap:true});\r\n    const toolbarRef = useRef(null);\r\n    const currentDetail = getDetail();\r\n    const query = useQuery();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = useCallback((value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    },[]);\r\n\r\n    // const onTogleWin = useCallback((key)=>{\r\n    //     setLayoutItems({...layoutItems,[key]:!layoutItems[key]});\r\n    // },[layoutItems])\r\n\r\n    // const generateLayout = (k)=>{\r\n    //     switch (k){\r\n    //         case 'eventList':\r\n    //             return <EventTable data={getEvents()}\r\n    //                                isLoadingData={isLoadingEvent}\r\n    //                                onSelectRow={onSelectStream}\r\n    //                                highlightId={currentDetail}\r\n    //                                onTogleWin={()=>onTogleWin(\"eventList\")}\r\n    //             />\r\n    //         case 'eventDetail':\r\n    //             return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n    //                                 events={getEvents()}\r\n    //                                 locs={getList('locs')}\r\n    //                                 sx={{height:'100%',position:'relative'}}\r\n    //                                 onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n    //             />\r\n    //         default:\r\n    //             return ''\r\n    //     }\r\n    // }\r\n\r\n    const [layouts,setLayouts] = useState(()=>FlexLayout.Model.fromJson({\r\n        global: {\r\n            // \"splitterSize\": 1,\r\n            // \"splitterExtra\": 4,\r\n            \"tabEnableFloat\": true,\r\n            \"tabSetMinWidth\": 100,\r\n            \"tabSetMinHeight\": 100,\r\n            \"borderMinSize\": 100\r\n        },\r\n        borders:[\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"top\",\r\n                \"size\": 400,\r\n                \"active\": true,\r\n                \"children\": [\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"left\",\r\n                \"size\": 500,\r\n                \"children\": [\r\n                    {\r\n                        \"type\": \"tab\",\r\n                        \"name\": \"Earth View\",\r\n                        enableClose: false,\r\n                        \"component\": \"Earth\"\r\n                    }\r\n                ],\r\n                \"selected\": 0,\r\n            }\r\n        ],\r\n        layout: {\r\n            type: \"row\",\r\n            weight: 100,\r\n            children: [\r\n                {\"type\": \"row\",\r\n                    children: [\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Song List\",\r\n                                    component: \"eventList\",\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Song List Map\",\r\n                                    component: \"eventMap\",\r\n                                },{\r\n                                    type: \"tab\",\r\n                                    name: \"Song Detail\",\r\n                                    component: \"eventDetail\",\r\n                                },{\r\n                                    type: \"tab\",\r\n                                    name: \"Listen\",\r\n                                    component: \"mediaDetail\",\r\n                                }\r\n                            ]\r\n                        }\r\n                        ]\r\n                }\r\n            ]\r\n        }\r\n    }));\r\n\r\n    const factory = (node) => {\r\n        let component = node.getComponent();\r\n        switch (component){\r\n            case 'eventList':\r\n                return <EventTable data={getEvents()}\r\n                                   isLoadingData={isLoadingEvent}\r\n                                   onSelectRow={onSelectStream}\r\n                                   highlightId={currentDetail}\r\n                                   // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n                />\r\n            case 'eventMap':\r\n                return <EventMap\r\n                    currentDetail={currentDetail}\r\n                    events={getEvents()}\r\n                    locs={getList('locs')}\r\n                />\r\n            case 'eventDetail':\r\n                return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                    events={getEvents()}\r\n                                    locs={getList('locs')}\r\n                                    sx={{height:'100%',position:'relative'}}\r\n                                    // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n                />\r\n            case 'mediaDetail':\r\n                return <MediaDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                    events={getEvents()}\r\n                                    locs={getList('locs')}\r\n                                    sx={{height:'100%',position:'relative'}}\r\n                    // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n                />\r\n            case 'Earth':\r\n                return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')}\r\n                                        countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        onSelectLegend={setFuncCollection}\r\n                                        width={width} height={height}\r\n                                        toolbarRef={toolbarRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    const onRenderTabSet = (tabSetNode, renderValues) =>{\r\n        if (Object.keys(layoutItems).reduce((pre,k)=>pre || (layoutItems[k]===false),false)) {\r\n            renderValues.stickyButtons.push(<AddCircle\r\n                title= \"Add\"\r\n                key= \"Add button\"\r\n                className={\"flexlayout__tab_toolbar_button\"}\r\n                style={{width: \"1.1em\", height: \"1.1em\"}}\r\n            />)\r\n            // renderValues.stickyButtons.push(React.createElement(\"img\", {\r\n            //     src: \"images/add.svg\",\r\n            //     alt: \"Add\",\r\n            //     key: \"Add button\",\r\n            //     title: \"Add Tab (using onRenderTabSet callback, see Demo)\",\r\n            //     style: {width: \"1.1em\", height: \"1.1em\"},\r\n            //     className: \"flexlayout__tab_toolbar_button\",\r\n            //     // onClick: function () { return _this.onAddFromTabSetButton(node); }\r\n            // }));\r\n        }\r\n    }\r\n\r\n    return (<Page appBarContent={<>\r\n        {/*<SearchField/>*/}\r\n        {/*    <div>*/}\r\n        {/*        {*/}\r\n        {/*            Object.keys(layoutItems).map(k=>layoutItems[k]?'':<div key={`plugin-${k}`}*/}\r\n        {/*            onClick={()=>onTogleWin(k)}>*/}\r\n        {/*                <Button>{k}</Button>*/}\r\n        {/*            </div>)*/}\r\n        {/*        }*/}\r\n        {/*    </div>*/}\r\n            <Search/>\r\n            <div ref={toolbarRef}></div>\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            {/*<div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>*/}\r\n            {/*    <AutoSizer style={{ height: 'calc(100vh - 64px)', width: '100%' }} >*/}\r\n            {/*        {({ height, width }) => {*/}\r\n            {/*            return <Earth3D locs={getList('locs')}*/}\r\n            {/*                            countries={getList('countries')}*/}\r\n            {/*                            onSelect={onSelect}*/}\r\n            {/*                            onSelectLegend={setFuncCollection}*/}\r\n            {/*                            width={width} height={height}*/}\r\n            {/*                            toolbarRef={toolbarRef}*/}\r\n            {/*                            zoomLoc={zoomLoc}*/}\r\n            {/*            />*/}\r\n            {/*        }}*/}\r\n            {/*    </AutoSizer>*/}\r\n            {/*</div>*/}\r\n        <div style={{height: '100%', position:'relative', pointerEvents:'all', overflow:'hidden'}}>\r\n            <FlexLayout.Layout model={layouts}\r\n                               factory={factory}\r\n                               onRenderTabSet={onRenderTabSet}\r\n                               popoutURL=\"#/popout\"\r\n                               onModelChange={(m)=>{\r\n                                   // check tab\r\n                                   Object.keys(layoutItems).forEach(k=>layoutItems[k]=false);\r\n                                   m._root._children.forEach(m=>m._children.forEach(m=>layoutItems[m._attributes.component]=true))\r\n                                   setLayoutItems(layoutItems)\r\n                               }}\r\n            />\r\n\r\n            {/*<AutoSizer style={{ minHeight: '100%', width: '100%', position:'relative' }} >*/}\r\n            {/*    {({ height, width }) => {*/}\r\n            {/*        return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}*/}\r\n            {/*                      layouts={layouts}*/}\r\n            {/*                     onBreakpointChange={onBreakpointChange}*/}\r\n            {/*                     onLayoutChange={onLayoutChange}*/}\r\n            {/*                      preventCollision={true}*/}\r\n            {/*                      compactType={null}*/}\r\n            {/*                      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}*/}\r\n            {/*                     margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}*/}\r\n            {/*                         width={width}*/}\r\n            {/*                         rowHeight={(height-20)/10 -10}*/}\r\n            {/*                         height={height}*/}\r\n            {/*                      style={{position:'relative',height:height, pointerEvents:'all'}} >*/}\r\n            {/*            {*/}\r\n            {/*                Object.keys(layoutItems).map(k=>layoutItems[k]?<div key={k} style={{pointerEvents:'all'}}>*/}\r\n            {/*                    {generateLayout(k)}*/}\r\n            {/*                </div>:'')*/}\r\n            {/*            }*/}\r\n            {/*</ResponsiveGridLayout>}}*/}\r\n            {/*</AutoSizer>*/}\r\n        </div>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import {useLocation} from \"react-router-dom\";\r\nimport {useDatabase} from \"../Database\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport default function useQuery() {\r\n    const { search } = useLocation();\r\n    const {requestDetail} = useDatabase();\r\n    return useMemo(() => {\r\n        const queryObject = new URLSearchParams(search);\r\n        if (queryObject.get(\"id\")) {\r\n            requestDetail({_id: queryObject.get(\"id\")});\r\n            return queryObject;\r\n        }\r\n    }, [search]);\r\n}"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","BootstrapDialogTitle","children","onClose","other","_objectWithoutProperties","_excluded","_jsxs","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","theme","palette","grey","CloseIcon","_ref","_ref$isProcessing","isProcessing","_ref$isOpen","isOpen","_ref$message","id","message","_ref$title","title","_ref$action","action","_ref$haveButton","haveButton","_ref$handleAction","handleAction","_ref$handleClose","handleClose","rest","_excluded2","intl","useIntl","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","TransitionComponent","DialogContent","DialogContentText","DialogActions","Button","formatMessage","defaultMessage","disabled","exportAsImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","locs","countries","width","height","onSelect","onSelectLegend","zoomLoc","globeEl","toolbarRef","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","zoomIn","loc","zoomOut","background","Globe","globeImageUrl","earthNight","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","ButtonGroup","orientation","variant","margin","padding","SaveIcon","AddIcon","RemoveIcon","fields","accessorKey","header","dynamic","filterSearch","filter","f","filterDisable","role","itemCount","Array","isArray","viewboxRef","ViewportList","viewportRef","items","Type","type","_createElement","key","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","state","FilterPanel","filters","useSelector","selectFilters","dispatch","useDispatch","filterOptions","setFilterOptions","_useDatabase","useDatabase","isLoading","searchByStream","getList","Stack","spacing","_filters$f$accessorKe","CusAutocomplete","multiple","size","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","value","onChange","event","setFilter","onInputChange","newInputValue","renderInput","params","TextField","label","_ref2$onInputChange","_React$useState","_React$useState2","input","setInput","Autocomplete","inputValue","newValue","reason","onBlur","semicolor","_color","d3color","opacity","toString","ts","isDarkMode","isRTL","fontSize","_source","source","Function","createTheme","mode","pageTitle","onBackClick","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","useAppTheme","isOnline","useOnline","_ref3","useConfig","appConfig","menu","_ref3$width","_ref3$appBarLeadingCo","appBarLeadingContent","_useContext","useContext","MenuContext","toggleThis","isDesktop","isMenuOpen","headerTitle","String","display","flexDirection","overflow","AppBar","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","edge","MenuIcon","ChevronLeft","Typography","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","data","isLoadingData","onSelectRow","highlightId","columns","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","_rowVirtualizerInstan","scrollToIndex","MaterialReactTable","enableBottomToolbar","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowVirtualization","muiTablePaperProps","muiTableContainerProps","flexGrow","initialState","density","onSortingChange","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","_id","enableColumnResizing","defaultColumn","minSize","maxSize","renderTopToolbarCustomActions","table","Box","gap","flexWrap","target","process","startIcon","getPrePaginationRowModel","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","UndoRedo","canUndo","canRedo","onUndo","onRedo","_Fragment","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","PaperCustom","styled","Paper","borderRadius","shortest","expand","ExpandMoreIcon","transform","_data$stream_name","_data$broadcast_frequ","_data$stream_artist_c","timeStation","moment","time_station","format","stream_name","component","station","broadcast_frequency","station_description","Link","station_url","MapIcon","url","stream_url","stream_description","stream_genre","Chip","elevation","Grid","container","item","xs","gutterBottom","stream_song","year_released","stream_song_genre","Avatar","src","stream_artist_image_url","mr","stream_artist","stream_artist_country","stream_artist_genre","t","stream_instrument_list","split","stream_lyrics","Divider","mt","mb","stream_lyrics_language","currentDetail","bgcolor","paper","primary","contrastText","DetailCard","scaleLinear","zoomi","d3range","Map","highlight","setData","center","lon","zoom","setDomain","_botColor","extent","text","ticks","tsize","tickS","mapbox","name","x","y","marker","visible","hoverinfo","showlegend","line","_toConsumableArray","longd","latd","Math","min","_highlight","city_id","layout","paper_bgcolor","plot_bgcolor","autoscale","r","l","mapboxTick","font","family","typography","fontFamily","legend","showticksuffix","xanchor","Plot","config","showEditInChartStudio","plotlyServerURL","events","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","AutoSizer","_ref4","setIsOpen","_defineProperty","shape","borderColor","alpha","common","white","borderStyle","textTransform","paddingLeft","paddingRight","up","SearchIcon","fullWidth","maxWidth","scroll","spotify_uri","youtube_url","replace","frameBorder","allow","allowFullScreen","ListenCard","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","setZoomLoc","eventList","eventDetail","eventMap","layoutItems","setLayoutItems","search","useLocation","queryObject","URLSearchParams","get","useQuery","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","SET_MENU","opened","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","extra","setFilters","FlexLayout","fromJson","global","borders","enableClose","weight","layouts","Page","Search","pointerEvents","model","factory","node","getComponent","EventTable","EventMap","EventDetail","MediaDetail","onRenderTabSet","tabSetNode","renderValues","Object","keys","reduce","pre","k","stickyButtons","AddCircle","className","popoutURL","onModelChange","_root","_children","_attributes","Backdrop","drawer","textAlign"],"sourceRoot":""}