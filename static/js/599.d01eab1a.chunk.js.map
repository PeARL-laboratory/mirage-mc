{"version":3,"file":"static/js/599.d01eab1a.chunk.js","mappings":"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","sources":["components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/DetailCard/index.js","components/EventDetail/index.js","components/Map/index.js","components/EventMap/index.js","pages/LandingPage/LandingPage.js","Providers/Query/index.js"],"sourcesContent":["import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\n\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend, zoomLoc, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n    useEffect(()=>{\r\n        debugger\r\n        onSelectLegend('selectCountry',(d)=>{\r\n            onSelect({country:[d['title']]});\r\n            zoomTo(d.long,d.lat);\r\n        })\r\n    },[zoomTo,onSelect])\r\n\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n            //      marginTop:'-20vh',\r\n            // height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                // height={height*1.2}\r\n                height={height}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n                showAtmosphere={true}\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {toolbarRef&&<Portal container={toolbarRef.current}>\r\n            <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>\r\n        </Portal>}\r\n        {/*{legendHolderRef&&<Portal container={legendHolderRef.current}>*/}\r\n        {/*    <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*        <Stack sx={{m:1,p:0}}>*/}\r\n        {/*            <Typography>Top Stations by Country</Typography>*/}\r\n        {/*            {*/}\r\n        {/*                countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {*/}\r\n        {/*                    onSelect({country:[d['title']]});*/}\r\n        {/*                    zoomTo(d.long,d.lat);*/}\r\n        {/*                }}>*/}\r\n        {/*                    <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}*/}\r\n        {/*                </Typography>)*/}\r\n        {/*            }*/}\r\n        {/*            /!*{colorsCategory.domain().map(d => <Typography key={d} variant={'subtitle2'} onClick={()=> {*!/*/}\r\n        {/*            /!*    onSelect({country:[d]});*!/*/}\r\n        {/*            /!*    if (contriesMap[d])*!/*/}\r\n        {/*            /!*        zoomTo(contriesMap[d].long,contriesMap[d].lat);*!/*/}\r\n        {/*            /!*}}>*!/*/}\r\n        {/*            /!*    <div style={{width:50*countriesScale(contriesMap[d]?.count),height:10, backgroundColor:colorsCategory(d), display:'inline-block', marginRight:5}}></div>{d}*!/*/}\r\n        {/*            /!*</Typography>)}*!/*/}\r\n        {/*            /!*<Typography variant={'subtitle2'} >*!/*/}\r\n        {/*            /!*    <div style={{width:10,height:10, backgroundColor:colorsCategory('Other'), display:'inline-block', marginRight:5}}></div>---Other---*!/*/}\r\n        {/*            /!*</Typography>*!/*/}\r\n        {/*        </Stack>*/}\r\n        {/*    </Card>*/}\r\n        {/*</Portal>}*/}\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    }\r\n    // ,\r\n    // {\r\n    //     accessorKey: 'time_station',\r\n    //     header: 'Time',\r\n    //     type:'time',\r\n    //     filterDisable:true,\r\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    // }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const { toggleThis, isDesktop, isMenuOpen } = useContext(MenuContext)\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n    const handleDrawerMenuClick = () => {\r\n        if (!isMenuOpen) {\r\n            toggleThis('isMiniMode', false)\r\n            toggleThis('isMenuOpen', true)\r\n            if (!isDesktop) {\r\n                toggleThis('isMobileMenuOpen')\r\n            }\r\n        } else {\r\n            toggleThis('isMobileMenuOpen')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={isDesktop ? 'absolute' : undefined}\r\n                sx={{\r\n                    width:\r\n                        isMenuOpen && isDesktop ? `calc(100% - ${width}px)` : undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    {(isMenuOpen && isDesktop) ||\r\n                        (!onBackClick && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerMenuClick}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ))}\r\n                    {/* james- check if this is dead code? */}\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {!onBackClick && isMenuOpen && false && (\r\n                        <div style={{ marginRight: 32 }} />\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {/* james- check if this is dead code? */}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\n\r\n\r\n\r\n\r\nconst EventTable = ({data,isLoadingData,onSelectRow,highlightId}) => {\r\n    const columns = fields;\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        rowVirtualizerInstanceRef.current?.scrollToIndex(0);\r\n    }, [sorting]);\r\n\r\n\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            enableBottomToolbar={false}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx:{display:'flex', flexDirection:\"column\", height:'100%'}}}\r\n            muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 8 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.stream_detail_id=== row.original.stream_detail_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            // muiTableBodyProps={{\r\n            //     sx: {\r\n            //         //stripe the rows, make odd rows a darker color\r\n            //         '& tr': {\r\n            //             backgroundColor: (theme)=> theme.mode == 'dark' ? 'rgba(0,0,0,0.58)' : 'rgba(255,255,255,0.76)',\r\n            //         },\r\n            //     },\r\n            // }}\r\n            renderTopToolbarCustomActions={({ table }) => (\r\n                <Box\r\n                    sx={{ display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap' }}\r\n                >\r\n                    <Button\r\n                        color=\"primary\"\r\n                        target={\"_blank\"}\r\n                        size={\"small\"}\r\n                        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n                        // onClick={handleExportData}\r\n                        href={process.env.REACT_APP_DATA_DOWNLOAD}\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Download All Data\r\n                    </Button>\r\n                    <Button\r\n                        disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                        //export all rows, including from the next page, (still respects filtering and sorting)\r\n                        onClick={() =>\r\n                            handleExportRows(table.getPrePaginationRowModel().rows)\r\n                        }\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                        size={\"small\"}\r\n                    >\r\n                        Export Current Data\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    disabled={table.getRowModel().rows.length === 0}*/}\r\n                    {/*    //export all rows as seen on the screen (respects pagination, sorting, filtering, etc.)*/}\r\n                    {/*    onClick={() => handleExportRows(table.getRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Page Rows*/}\r\n                    {/*</Button>*/}\r\n                    {/*<Button*/}\r\n                    {/*    disabled={*/}\r\n                    {/*        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()*/}\r\n                    {/*    }*/}\r\n                    {/*    //only export selected rows*/}\r\n                    {/*    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Selected Rows*/}\r\n                    {/*</Button>*/}\r\n                </Box>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useSpring, animated, easings  } from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    const timeStation = moment(data.time_station).format('LLL');\r\n    const stream_name = data.stream_name??'N/A';\r\n    return <>\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station} <Typography component={\"span\"} variant={\"subtitle1\"}>{data.broadcast_frequency??'0.0'} FM</Typography>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>\r\n            </table>\r\n            {/*<table style={{width:'100%'}}>*/}\r\n            {/*    <colgroup><col style={{width:130}}/><col/></colgroup>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*        <tbody>*/}\r\n            {/*        <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>*/}\r\n            {/*        <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>*/}\r\n            {/*        <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>*/}\r\n            {/*        </tbody>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr>*/}\r\n            {/*        <td colspan=\"2\">*/}\r\n            {/*            <Grid container>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Stream</Typography>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*            </Grid>*/}\r\n            {/*        </td>*/}\r\n            {/*    </tr>*/}\r\n            {/*    <tr><td>Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Description</td><td>{data.stream_description}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr><td colspan=\"2\"><Divider sx={{mt:2,mb:2}}/></td></tr>*/}\r\n            {/*</table>*/}\r\n            {(data.stream_name||data.stream_genre||data.stream_url)&&<CollapsibleComp header={'Stream Info'} defaultValue={true}>\r\n                <CardContent>\r\n                    <Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link>\r\n                    <Typography variant={'h4'}>{stream_name}</Typography>\r\n                    <Typography color=\"text.secondary\" gutterBottom> {data.stream_description}</Typography>\r\n                    {data.stream_genre && <Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                        <Chip label={data.stream_genre} size={'small'}/></Stack>}\r\n                </CardContent>\r\n            </CollapsibleComp>}\r\n            {/*<CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" by \"{data.stream_artist}\" at {timeStation}</>}>*/}\r\n            <CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" at {timeStation}</>}>\r\n                <CardContent>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                                <Typography color=\"text.secondary\" gutterBottom> {timeStation}</Typography>\r\n                        </Grid>\r\n                        <Grid item flexGrow={1}>\r\n                            <Typography variant=\"h4\" component=\"div\" onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}>\r\n                                {data.stream_song}\r\n                            </Typography>\r\n                            {data.year_released&&<Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n                            {data.stream_song_genre&&<Chip label={data.stream_song_genre} size={'small'}/>}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box sx={{ flex: '1 0 auto', display:'flex' }}>\r\n                                <Avatar aria-label=\"recipe\"\r\n                                        src={data.stream_artist_image_url}\r\n                                        sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                                <div>\r\n                                    <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                                    <Typography variant=\"subtitle2\">from {data.stream_artist_country??\"N/A\"}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                            {data.stream_artist_genre&&(data.stream_artist_genre.map(t=><Chip key={t} label={t} size={'small'}/>))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {data.stream_instrument_list&&(<Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                                <Typography>Instruments: </Typography>\r\n                                {data.stream_instrument_list.split(';').map(t => <Chip\r\n                                key={t} label={t} size={'small'}/>)}\r\n                            </Stack>)}\r\n                        </Grid>\r\n                        {data.stream_lyrics&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                                    Lyrics {data.stream_lyrics_language ? `(${data.stream_lyrics_language})` : \"\"}\r\n                                </Typography>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                            </Grid>\r\n                            {data.stream_lyrics}\r\n                            {/*<table style={{width:'100%'}}>*/}\r\n                            {/*    {data.stream_artist&&<tr onClick={() => onSelect({stream_artist: [data.stream_artist]})}>*/}\r\n                            {/*        <td>Artist</td>*/}\r\n                            {/*        <td style={{display: 'flex'}}><Avatar aria-label=\"recipe\"*/}\r\n                            {/*                                              src={data.stream_artist_image_url}*/}\r\n                            {/*                                              sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>*/}\r\n                            {/*            <div>*/}\r\n                            {/*                <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>*/}\r\n                            {/*                <Typography variant=\"subtitle2\">N/A</Typography>*/}\r\n                            {/*            </div>*/}\r\n                            {/*        </td>*/}\r\n                            {/*    </tr>}*/}\r\n                            {/*    <tr onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}><td>Song</td><td>{data.stream_song}</td></tr>*/}\r\n                            {/*    <tr><td>Time Monitored</td><td>{timeStation}</td></tr>*/}\r\n                            {/*</table>*/}\r\n                        </Grid>}\r\n                        {(data.spotify_uri || data.youtube_url)&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                            </Grid>\r\n                            {data.spotify_uri&&<Grid item xs={12}>\r\n                                <iframe loading=\"lazy\"\r\n                                        src={data.spotify_uri.replace('com/track','com/embed/track')}\r\n                                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                                        data-mce-fragment=\"1\"></iframe>\r\n                            </Grid>}\r\n                            {data.youtube_url&&<Grid item xs={12}>\r\n                                <iframe width={'100%'} height={'auto'}\r\n                                        loading=\"lazy\"\r\n                                        src={data.youtube_url.replace(\"youtube.com/watch?v=\",\"youtube-nocookie.com/embed/\")}\r\n                                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                                        allowFullScreen\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>}\r\n                    </Grid>\r\n                </CardContent>\r\n            </CollapsibleComp>\r\n\r\n            {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n            {/*    Time Monitored : {moment(data.time_station).format('LLL')}*/}\r\n            {/*</Typography>*/}\r\n    </>\r\n}\r\nexport default DetailCard\r\n\r\nfunction CollapsibleComp ({header,banner,defaultValue,...props}) {\r\n    const [open,setopen] = useState(defaultValue);\r\n    const runningText = useSpring({\r\n        reset: open,\r\n        cancel: open,\r\n        config:{ duration: 20000},\r\n        loop:!open,\r\n        from: { transform: \"translateX(100%)\" },\r\n        to: { transform: \"translateX(-100%)\" },\r\n    });\r\n    return <Card elevation={10} sx={{mt:1}}>\r\n        <CardActions disableSpacing>\r\n            <Typography variant={\"h5\"}>{header}</Typography>\r\n            {(banner&&!open)&&<div style={{width:'100%', overflow:'hidden', marginLeft: 10, marginRight: 10, whiteSpace: 'nowrap'}}>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    <animated.div style={runningText} className={'textbanner'}>{banner}</animated.div>\r\n                    {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n                </Typography></div>}\r\n            <ExpandMore expand={open} onClick={()=>setopen(!open)}/>\r\n        </CardActions>\r\n        <Collapse in={open} unmountOnExit={true} {...props}/>\r\n    </Card>\r\n}\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport DetailCard from \"../DetailCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n        {/*<Card sx={{...sx,width:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*    <CardContent sx={{height: '100%', position: 'relative'}}>*/}\r\n\r\n                <Grid container style={{height:'100%', width:'100%',padding:10}}\r\n                      m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                      sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                    {currentDetail ?\r\n                        <DetailCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                            List</>}\r\n                </Grid>\r\n            {/*</CardContent>*/}\r\n        {/*</Card>*/}\r\n    </>\r\n    )\r\n}","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = {\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    };\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","import Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events}) {\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            debugger\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n    return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n        {({ height, width }) => {\r\n            return <Map height={height} width={width}\r\n                        locs={eventlocs} highlight={currentDetail}/>\r\n        }}\r\n    </AutoSizer>\r\n}","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable/index\";\r\nimport { Responsive as ResponsiveGridLayout, WidthProvider } from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport * as FlexLayout from \"flexlayout-react\";\r\nimport \"./layout.css\";\r\nimport {AddCircle} from \"@mui/icons-material\";\r\nimport EventMap from \"../../components/EventMap\";\r\n\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n    // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail,setFuncCollection} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [layoutItems,setLayoutItems] = useState({eventList:true,eventDetail:true,eventMap:true});\r\n    const toolbarRef = useRef(null);\r\n    const currentDetail = getDetail();\r\n    const query = useQuery();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = useCallback((value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    },[]);\r\n\r\n    // const onTogleWin = useCallback((key)=>{\r\n    //     setLayoutItems({...layoutItems,[key]:!layoutItems[key]});\r\n    // },[layoutItems])\r\n\r\n    // const generateLayout = (k)=>{\r\n    //     switch (k){\r\n    //         case 'eventList':\r\n    //             return <EventTable data={getEvents()}\r\n    //                                isLoadingData={isLoadingEvent}\r\n    //                                onSelectRow={onSelectStream}\r\n    //                                highlightId={currentDetail}\r\n    //                                onTogleWin={()=>onTogleWin(\"eventList\")}\r\n    //             />\r\n    //         case 'eventDetail':\r\n    //             return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n    //                                 events={getEvents()}\r\n    //                                 locs={getList('locs')}\r\n    //                                 sx={{height:'100%',position:'relative'}}\r\n    //                                 onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n    //             />\r\n    //         default:\r\n    //             return ''\r\n    //     }\r\n    // }\r\n\r\n    const [layouts,setLayouts] = useState(()=>FlexLayout.Model.fromJson({\r\n        global: {\r\n            // \"splitterSize\": 1,\r\n            // \"splitterExtra\": 4,\r\n            \"tabEnableFloat\": true,\r\n            \"tabSetMinWidth\": 100,\r\n            \"tabSetMinHeight\": 100,\r\n            \"borderMinSize\": 100\r\n        },\r\n        borders:[\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"top\",\r\n                \"size\": 400,\r\n                \"active\": true,\r\n                \"children\": [\r\n                ]\r\n            },\r\n            {\r\n                \"type\": \"border\",\r\n                \"location\":\"left\",\r\n                \"size\": 500,\r\n                \"children\": [\r\n                    {\r\n                        \"type\": \"tab\",\r\n                        \"name\": \"Earth View\",\r\n                        enableClose: false,\r\n                        \"component\": \"Earth\"\r\n                    }\r\n                ],\r\n                \"selected\": 0,\r\n            }\r\n        ],\r\n        layout: {\r\n            type: \"row\",\r\n            weight: 100,\r\n            children: [\r\n                {\"type\": \"row\",\r\n                    children: [\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Song List\",\r\n                                    component: \"eventList\",\r\n                                }\r\n                            ]\r\n                        },\r\n                        {\r\n                            type: \"tabset\",\r\n                            weight: 50,\r\n                            children: [\r\n                                {\r\n                                    type: \"tab\",\r\n                                    name: \"Map\",\r\n                                    component: \"eventMap\",\r\n                                },{\r\n                                    type: \"tab\",\r\n                                    name: \"Song Detail\",\r\n                                    component: \"eventDetail\",\r\n                                }\r\n                            ]\r\n                        }\r\n                        ]\r\n                }\r\n            ]\r\n        }\r\n    }));\r\n\r\n    const factory = (node) => {\r\n        let component = node.getComponent();\r\n        switch (component){\r\n            case 'eventList':\r\n                return <EventTable data={getEvents()}\r\n                                   isLoadingData={isLoadingEvent}\r\n                                   onSelectRow={onSelectStream}\r\n                                   highlightId={currentDetail}\r\n                                   // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n                />\r\n            case 'eventMap':\r\n                return <EventMap\r\n                    currentDetail={currentDetail}\r\n                    events={getEvents()}\r\n                    locs={getList('locs')}\r\n                />\r\n            case 'eventDetail':\r\n                return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                    events={getEvents()}\r\n                                    locs={getList('locs')}\r\n                                    sx={{height:'100%',position:'relative'}}\r\n                                    // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n                />\r\n            case 'Earth':\r\n                return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')}\r\n                                        countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        onSelectLegend={setFuncCollection}\r\n                                        width={width} height={height}\r\n                                        toolbarRef={toolbarRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n    const onRenderTabSet = (tabSetNode, renderValues) =>{\r\n        if (Object.keys(layoutItems).reduce((pre,k)=>pre || (layoutItems[k]===false),false)) {\r\n            renderValues.stickyButtons.push(<AddCircle\r\n                title= \"Add\"\r\n                key= \"Add button\"\r\n                className={\"flexlayout__tab_toolbar_button\"}\r\n                style={{width: \"1.1em\", height: \"1.1em\"}}\r\n            />)\r\n            // renderValues.stickyButtons.push(React.createElement(\"img\", {\r\n            //     src: \"images/add.svg\",\r\n            //     alt: \"Add\",\r\n            //     key: \"Add button\",\r\n            //     title: \"Add Tab (using onRenderTabSet callback, see Demo)\",\r\n            //     style: {width: \"1.1em\", height: \"1.1em\"},\r\n            //     className: \"flexlayout__tab_toolbar_button\",\r\n            //     // onClick: function () { return _this.onAddFromTabSetButton(node); }\r\n            // }));\r\n        }\r\n    }\r\n\r\n    return (<Page appBarContent={<>\r\n        {/*<SearchField/>*/}\r\n        {/*    <div>*/}\r\n        {/*        {*/}\r\n        {/*            Object.keys(layoutItems).map(k=>layoutItems[k]?'':<div key={`plugin-${k}`}*/}\r\n        {/*            onClick={()=>onTogleWin(k)}>*/}\r\n        {/*                <Button>{k}</Button>*/}\r\n        {/*            </div>)*/}\r\n        {/*        }*/}\r\n        {/*    </div>*/}\r\n            <div ref={toolbarRef}></div>\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            {/*<div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>*/}\r\n            {/*    <AutoSizer style={{ height: 'calc(100vh - 64px)', width: '100%' }} >*/}\r\n            {/*        {({ height, width }) => {*/}\r\n            {/*            return <Earth3D locs={getList('locs')}*/}\r\n            {/*                            countries={getList('countries')}*/}\r\n            {/*                            onSelect={onSelect}*/}\r\n            {/*                            onSelectLegend={setFuncCollection}*/}\r\n            {/*                            width={width} height={height}*/}\r\n            {/*                            toolbarRef={toolbarRef}*/}\r\n            {/*                            zoomLoc={zoomLoc}*/}\r\n            {/*            />*/}\r\n            {/*        }}*/}\r\n            {/*    </AutoSizer>*/}\r\n            {/*</div>*/}\r\n        <div style={{height: '100%', position:'relative', pointerEvents:'all', overflow:'hidden'}}>\r\n            <FlexLayout.Layout model={layouts}\r\n                               factory={factory}\r\n                               onRenderTabSet={onRenderTabSet}\r\n                               onModelChange={(m)=>{\r\n                                   // check tab\r\n                                   Object.keys(layoutItems).forEach(k=>layoutItems[k]=false);\r\n                                   m._root._children.forEach(m=>m._children.forEach(m=>layoutItems[m._attributes.component]=true))\r\n                                   setLayoutItems(layoutItems)\r\n                               }}\r\n            />\r\n\r\n            {/*<AutoSizer style={{ minHeight: '100%', width: '100%', position:'relative' }} >*/}\r\n            {/*    {({ height, width }) => {*/}\r\n            {/*        return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}*/}\r\n            {/*                      layouts={layouts}*/}\r\n            {/*                     onBreakpointChange={onBreakpointChange}*/}\r\n            {/*                     onLayoutChange={onLayoutChange}*/}\r\n            {/*                      preventCollision={true}*/}\r\n            {/*                      compactType={null}*/}\r\n            {/*                      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}*/}\r\n            {/*                     margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}*/}\r\n            {/*                         width={width}*/}\r\n            {/*                         rowHeight={(height-20)/10 -10}*/}\r\n            {/*                         height={height}*/}\r\n            {/*                      style={{position:'relative',height:height, pointerEvents:'all'}} >*/}\r\n            {/*            {*/}\r\n            {/*                Object.keys(layoutItems).map(k=>layoutItems[k]?<div key={k} style={{pointerEvents:'all'}}>*/}\r\n            {/*                    {generateLayout(k)}*/}\r\n            {/*                </div>:'')*/}\r\n            {/*            }*/}\r\n            {/*</ResponsiveGridLayout>}}*/}\r\n            {/*</AutoSizer>*/}\r\n        </div>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;","import {useLocation} from \"react-router-dom\";\r\nimport {useDatabase} from \"../Database\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport default function useQuery() {\r\n    const { search } = useLocation();\r\n    const {requestDetail} = useDatabase();\r\n    return useMemo(() => {\r\n        const queryObject = new URLSearchParams(search);\r\n        requestDetail({_id:queryObject.get(\"id\")});\r\n        return queryObject;\r\n    }, [search]);\r\n}"],"names":["exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","width","height","onSelect","onSelectLegend","zoomLoc","toolbarRef","globeEl","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","title","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","_jsxs","background","position","children","_jsx","Globe","globeImageUrl","earthNight","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","Portal","container","IconButton","onClick","SaveIcon","fields","accessorKey","header","dynamic","filterSearch","filter","f","filterDisable","semicolor","_color","d3color","opacity","toString","id","ts","isDarkMode","isRTL","fontSize","_source","source","Function","palette","createTheme","_objectSpread","mode","direction","pageTitle","onBackClick","isLoading","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","useAppTheme","isOnline","useOnline","theme","useTheme","_ref3","useConfig","appConfig","menu","_ref3$width","_ref3$appBarLeadingCo","appBarLeadingContent","_useContext","useContext","MenuContext","toggleThis","isDesktop","isMenuOpen","intl","useIntl","headerTitle","String","display","flexDirection","overflow","AppBar","sx","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","edge","MenuIcon","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","formatMessage","defaultMessage","data","isLoadingData","onSelectRow","highlightId","columns","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","useDatabase","_rowVirtualizerInstan","scrollToIndex","MaterialReactTable","enableBottomToolbar","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowVirtualization","muiTablePaperProps","muiTableContainerProps","flexGrow","initialState","density","onSortingChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","_id","enableColumnResizing","defaultColumn","minSize","maxSize","size","renderTopToolbarCustomActions","table","Box","gap","p","flexWrap","Button","target","process","startIcon","FileDownloadIcon","disabled","getPrePaginationRowModel","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","UndoRedo","canUndo","canRedo","onUndo","onRedo","_Fragment","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","ExpandMore","styled","props","expand","other","_objectWithoutProperties","_excluded","ExpandMoreIcon","transform","shortest","_data$stream_name","_data$broadcast_frequ","_data$stream_artist_c","timeStation","moment","time_station","format","stream_name","component","station","broadcast_frequency","station_description","Link","station_url","MapIcon","url","stream_genre","stream_url","CollapsibleComp","defaultValue","CardContent","gutterBottom","stream_description","Stack","spacing","Chip","label","banner","stream_song","Grid","item","xs","year_released","stream_song_genre","Avatar","src","stream_artist_image_url","mr","stream_artist","stream_artist_country","stream_artist_genre","t","stream_instrument_list","split","stream_lyrics","Divider","mt","mb","margin","stream_lyrics_language","spotify_uri","youtube_url","loading","replace","frameBorder","allow","allowFullScreen","_excluded2","open","setopen","runningText","useSpring","reset","cancel","config","loop","from","to","Card","elevation","CardActions","disableSpacing","whiteSpace","animated","div","className","Collapse","in","unmountOnExit","currentDetail","padding","m","bgcolor","paper","primary","contrastText","DetailCard","scaleLinear","zoomi","d3range","Map","highlight","setData","center","lon","zoom","setDomain","_botColor","extent","text","ticks","tsize","tickS","mapbox","type","name","x","y","marker","visible","hoverinfo","showlegend","line","_toConsumableArray","longd","latd","Math","min","_highlight","city_id","layout","paper_bgcolor","plot_bgcolor","autoscale","r","l","mapboxTick","font","family","typography","fontFamily","legend","showticksuffix","xanchor","orientation","Plot","showEditInChartStudio","plotlyServerURL","events","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","AutoSizer","_ref4","dispatch","useDispatch","filters","useSelector","selectFilters","_useDatabase","getList","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","setZoomLoc","eventList","eventDetail","eventMap","layoutItems","setLayoutItems","search","useLocation","queryObject","URLSearchParams","get","useQuery","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","SET_MENU","opened","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","value","extra","setFilters","FlexLayout","fromJson","global","borders","enableClose","weight","layouts","Page","pointerEvents","model","factory","node","getComponent","EventTable","EventMap","EventDetail","onRenderTabSet","tabSetNode","renderValues","Object","keys","reduce","pre","k","stickyButtons","AddCircle","onModelChange","_root","_children","_attributes","Backdrop","drawer","textAlign"],"sourceRoot":""}