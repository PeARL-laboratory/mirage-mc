{"version":3,"file":"static/js/336.236db400.chunk.js","mappings":"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","sources":["components/Dialog/index.js","containers/Page/Page.js","components/EventTable/DownloadOption.js","components/EventTable/ShareButton.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/PaperCustom/index.js","components/RadarChart/index.js","components/Map/index.js","assets/Spotify_icon.svg","Providers/Database/ulti.js","components/DetailCard/index.js","components/EventDetail/index.js","components/EventMap/index.js","components/Search/index.js","components/ListenCard/index.js","components/MediaDetail/index.js","components/AppHeader/LanguageMenu.js","components/AppHeader/FontSizeMenu.js","components/AppHeader/LayoutMenu.js","components/AppHeader/index.js","components/VizPanel/Histogram/index.js","components/VizPanel/Scatterplot/index.js","components/VizPanel/Scatterwrapper/index.js","components/VizPanel/PCAplot/index.js","components/VizPanel/Barchart/index.js","components/VizPanel/index.js","pages/LandingPage/LandingPage.js","Providers/Query/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, IconButton,\r\n    Slide,\r\n    useMediaQuery,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => (\r\n    <Slide direction=\"up\" {...props} ref={ref} />\r\n))\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst QuestionDialog = ({\r\n                            isProcessing = false,\r\n                            isOpen = false,\r\n                            id = '',\r\n                            message = '',\r\n                            title = '',\r\n                            action = '',\r\n                            haveButton=false,\r\n                            handleAction = () => {},\r\n                            handleClose = () => {},\r\n                            ...rest\r\n                        }) => {\r\n    const intl = useIntl()\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            {...rest}\r\n        >\r\n            {/*<DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>*/}\r\n            <BootstrapDialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                {title}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {message}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {haveButton&&<DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    {intl.formatMessage({id: 'cancel', defaultMessage: 'Cancel'})}\r\n                </Button>\r\n                <Button\r\n                    disabled={isProcessing}\r\n                    onClick={() => {\r\n                        handleAction(handleClose)\r\n                    }}\r\n                    color=\"secondary\"\r\n                >\r\n                    {action}\r\n                </Button>\r\n            </DialogActions>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default QuestionDialog","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography, Menu, MenuItem, Box,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             appBarLeftContent = null,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={'absolute'}\r\n                sx={{\r\n                    width: undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar sx={{\r\n                    backgroundColor: (t) =>\r\n                        t.palette.mode === 'dark'\r\n                            ? t.palette.background.default\r\n                            : t.palette.primary.dark,\r\n                    margin: 0,\r\n                    padding: 0,\r\n                }}>\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {appBarLeftContent}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import SaveIcon from \"@mui/icons-material/Save\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport {Button, Menu, MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function({onDownloadSearchList=()=>{},onDownloadSelectedList=()=>{}}){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <><Button\r\n        color=\"primary\"\r\n        target={\"_blank\"}\r\n        size={\"small\"}\r\n        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n        // onClick={handleExportData}\r\n        startIcon={<SaveIcon/>}\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n    >\r\n        Download\r\n    </Button>\r\n        <Menu anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}>\r\n            <MenuItem onClick={()=>{onDownloadSearchList();handleClose();}}>Data from Search list</MenuItem>\r\n            <MenuItem onClick={()=>{onDownloadSelectedList();handleClose();}}>Data from Selected list</MenuItem>\r\n            <MenuItem disabled onClick={handleClose} href={process.env.REACT_APP_DATA_DOWNLOAD}>MIRAGE-MetaCorpus Song List</MenuItem>\r\n            <MenuItem onClick={handleClose} disabled>MIRAGE-MetaCorpus Station List</MenuItem>\r\n        </Menu>\r\n        </>\r\n}","import {Button, TextField, Stack} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport QuestionDialog from '../../components/Dialog';\r\n\r\nexport default function ShareButton({getUrl}){\r\n    const [dialogOpen,setDialogOpen] = useState(false);\r\n    const [url,setUrl] = useState('');\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n\r\n    const closeDialog = () => {\r\n        setDialogOpen(false);\r\n    }\r\n    const openDialog = () => {\r\n        setIsProcessing(true);\r\n        getUrl().then(d=>{\r\n            setUrl(d);\r\n            setDialogOpen(true);\r\n            setIsProcessing(false);\r\n        }).catch((e)=>{\r\n            setUrl('');\r\n            setIsProcessing(false);\r\n        })\r\n    }\r\n    return <Fragment>\r\n    <Button variant=\"contained\" onClick={openDialog}>Share</Button>\r\n    <QuestionDialog\r\n        isOpen={dialogOpen}\r\n        handleClose={closeDialog}\r\n        isProcessing={isProcessing}\r\n        title={'Share URL'}\r\n        maxWidth={\"md\"}\r\n        message={<Stack direction=\"collumn\">\r\n            <TextField \r\n                size=\"small\"\r\n                label=\"\" \r\n                variant=\"outlined\" \r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={url}\r\n            />\r\n            <Button variant=\"contained\" size=\"small\"\r\n                onClick={() => {navigator.clipboard.writeText(url)}}>\r\n                    Copy\r\n            </Button>\r\n        </Stack>}\r\n    />\r\n    </Fragment>\r\n}","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport {\r\n  MaterialReactTable,\r\n  MRT_ToolbarAlertBanner,\r\n} from \"material-react-table\";\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\n// import {fields} from \"./fields\";\r\nimport { Box, Button, IconButton, Toolbar, Tooltip } from \"@mui/material\";\r\nimport AddEventIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport RemoveEventIcon from \"@mui/icons-material/RemoveShoppingCart\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport { ExportToCsv } from \"export-to-csv\";\r\nimport { useDatabase } from \"../../Providers/Database\";\r\nimport DownloadOption from \"./DownloadOption\";\r\nimport ShareButton from \"./ShareButton\";\r\n\r\nconst EventTable = ({\r\n  id = \"tableevent\",\r\n  columns,\r\n  data,\r\n  totalData,\r\n  selectedData,\r\n  disableAdding,\r\n  isLoadingData,\r\n  onSelectRow,\r\n  highlightId,\r\n  onSendToList,\r\n  onRemoveFromList,\r\n  mainurl,\r\n}) => {\r\n  const [rowSelection, setRowSelection] = useState({});\r\n\r\n  //optionally access the underlying virtualizer instance\r\n  const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n  // const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [sorting, setSorting] = useState([]);\r\n  const { getDownloadData, getShortenLink, getList } = useDatabase();\r\n  const event_export_list = getList(\"event_export_list\");\r\n\r\n  useEffect(() => {\r\n    //scroll to the top of the table when the sorting changes\r\n    try {\r\n      rowVirtualizerInstanceRef.current?.scrollToIndex?.(0);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [sorting]);\r\n\r\n  useEffect(() => {\r\n    setRowSelection({});\r\n  }, [data]);\r\n  const handleExportRows = (rows) => {\r\n    setIsLoading(true);\r\n    getDownloadData(rows)\r\n      .then((datadownload) => {\r\n        const csvOptions = {\r\n          fieldSeparator: \"|\",\r\n          quoteStrings: '\"',\r\n          decimalSeparator: \".\",\r\n          showLabels: true,\r\n          filename: `mirage-mc-${new Date().toDateString()}`,\r\n          useBom: true,\r\n          useKeysAsHeaders: true,\r\n          headers: Object.keys(event_export_list),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const handleExportRowsFromTable = (rows) => {\r\n    setIsLoading(true);\r\n    getDownloadData(rows.map((row) => row.original))\r\n      .then((datadownload) => {\r\n        const csvOptions = {\r\n          fieldSeparator: \",\",\r\n          quoteStrings: '\"',\r\n          decimalSeparator: \".\",\r\n          showLabels: true,\r\n          filename: `mirage-mc-${new Date().toDateString()}`,\r\n          useBom: true,\r\n          useKeysAsHeaders: true,\r\n          // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n  const handleExportData = () => {\r\n    setIsLoading(true);\r\n    // csvExporter.generateCsv(data);\r\n    const datadownload = getDownloadData();\r\n    const csvOptions = {\r\n      fieldSeparator: \",\",\r\n      quoteStrings: '\"',\r\n      decimalSeparator: \".\",\r\n      showLabels: true,\r\n      filename: \"mirage-mc-all\",\r\n      useBom: true,\r\n      useKeysAsHeaders: true,\r\n      // headers: fields.map((c) => c.accessorKey),\r\n    };\r\n    const csvExporter = new ExportToCsv(csvOptions);\r\n    csvExporter.generateCsv(datadownload);\r\n    setIsLoading(false);\r\n  };\r\n  const handleUrl = useCallback(async () => {\r\n    return getShortenLink();\r\n  }, [data, mainurl]);\r\n  // console.log(data)\r\n  return (\r\n    <MaterialReactTable\r\n      key={id}\r\n      id={id}\r\n      columns={columns}\r\n      data={data} //10,000 rows\r\n      // enableBottomToolbar={!!Object.keys(rowSelection).length}\r\n      enableGlobalFilterModes\r\n      enableDensityToggle={false}\r\n      enablePagination={false}\r\n      enableRowSelection\r\n      // enableRowNumbers\r\n      enableRowVirtualization\r\n      muiTablePaperProps={{\r\n        sx: {\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          minHeight: 1,\r\n          height: \"100%\",\r\n        },\r\n      }}\r\n      // muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n      initialState={{ density: \"compact\" }}\r\n      onSortingChange={setSorting}\r\n      onRowSelectionChange={setRowSelection}\r\n      state={{ isLoading: isLoadingData || isLoading, sorting, rowSelection }}\r\n      rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n      rowVirtualizerProps={{ overscan: 2 }} //optionally customize the virtualizer\r\n      muiTableBodyRowProps={({ row }) => ({\r\n        onClick: () => {\r\n          onSelectRow(row.original);\r\n        },\r\n        // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.Event_MA_ID=== row.original.Event_MA_ID?1:0.7):1},\r\n        sx: {\r\n          cursor: \"pointer\",\r\n          opacity: highlightId\r\n            ? highlightId._id === row.original._id\r\n              ? 1\r\n              : 0.7\r\n            : 1,\r\n        },\r\n      })}\r\n      muiSelectCheckboxProps={{ size: \"small\" }}\r\n      muiTableBodyCellProps={{\r\n        sx: { wordBreak: \"break-word\", whiteSpace: \"normal\" },\r\n      }}\r\n      enableColumnResizing={true}\r\n      enableFullScreenToggle={false}\r\n      defaultColumn={{\r\n        minSize: 20, //allow columns to get smaller than default\r\n        maxSize: 9001, //allow columns to get larger than default\r\n        size: 120, //make columns wider by default\r\n      }}\r\n      layoutMode=\"grid\"\r\n      positionToolbarAlertBanner={\"bottom\"}\r\n      renderTopToolbarCustomActions={({ table }) => {\r\n        return (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              gap: \"1rem\",\r\n              p: \"0.5rem\",\r\n              flexWrap: \"no-wrap\",\r\n            }}\r\n          >\r\n            <DownloadOption\r\n              // onDownloadSearchList={()=>handleExportRows(table.getPrePaginationRowModel().rows)}\r\n              onDownloadSearchList={() => handleExportRows(totalData)}\r\n              onDownloadSelectedList={() => handleExportRows(selectedData)}\r\n            />\r\n            <ShareButton getUrl={handleUrl} />\r\n          </Box>\r\n        );\r\n      }}\r\n      renderBottomToolbar={({ table }) => {\r\n        const handleSelected = onSendToList\r\n          ? () => {\r\n              onSendToList(\r\n                table.getSelectedRowModel().flatRows.map((d) => d.original)\r\n              );\r\n            }\r\n          : () => {};\r\n        const handleRemoveSelected = onRemoveFromList\r\n          ? () => {\r\n              onRemoveFromList(\r\n                table.getSelectedRowModel().flatRows.map((d) => d.original)\r\n              );\r\n            }\r\n          : () => {};\r\n        return (\r\n          <Toolbar\r\n            sx={{\r\n              display: Object.keys(rowSelection).length ? \"flex\" : \"none\",\r\n            }}\r\n          >\r\n            <Box sx={{ flexGrow: 2 }}>\r\n              <MRT_ToolbarAlertBanner stackAlertBanner table={table} />\r\n            </Box>\r\n            {onSendToList && !disableAdding && (\r\n              <Tooltip title={\"Add to Selected list\"}>\r\n                <IconButton\r\n                  // color=\"info\"\r\n                  // disabled={!table.getIsSomeRowsSelected()}\r\n                  onClick={handleSelected}\r\n                  variant=\"contained\"\r\n                >\r\n                  <AddEventIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n            {onRemoveFromList && (\r\n              <Tooltip title={\"Remove from Selected list\"}>\r\n                <IconButton\r\n                  // color=\"info\"\r\n                  // disabled={!table.getIsSomeRowsSelected()}\r\n                  onClick={handleRemoveSelected}\r\n                  variant=\"contained\"\r\n                >\r\n                  <RemoveEventIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            )}\r\n          </Toolbar>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default EventTable;\r\n","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {styled} from \"@mui/material/styles\";\r\nimport {Paper} from \"@mui/material\";\r\n\r\nconst PaperCustom = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    borderRadius:10,\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default PaperCustom;","import Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\n\r\nexport default function RadarChart({\r\n  inputData,\r\n  axisInfo,\r\n  height,\r\n  width,\r\n  highlight,\r\n  meanradar,\r\n}) {\r\n  const theme = useTheme();\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    if (axisInfo.length && inputData.length) {\r\n      const data = inputData.map((d) => {\r\n        const item = {\r\n          type: \"scatterpolar\",\r\n          r: [],\r\n          theta: [],\r\n          fill: \"toself\",\r\n          name: \"current event\",\r\n        };\r\n        axisInfo.forEach((k, ki) => {\r\n          item.r[ki] = d[k.key] ?? undefined;\r\n          item.theta[ki] = k.label;\r\n        });\r\n        item.r.push(item.r[0]);\r\n        item.theta.push(item.theta[0]);\r\n        return item;\r\n      });\r\n      if (meanradar) {\r\n        const item = {\r\n          type: \"scatterpolar\",\r\n          r: [],\r\n          theta: [],\r\n          line: {\r\n            dash: \"dash\", // Dash line for the trace\r\n          },\r\n          name: \"mean\",\r\n        };\r\n        data.push(item);\r\n        axisInfo.forEach((k, ki) => {\r\n          item.r[ki] = meanradar[k.key] ?? undefined;\r\n          item.theta[ki] = k.label;\r\n        });\r\n        item.r.push(item.r[0]);\r\n        item.theta.push(item.theta[0]);\r\n      }\r\n      setData(data);\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [inputData, meanradar, axisInfo]);\r\n  let layout = useMemo(\r\n    () => ({\r\n      paper_bgcolor: \"rgba(255,255,255,0)\",\r\n      plot_bgcolor: \"rgba(255,255,255,0)\",\r\n      autoscale: false,\r\n      height: height,\r\n      width: width,\r\n      margin: { t: 40, r: 20, l: 20, b: 40 },\r\n      font: {\r\n        family: theme.typography.fontFamily,\r\n        size: theme.typography.fontSize,\r\n        color: theme.palette.text.primary,\r\n      },\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 1],\r\n        },\r\n      },\r\n      showlegend: false,\r\n    }),\r\n    [height, width, theme]\r\n  );\r\n  return (\r\n    <Plot\r\n      data={data}\r\n      layout={layout}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Station_Map\",\r\n          height: 1080,\r\n          width: 1920,\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n        // '#Station':false\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  color as d3color,\r\n  extent,\r\n  scaleLinear,\r\n  range as d3range,\r\n  interpolateNumber,\r\n} from \"d3\";\r\nimport \"./index.css\";\r\n\r\nconst countriesScale = scaleLinear().range([5, 20]);\r\nconst zoomi = scaleLinear()\r\n  .domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096, 0.192, 0.3712,\r\n    0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568, 47.5136, 98.304, 190.0544,\r\n    360.0,\r\n  ])\r\n  .range(d3range(0, 20).map((d) => 20 - d));\r\nexport default function Map({ locs, height, width, highlight }) {\r\n  const theme = useTheme();\r\n  let [data, setData] = useState([]);\r\n  let [domain, setDomain] = useState({ center: { lon: 0, lat: 0 }, zoom: 1 });\r\n  useEffect(() => {\r\n    try {\r\n      if (locs.length) {\r\n        // const botColor = d3color(theme.palette.text.primary);\r\n        // botColor.opacity = highlight?0.5:1;\r\n        const _botColor = theme.palette.primary.main;\r\n        countriesScale.domain(extent(locs, (d) => d?.count));\r\n        let lon = [];\r\n        let lat = [];\r\n        let size = [];\r\n        let text = [];\r\n        // let color=[];\r\n        locs.forEach((d) => {\r\n          lon.push(d.long);\r\n          lat.push(d.lat);\r\n          size.push(countriesScale(d?.count));\r\n          text.push(`${d[\"title\"]} (${d?.count})`);\r\n          // color.push((highlight&&(highlight.Location_RG_Country===d['title']))? 'red':_botColor);\r\n        });\r\n        // console.log(highlight,color)\r\n        let ticks = countriesScale.ticks(2);\r\n        let tsize = ticks.map((t) => countriesScale(t));\r\n        let tickS = ticks.map((t, i) => ({\r\n          mapbox: \"mapboxTick\",\r\n          type: \"scattermapbox\",\r\n          name: `${t}`,\r\n          lon: [0],\r\n          lat: [0],\r\n          x: [0],\r\n          y: [0],\r\n          marker: {\r\n            color: _botColor,\r\n            size: tsize[i],\r\n          },\r\n          visible: \"legendonly\",\r\n        }));\r\n        let data = [\r\n          {\r\n            type: \"scattermapbox\",\r\n            lon,\r\n            lat,\r\n            hoverinfo: \"text\",\r\n            text,\r\n            showlegend: false,\r\n            marker: {\r\n              size,\r\n              color: _botColor,\r\n\r\n              line: {\r\n                color: \"black\",\r\n              },\r\n            },\r\n            name: \"stream\",\r\n          },\r\n          ...tickS,\r\n        ];\r\n        const longd = extent(locs, (d) => d?.long); // [-180,180]\r\n        const latd = extent(locs, (d) => d?.lat); // [-90,90]\r\n        const center = {\r\n          lon: (longd[1] + longd[0]) / 2,\r\n          lat: (latd[1] + latd[0]) / 2,\r\n        };\r\n        const magrin = 1.2;\r\n        const zoom = Math.min(\r\n          10,\r\n          Math.min(\r\n            zoomi((longd[1] - longd[0]) * magrin * 2),\r\n            zoomi((latd[1] - latd[0]) * magrin)\r\n          ) / 1.5\r\n        );\r\n\r\n        setDomain({ zoom, center });\r\n        if (highlight) {\r\n          const _highlight = locs.find(\r\n            (d) => d[\"Location_RG_ID\"] === highlight.Location_RG_ID\r\n          );\r\n          if (_highlight) {\r\n            data.push({\r\n              type: \"scattermapbox\",\r\n              // locationmode: 'world',\r\n              lon: [_highlight.long],\r\n              lat: [_highlight.lat],\r\n              hoverinfo: \"text\",\r\n              text: [`${_highlight[\"title\"]} (${_highlight?.count})`],\r\n              showlegend: true,\r\n              marker: {\r\n                size: [countriesScale(_highlight.count)],\r\n                color: \"red\",\r\n                line: {\r\n                  color: \"black\",\r\n                },\r\n              },\r\n              name: _highlight[\"title\"],\r\n            });\r\n          }\r\n        }\r\n        setData(data);\r\n      } else setData([]);\r\n    } catch (e) {}\r\n  }, [locs, highlight]);\r\n  // console.log(domain.center,domain.zoom)\r\n  let layout = useMemo(\r\n    () => ({\r\n      paper_bgcolor: theme.palette.background.paper,\r\n      plot_bgcolor: \"rgba(0,0,0,0)\", //theme.palette.background.paper,\r\n      autoscale: false,\r\n      height: height,\r\n      width: width,\r\n      margin: { t: 10, r: 10, l: 10, b: 10 },\r\n      mapboxTick: {\r\n        style: \"whitebg\",\r\n      },\r\n      mapbox: {\r\n        style: \"carto-positron\",\r\n        center: domain.center,\r\n        zoom: domain.zoom,\r\n      },\r\n      font: {\r\n        family: theme.typography.fontFamily,\r\n        size: theme.typography.fontSize,\r\n        color: theme.palette.text.primary,\r\n      },\r\n      legend: {\r\n        title: { text: \"#Streams\" },\r\n        showticksuffix: \"last\",\r\n        x: 1,\r\n        xanchor: \"right\",\r\n        y: 0,\r\n        orientation: \"h\",\r\n      },\r\n    }),\r\n    [height, width, theme, domain]\r\n  );\r\n  return (\r\n    <Plot\r\n      data={data}\r\n      layout={layout}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Station_Map\",\r\n          height: 1080,\r\n          width: 1920,\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n        \"#Station\": false,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSpotifyIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1ed760\",\n    d: \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M406.6 231.1c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3zm-31 76.2c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm-26.9 65.6c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpotifyIcon);\nexport default __webpack_public_path__ + \"static/media/Spotify_icon.951b26aaf9259b0b439d3c7daa30dbaf.svg\";\nexport { ForwardRef as ReactComponent };","import { isArray } from \"lodash\";\r\n\r\nexport const metricList = [\r\n  { key: \"Track_SP_Danceability\", label: \"Danceability\", radar: true },\r\n  { key: \"Track_SP_Speechiness\", label: \"Speechiness\", radar: true },\r\n  { key: \"Track_SP_Acousticness\", label: \"Acousticness\", radar: true },\r\n  { key: \"Track_SP_Instrumentalness\", label: \"Instrumentalness\", radar: true },\r\n  { key: \"Track_SP_Liveness\", label: \"Liveness\", radar: true },\r\n  { key: \"Track_SP_Energy\", label: \"Energy\" },\r\n  { key: \"Track_SP_Valence\", label: \"Valence\" },\r\n  { key: \"Track_SP_Year\", label: \"Track Year Released\" },\r\n  { key: \"Track_SP_Popularity\", label: \"Track Popularity\" },\r\n  { key: \"Track_SP_Tempo\", label: \"Tempo\" },\r\n];\r\n\r\nexport const metricRadarList = metricList.filter((d) => d.radar);\r\n\r\nexport const rankMetricList = [\r\n  { key: \"Artist_SP_Genre\", label: \"Artist Genres\", isArray: true },\r\n  { key: \"Artist_WD_Country\", label: \"Artist Country\" },\r\n  { key: \"Track_SP_Key\", label: \"Track Key\", isArray: true },\r\n];\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from \"@mui/icons-material/Map\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport FemaleIcon from \"@mui/icons-material/Female\";\r\nimport MaleIcon from \"@mui/icons-material/Male\";\r\nimport TransgenderIcon from \"@mui/icons-material/Transgender\";\r\nimport { useSpring, animated, easings } from \"@react-spring/web\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { format } from \"d3\";\r\nimport \"./index.css\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n// import {Helmet} from \"react-helmet\";\r\nimport RadarChart from \"../RadarChart\";\r\nimport Map from \"../Map\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport spotifyIcon from \"../../assets/Spotify_icon.svg\";\r\nimport wikiIcon from \"../../assets/wikilogo.png\";\r\nimport musicbrainzIcon from \"../../assets/musicbrainlogo.png\";\r\nimport youtubeIcon from \"../../assets/youtubelogo.png\";\r\nimport geniusIcon from \"../../assets/geniuslogo.png\";\r\nimport { metricRadarList } from \"../../Providers/Database/ulti\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nfunction genderIcon(g) {\r\n  switch (g) {\r\n    case \"male\":\r\n      return { avatar: <MaleIcon style={{ marginRight: -12 }} />, label: \"\" };\r\n    case \"female\":\r\n      return { avatar: <FemaleIcon style={{ marginRight: -12 }} />, label: \"\" };\r\n    default:\r\n      return { label: g };\r\n  }\r\n}\r\n\r\nfunction DetailCard({ data, onSelect, meanradar }) {\r\n  const timeStation = moment(data.Event_MA_TimeStation).format(\"LLL\");\r\n  const duration = moment.utc(data.Track_SP_Duration * 1000).format(\"HH:mm:ss\");\r\n  const Event_SE_Description = data.Event_SE_Description ?? \"N/A\";\r\n  const analyticData = useMemo(() => [data], [data]);\r\n  const analyticAxis = useMemo(() => metricRadarList, []);\r\n\r\n  return (\r\n    <Stack spacing={1}>\r\n      <PaperCustom>\r\n        <Typography\r\n          component=\"div\"\r\n          variant=\"h2\"\r\n          onClick={() =>\r\n            onSelect({ Station_RG_Name: [data.Station_RG_Name] }, data)\r\n          }\r\n        >\r\n          {data.Station_RG_Name}\r\n        </Typography>\r\n        {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n        {/*    Form: <Chip label={data.Station_AR_Form} size={'small'}/>*/}\r\n        {/*</Typography>*/}\r\n        <table style={{ width: \"100%\" }}>\r\n          <colgroup>\r\n            <col style={{ width: 130 }} />\r\n            <col />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <td>Form</td>\r\n              <td>\r\n                <Stack\r\n                  direction={\"row\"}\r\n                  spacing={1}\r\n                  flexWrap\r\n                  sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                >\r\n                  <Chip label={data.Station_AR_Form} size={\"small\"} />\r\n                  {data.Station_AR_Frequency && (\r\n                    <>\r\n                      {data.Station_AR_Frequency.map((d) => (\r\n                        <Chip label={d} key={d} size={\"small\"} />\r\n                      ))}\r\n                    </>\r\n                  )}{\" \"}\r\n                </Stack>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Station URL</td>\r\n              <td>\r\n                <Link\r\n                  href={data.Station_SE_WebsiteURL}\r\n                  target={\"_blank\"}\r\n                  color={\"secondary\"}\r\n                >\r\n                  {data.Station_SE_WebsiteURL}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Location</td>\r\n              <td>\r\n                <Link\r\n                  target={\"_blank\"}\r\n                  color={\"secondary\"}\r\n                  href={`https://maps.google.com/?q=${data.lat},${data.long}`}\r\n                >\r\n                  <MapIcon />\r\n                  {data.Location_RG_City}, {data.Location_RG_Country}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Radio Garden URL</td>\r\n              <td>\r\n                <Link\r\n                  href={data.Station_RG_URL}\r\n                  target={\"_blank\"}\r\n                  color={\"secondary\"}\r\n                >\r\n                  {data.Station_RG_URL}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Formats</td>\r\n              <td>\r\n                {data.Station_AR_Format && (\r\n                  <Stack\r\n                    direction={\"row\"}\r\n                    spacing={1}\r\n                    flexWrap\r\n                    sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                  >\r\n                    {data.Station_AR_Format.split(\",\").map((d) => (\r\n                      <Chip label={d} key={d} size={\"small\"} />\r\n                    ))}\r\n                  </Stack>\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Genres</td>\r\n              <td>\r\n                {data.Station_AR_Genre && (\r\n                  <Stack\r\n                    direction={\"row\"}\r\n                    spacing={1}\r\n                    flexWrap\r\n                    sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                  >\r\n                    {data.Station_AR_Genre.map((d) => (\r\n                      <Chip label={d} key={d} size={\"small\"} />\r\n                    ))}\r\n                  </Stack>\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Description</td>\r\n              <td>{data.Station_SE_Description}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </PaperCustom>\r\n\r\n      <PaperCustom>\r\n        <table style={{ width: \"100%\" }}>\r\n          <colgroup>\r\n            <col style={{ width: 130 }} />\r\n            <col />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <td>Stream name</td>\r\n              <td>{Event_SE_Description}</td>\r\n            </tr>\r\n          </tbody>\r\n          {/*<tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>*/}\r\n        </table>\r\n      </PaperCustom>\r\n      {data.artist_info && (\r\n        <PaperCustom>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Box sx={{ flex: \"1 0 auto\", display: \"flex\" }}>\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={data.artist_info.Artist_SP_ImageURL}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  {data.artist_info.Artist_SP_Name[0]}\r\n                </Avatar>\r\n                <div>\r\n                  <Typography variant=\"h4\" color={\"text.primary\"}>\r\n                    {data.artist_info.Artist_SP_Name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    {data.artist_info.Artist_WD_Type}\r\n                  </Typography>\r\n                </div>\r\n              </Box>\r\n              <Typography\r\n                component=\"div\"\r\n                variant=\"subtitle1\"\r\n                color=\"text.secondary\"\r\n              >\r\n                {data.artist_info.Artist_WD_Description}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <colgroup>\r\n                  <col style={{ width: 130 }} />\r\n                  <col />\r\n                </colgroup>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Popularity</td>\r\n                    <td>\r\n                      <Chip\r\n                        icon={<Favorite />}\r\n                        sx={{ marginRight: 1 }}\r\n                        label={data.artist_info.Artist_SP_Popularity}\r\n                        size={\"small\"}\r\n                      />\r\n                      ({format(\",\")(data.artist_info.Artist_SP_Followers)}{\" \"}\r\n                      followers)\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>From</td>\r\n                    <td>{data.artist_info.Artist_WD_Country ?? \"N/A\"}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Genres</td>\r\n                    <td>\r\n                      {data.artist_info.Artist_SP_Genre &&\r\n                        data.artist_info.Artist_SP_Genre.map((t) => (\r\n                          <Chip key={t} label={t} size={\"small\"} />\r\n                        ))}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Instruments</td>\r\n                    <td>\r\n                      {data.artist_info.Artist_WD_Instruments.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                  {data.artist_info.Artist_WD_Members &&\r\n                  data.artist_info.Artist_WD_Members.length ? (\r\n                    <tr>\r\n                      <td>Members</td>\r\n                      <td>\r\n                        {data.artist_info.Artist_WD_Members.map(\r\n                          ({\r\n                            _id,\r\n                            Artist_SP_Name,\r\n                            Artist_SP_ImageURL,\r\n                            Artist_WD_Genders,\r\n                            Artist_WD_SexualOrientations,\r\n                            Artist_WD_Ethnicities,\r\n                            Artist_WD_VoiceTypes,\r\n                          }) => (\r\n                            <Chip\r\n                              avatar={\r\n                                <Avatar\r\n                                  alt={Artist_SP_Name}\r\n                                  src={Artist_SP_ImageURL}\r\n                                />\r\n                              }\r\n                              key={_id}\r\n                              label={\r\n                                <>\r\n                                  <strong>{Artist_SP_Name}</strong>\r\n                                  {Artist_WD_Genders && (\r\n                                    <Chip\r\n                                      title={`Gender: ${Artist_WD_Genders}`}\r\n                                      color={\"error\"}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(Artist_WD_Genders)}\r\n                                    />\r\n                                  )}\r\n                                  {Artist_WD_SexualOrientations && (\r\n                                    <Chip\r\n                                      title={`Sexual Orientations: ${Artist_WD_SexualOrientations}`}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(\r\n                                        Artist_WD_SexualOrientations\r\n                                      )}\r\n                                    />\r\n                                  )}\r\n                                  {Artist_WD_Ethnicities && (\r\n                                    <Chip\r\n                                      title={`Ethnicities: ${Artist_WD_Ethnicities}`}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(Artist_WD_Ethnicities)}\r\n                                    />\r\n                                  )}\r\n                                  {Artist_WD_VoiceTypes &&\r\n                                  Artist_WD_VoiceTypes.length ? (\r\n                                    <Chip\r\n                                      title={\"Voice types\"}\r\n                                      label={Artist_WD_VoiceTypes.join(\", \")}\r\n                                      size={\"small\"}\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </>\r\n                              }\r\n                              variant={\"outlined\"}\r\n                            />\r\n                          )\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <tr>\r\n                    <td>Website URL</td>\r\n                    <td>\r\n                      <Link\r\n                        href={data.artist_info.Artist_WD_WebsiteURL}\r\n                        target={\"_blank\"}\r\n                        color={\"secondary\"}\r\n                      >\r\n                        {data.artist_info.Artist_WD_WebsiteURL}\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Identifiers</td>\r\n                    <td>\r\n                      <IconButton\r\n                        href={`https://open.spotify.com/artist/${data.artist_info.Artist_SP_ID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={spotifyIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                      {data.artist_info.Artist_WD_QID && (\r\n                        <IconButton\r\n                          href={`https://wikidata.org/wiki/${data.artist_info.Artist_WD_QID}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img src={wikiIcon} width={30} loading=\"lazy\" />\r\n                        </IconButton>\r\n                      )}\r\n                      {data.artist_info.Artist_WD_YouTubeID && (\r\n                        <IconButton\r\n                          href={`https://www.youtube.com/channel/${data.artist_info.Artist_WD_YouTubeID}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img src={youtubeIcon} width={30} loading=\"lazy\" />\r\n                        </IconButton>\r\n                      )}\r\n                      {data.artist_info.Artist_WD_MusicBrainzID && (\r\n                        <IconButton\r\n                          href={`https://musicbrainz.org/artist/${data.artist_info.Artist_WD_MusicBrainzID}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img\r\n                            src={musicbrainzIcon}\r\n                            width={30}\r\n                            loading=\"lazy\"\r\n                          />\r\n                        </IconButton>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                {/*<tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>*/}\r\n              </table>\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n      )}\r\n      <PaperCustom elevation={3}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography color=\"text.secondary\" gutterBottom>\r\n              {\" \"}\r\n              {timeStation}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              onClick={\r\n                data.Track_SP_Name\r\n                  ? () => onSelect({ Track_SP_Name: [data.Track_SP_Name] })\r\n                  : null\r\n              }\r\n            >\r\n              {data.Track_SP_Name}\r\n            </Typography>\r\n            <Typography\r\n              component=\"div\"\r\n              variant=\"subtitle1\"\r\n              color=\"text.secondary\"\r\n            >\r\n              {data.Track_WD_Desciption}\r\n            </Typography>\r\n            <table style={{ width: \"100%\" }}>\r\n              <colgroup>\r\n                <col style={{ width: 130 }} />\r\n                <col />\r\n              </colgroup>\r\n              <tbody>\r\n                {data.Track_WD_Format && (\r\n                  <tr>\r\n                    <td>Form</td>\r\n                    <td>{data.Track_WD_Format}</td>\r\n                  </tr>\r\n                )}\r\n                {data.Track_WD_Composers && data.Track_WD_Composers.length ? (\r\n                  <tr>\r\n                    <td>Composers</td>\r\n                    <td>\r\n                      {data.Track_WD_Composers.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {data.Track_WD_Lyricists && data.Track_WD_Lyricists.length ? (\r\n                  <tr>\r\n                    <td>Lyricists</td>\r\n                    <td>\r\n                      {data.Track_WD_Lyricists.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {data.Track_WD_Language && (\r\n                  <tr>\r\n                    <td>Language</td>\r\n                    <td>{data.Track_WD_Language}</td>\r\n                  </tr>\r\n                )}\r\n                {data.Track_SP_Year && (\r\n                  <tr>\r\n                    <td>Year released</td>\r\n                    <td>{data.Track_SP_Year}</td>\r\n                  </tr>\r\n                )}\r\n                {data.Track_SP_Duration && (\r\n                  <tr>\r\n                    <td>Duration</td>\r\n                    <td>{duration}</td>\r\n                  </tr>\r\n                )}\r\n                {data.Track_SP_Popularity && (\r\n                  <tr>\r\n                    <td>Popularity</td>\r\n                    <td>\r\n                      <Chip\r\n                        icon={<Favorite />}\r\n                        label={data.Track_SP_Popularity}\r\n                        size={\"small\"}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                <tr>\r\n                  <td>Key </td>\r\n                  <td>\r\n                    {data.Track_SP_Key}, {data.Track_SP_Mode}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Beats per Measure</td>\r\n                  <td>{data.Track_SP_BeatsPerBar}</td>\r\n                </tr>\r\n                {data.track_genre && (\r\n                  <tr>\r\n                    <td>Genre</td>\r\n                    <td>{data.track_genre}</td>\r\n                  </tr>\r\n                )}\r\n                {data.Track_SP_Loudness && (\r\n                  <tr>\r\n                    <td>Loudness</td>\r\n                    <td>{data.Track_SP_Loudness} dB</td>\r\n                  </tr>\r\n                )}\r\n                <tr>\r\n                  <td>Platform</td>\r\n                  <td>\r\n                    {data.Track_SP_ID && (\r\n                      <IconButton\r\n                        href={`https://open.spotify.com/track/${data.Track_SP_ID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={spotifyIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.Track_WD_QID && (\r\n                      <IconButton\r\n                        href={`https://wikidata.org/wiki/${data.Track_WD_QID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={wikiIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.Track_WD_GeniusID && (\r\n                      <IconButton\r\n                        href={`https://genius.com/${data.Track_WD_GeniusID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={geniusIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.Track_WD_YouTubeID && (\r\n                      <IconButton\r\n                        href={`https://www.youtube.com/watch?v=${data.Track_WD_YouTubeID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={youtubeIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.Track_WD_MusicBrainzID && (\r\n                      <IconButton\r\n                        href={`https://musicbrainz.org/work/${data.Track_WD_MusicBrainzID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={musicbrainzIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {data.Track_WD_Instrumentation &&\r\n            data.Track_WD_Instrumentation.length ? (\r\n              <Stack\r\n                direction={\"row\"}\r\n                spacing={1}\r\n                flexWrap\r\n                sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n              >\r\n                <Typography>Instruments: </Typography>\r\n                {data.Track_WD_Instrumentation.map((t) => (\r\n                  <Chip key={t} label={t} size={\"small\"} />\r\n                ))}\r\n              </Stack>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container>\r\n              <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n              <Typography\r\n                variant={\"h5\"}\r\n                component={\"div\"}\r\n                sx={{ margin: \"auto\" }}\r\n              >\r\n                Metrics\r\n              </Typography>\r\n              <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n            </Grid>\r\n            <AutoSizer style={{ height: 300, width: \"100%\" }}>\r\n              {({ height, width }) => {\r\n                return (\r\n                  <RadarChart\r\n                    inputData={analyticData}\r\n                    meanradar={meanradar}\r\n                    axisInfo={analyticAxis}\r\n                    height={height - 40}\r\n                    width={width}\r\n                  />\r\n                );\r\n              }}\r\n            </AutoSizer>\r\n          </Grid>\r\n          {/*<Grid item xs={6}>*/}\r\n          {/*    <Grid container>*/}\r\n          {/*        <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>*/}\r\n          {/*        <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>*/}\r\n          {/*            Lyrics {data.Track_WD_Language ? `(${data.Track_WD_Language})` : \"\"}*/}\r\n          {/*        </Typography>*/}\r\n          {/*        <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>*/}\r\n          {/*    </Grid>*/}\r\n          {/*</Grid>*/}\r\n        </Grid>\r\n      </PaperCustom>\r\n    </Stack>\r\n  );\r\n}\r\nexport default DetailCard;\r\n\r\nfunction CollapsibleComp({ header, banner, defaultValue, ...props }) {\r\n  const [open, setopen] = useState(defaultValue);\r\n  const runningText = useSpring({\r\n    reset: open,\r\n    cancel: open,\r\n    config: { duration: 20000 },\r\n    loop: !open,\r\n    from: { transform: \"translateX(100%)\" },\r\n    to: { transform: \"translateX(-100%)\" },\r\n  });\r\n  return (\r\n    <Card elevation={10} sx={{ mt: 1 }}>\r\n      <CardActions disableSpacing>\r\n        <Typography variant={\"h5\"}>{header}</Typography>\r\n        {banner && !open && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              overflow: \"hidden\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            <Typography variant={\"subtitle2\"}>\r\n              <animated.div style={runningText} className={\"textbanner\"}>\r\n                {banner}\r\n              </animated.div>\r\n              {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n            </Typography>\r\n          </div>\r\n        )}\r\n        <ExpandMore expand={open} onClick={() => setopen(!open)} />\r\n      </CardActions>\r\n      <Collapse in={open} unmountOnExit={true} {...props} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, CardContent, Unstable_Grid2 as Grid } from \"@mui/material\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport DetailCard from \"../DetailCard\";\r\n\r\nexport default function ({ currentDetail, onSelect, meanradar, sx = {} }) {\r\n  return (\r\n    <>\r\n      {/*<Card sx={{...sx,width:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n      {/*    <CardContent sx={{height: '100%', position: 'relative'}}>*/}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", width: \"100%\", padding: 10, overflow: \"auto\" }}\r\n        m={0}\r\n        flexDirection={\"column\"}\r\n        flexWrap={\"nowrap\"}\r\n        sx={{\r\n          bgcolor: (theme) => theme.palette.background.paper,\r\n          color: (theme) => theme.palette.primary.contrastText,\r\n        }}\r\n      >\r\n        {currentDetail ? (\r\n          <DetailCard\r\n            data={currentDetail}\r\n            onSelect={onSelect}\r\n            meanradar={meanradar}\r\n          />\r\n        ) : (\r\n          <>Select from Event List</>\r\n        )}\r\n      </Grid>\r\n      {/*</CardContent>*/}\r\n      {/*</Card>*/}\r\n    </>\r\n  );\r\n}\r\n","import Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { groups } from \"d3\";\r\n\r\nexport default function ({ currentDetail, locs, events }) {\r\n  const [eventlocs, setEventlocs] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n      const _locsMap = {};\r\n      locs.forEach((d) => (_locsMap[d[\"Location_RG_ID\"]] = d));\r\n      const _locs = groups(events, (d) => d[\"Location_RG_ID\"]).map(\r\n        ([c, cou]) => ({\r\n          title: _locsMap[c]?.title,\r\n          Location_RG_ID: c,\r\n          count: cou.length,\r\n          lat: _locsMap[c]?.lat,\r\n          long: _locsMap[c]?.long,\r\n        })\r\n      );\r\n      setEventlocs(_locs);\r\n    } catch (e) {}\r\n  }, [locs, events]);\r\n  return (\r\n    <AutoSizer style={{ height: \"100%\", width: \"100%\" }}>\r\n      {({ height, width }) => {\r\n        return (\r\n          <Map\r\n            height={height}\r\n            width={width}\r\n            locs={eventlocs}\r\n            highlight={currentDetail}\r\n          />\r\n        );\r\n      }}\r\n    </AutoSizer>\r\n  );\r\n}\r\n","import {Box, Button, Typography} from \"@mui/material\";\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Dialog from \"../Dialog\";\r\nimport {useState} from \"react\";\r\nimport FilterPanel from \"../FilterPanel\";\r\n\r\n\r\nexport default function () {\r\n    const [isOpen,setIsOpen] = useState();\r\n    return <><Button\r\n        size={\"small\"}\r\n        sx={theme=>({ position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n            borderColor: alpha(theme.palette.common.white, 0.5),\r\n            borderStyle:'solid',\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            textTransform:'none',\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        width: '100%',\r\n            paddingLeft:theme.spacing(1),\r\n            paddingRight:theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            minWidth: 250,\r\n            width: 'auto',\r\n        }})}\r\n        startIcon={<SearchIcon/>}\r\n        variant={\"contained\"}\r\n        onClick={()=>setIsOpen(true)}\r\n    >\r\n        <Typography variant={\"subtitle1\"} >Search...</Typography>\r\n        {/*<SearchIconWrapper>*/}\r\n        {/*    <SearchIcon />*/}\r\n        {/*</SearchIconWrapper>*/}\r\n        {/*<StyledInputBase*/}\r\n        {/*    placeholder=\"Search…\"*/}\r\n        {/*    inputProps={{ 'aria-label': 'search' }}*/}\r\n        {/*/>*/}\r\n    </Button>\r\n        <Dialog isOpen={isOpen} id={\"searchFilter\"}\r\n                title={\"Search\"}\r\n                message={<FilterPanel/>}\r\n                handleClose={()=>setIsOpen(false)}\r\n                fullWidth={true}\r\n                maxWidth={\"sm\"}\r\n                scroll={\"paper\"}\r\n        >\r\n\r\n        </Dialog>\r\n        </>\r\n}","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from \"@mui/icons-material/Map\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { useSpring, animated, easings } from \"@react-spring/web\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nfunction DetailCard({ data, onSelect }) {\r\n  return (\r\n    <Stack spacing={1}>\r\n      <PaperCustom>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              onClick={\r\n                data.Track_SP_Name\r\n                  ? () => onSelect({ Track_SP_Name: [data.Track_SP_Name] })\r\n                  : null\r\n              }\r\n            >\r\n              {data.Track_SP_Name}\r\n            </Typography>\r\n            {data.year_released && (\r\n              <Typography color=\"text.secondary\" gutterBottom>\r\n                {\" \"}\r\n                {data.year_released}\r\n              </Typography>\r\n            )}\r\n            {data.track_name_genre && (\r\n              <Chip label={data.track_name_genre} size={\"small\"} />\r\n            )}\r\n          </Grid>\r\n          {data.artist_info && (\r\n            <Grid item>\r\n              <Box sx={{ flex: \"1 0 auto\", display: \"flex\" }}>\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={data.artist_info.Artist_SP_ImageURL}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  {data.artist_info.Artist_SP_Name[0]}\r\n                </Avatar>\r\n                <div>\r\n                  <Typography variant=\"h5\" color={\"text.primary\"}>\r\n                    {data.artist_info.Artist_SP_Name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    from {data.artist_info.Artist_WD_Country ?? \"N/A\"}\r\n                  </Typography>\r\n                </div>\r\n              </Box>\r\n              {data.artist_info.Artist_SP_Genre &&\r\n                data.artist_info.Artist_SP_Genre.map((t) => (\r\n                  <Chip key={t} label={t} size={\"small\"} />\r\n                ))}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </PaperCustom>\r\n      <PaperCustom>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n            <Typography\r\n              variant={\"h5\"}\r\n              component={\"div\"}\r\n              sx={{ margin: \"auto\" }}\r\n            >\r\n              Music Platform\r\n            </Typography>\r\n            <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <iframe\r\n              loading=\"lazy\"\r\n              src={`https://open.spotify.com/embed/track/${data.Track_SP_ID}`}\r\n              width={\"100%\"}\r\n              height=\"80\"\r\n              frameBorder=\"0\"\r\n              data-mce-fragment=\"1\"\r\n            ></iframe>\r\n          </Grid>\r\n          {(data.spotify_uri || data.Track_WD_YouTubeID) && (\r\n            <>\r\n              {data.spotify_uri && (\r\n                <Grid item xs={12}>\r\n                  <iframe\r\n                    loading=\"lazy\"\r\n                    src={data.spotify_uri.replace(\r\n                      \"com/track\",\r\n                      \"com/embed/track\"\r\n                    )}\r\n                    width={\"100%\"}\r\n                    height=\"80\"\r\n                    frameBorder=\"0\"\r\n                    data-mce-fragment=\"1\"\r\n                  ></iframe>\r\n                </Grid>\r\n              )}\r\n              {data.Track_WD_YouTubeID && (\r\n                <Grid item xs={12}>\r\n                  <iframe\r\n                    width={\"100%\"}\r\n                    height={\"auto\"}\r\n                    loading=\"lazy\"\r\n                    src={`https://www.youtube-nocookie.com/embed/${data.Track_WD_YouTubeID}`}\r\n                    title=\"YouTube video player\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                    allowFullScreen\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </PaperCustom>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default DetailCard;\r\n","import {\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport ListenCard from \"../ListenCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n            <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                  m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                  sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                {currentDetail ?\r\n                    <ListenCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                        List</>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {IconButton, Menu, MenuItem} from \"@mui/material\";\r\nimport {Language as LanguageIcon} from \"@mui/icons-material\";\r\nimport allLocales from \"../../config/locales\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'language' })}\r\n        onClick={handleClick}\r\n    >\r\n        <LanguageIcon/> <span style={{fontSize:'small',paddingLeft:5,textTransform:\"uppercase\"}}>{locale}</span>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"language-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            allLocales.map(l=><MenuItem\r\n                key={l.locale}\r\n                selected={l.locale === locale}\r\n                onClick={()=>setLocale(l.locale)}\r\n            >\r\n                <LanguageIcon style={{paddingRight:5}}/> {intl.formatMessage({ id: l.locale })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {FormatSize} from \"@mui/icons-material\";\r\nimport {Box, IconButton, Menu} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\nimport FontsizeControl from \"../FontsizeControl\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DECREASE_FONT_SIZE, INCREASE_FONT_SIZE} from \"../../reducer/actions/setting\";\r\n\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const dispatch = useDispatch();\r\n    const changeFontSize = (isIncrease)=>{\r\n        if (isIncrease)\r\n            dispatch({ type: INCREASE_FONT_SIZE});\r\n        else\r\n            dispatch({ type: DECREASE_FONT_SIZE})\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <>\r\n        <IconButton title={intl.formatMessage({id: 'Font size'})}\r\n                    onClick={handleClick}>\r\n            <FormatSize/>\r\n        </IconButton>\r\n        <Menu\r\n            id=\"font-size-menu\"\r\n            aria-labelledby=\"demo-positioned-button\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n        >\r\n            <Box sx={{paddingLeft:2,paddingRight:2}}>\r\n                <FontsizeControl title={intl.formatMessage({id: 'Font size'})} onChange={changeFontSize}/>\r\n            </Box>\r\n        </Menu>\r\n    </>\r\n}","import {Checkbox, IconButton, ListItemIcon, Menu, MenuItem} from \"@mui/material\";\r\nimport {Check, SpaceDashboard as SpaceDashboardIcon} from \"@mui/icons-material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl,layoutItems,onChange}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'Layout' })}\r\n        onClick={handleClick}\r\n    >\r\n        <SpaceDashboardIcon/>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"layout-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            Object.keys(layoutItems).map(k=><MenuItem\r\n                key={k}\r\n                onClick={()=>onChange(k,layoutItems[k],!layoutItems[k].val)}\r\n            >\r\n                <ListItemIcon>\r\n                    <Checkbox checked={layoutItems[k].val} />\r\n                </ListItemIcon>{intl.formatMessage({ id: layoutItems[k].key })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {Box, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {\r\n    Brightness4 as Brightness4Icon,\r\n    BrightnessHigh as BrightnessHighIcon,\r\n    FormatSize,\r\n    Help as HelpIcon, Language, Menu as MenuIcon\r\n} from \"@mui/icons-material\";\r\nimport SpaceDashboardIcon from \"@mui/icons-material/SpaceDashboard\";\r\nimport {useTheme as useAppTheme} from \"material-ui-shell/lib/providers/Theme\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useIntl} from \"react-intl\";\r\nimport LanguageMenu from \"./LanguageMenu\";\r\nimport FontSizeMenu from \"./FontSizeMenu\";\r\nimport LayoutMenu from \"./LayoutMenu\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ({layoutItems,layoutItemsOnChange=()=>{}}){\r\n    const intl = useIntl();\r\n    const dispatch = useDispatch();\r\n    const { toggleThisTheme, isDarkMode } = useAppTheme()\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    return <>\r\n        <img src={require('../../assets/logo.png')} loading=\"lazy\" style={{height:'auto',width:150}}></img>\r\n        <span style={{marginRight:5}}>v{process.env.REACT_APP_DATA_APP_VERSION}</span>\r\n        <IconButton title={\"About us\"} size={\"small\"} sx={{transform:\"translate(-10px,10px)\"}}\r\n        onClick={()=>dispatch({ type: SET_MENU, opened: true })}>\r\n            <HelpIcon fontSize=\"inherit\"/>\r\n        </IconButton>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                    display: { xs: 'block', md: 'none' },\r\n                }}\r\n            >\r\n\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <IconButton\r\n                            title={\"Toggle theme\"}\r\n                            onClick={() => {\r\n                                toggleThisTheme('isDarkMode')\r\n                            }}\r\n                        >\r\n                            {isDarkMode ? (\r\n                                <BrightnessHighIcon/>\r\n                            ) : (\r\n                                <Brightness4Icon/>\r\n                            )}\r\n                        </IconButton>\r\n                        {isDarkMode ? (\r\n                            <>Light Mode</>\r\n                        ) : (\r\n                            <>Dark Mode</>\r\n                        )}\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n                        Layout\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <FontSizeMenu intl={intl}/>\r\n                        Font size\r\n                    </Typography>\r\n                </MenuItem><MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LanguageMenu intl={intl}/>\r\n                    </Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton\r\n                title={\"Toggle theme\"}\r\n                onClick={() => {\r\n                    toggleThisTheme('isDarkMode')\r\n                }}\r\n            >\r\n                {isDarkMode ? (\r\n                    <BrightnessHighIcon/>\r\n                ) : (\r\n                    <Brightness4Icon/>\r\n                )}\r\n            </IconButton>\r\n            {/*layoutItems*/}\r\n            <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n            <FontSizeMenu intl={intl}/>\r\n            <LanguageMenu intl={intl}/>\r\n        </Box>\r\n    </>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nexport default function ({ data, name }) {\r\n  const theme = useTheme();\r\n  const [_data, set_Data] = useState([]);\r\n  useEffect(() => {\r\n    set_Data([\r\n      {\r\n        x: data,\r\n        type: \"histogram\",\r\n        marker: {\r\n          color: \"rgba(100,250,100,0.7)\",\r\n          line: {\r\n            color: \"rgba(100,250,100,1)\",\r\n            width: 1,\r\n          },\r\n        },\r\n      },\r\n    ]);\r\n  }, [data]);\r\n  return (\r\n    <Plot\r\n      data={_data}\r\n      layout={{\r\n        xaxis: { title: name },\r\n        yaxis: { showline: false, showticklabels: false, zeroline: false },\r\n        font: {\r\n          family: theme.typography.fontFamily,\r\n          size: theme.typography.fontSize,\r\n          color: theme.palette.text.primary,\r\n        },\r\n        margin: { t: 10, r: 10, l: 10, b: 40 },\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor: \"rgba(0,0,0,0)\", //theme.palette.background.paper,\r\n      }}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Histogram\",\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nexport default function ({\r\n  data,\r\n  xname,\r\n  yname,\r\n  height,\r\n  width,\r\n  onSelected,\r\n  onSelect,\r\n  onHover,\r\n  hovered,\r\n  color,\r\n}) {\r\n  const theme = useTheme();\r\n  const [_data, set_Data] = useState([]);\r\n  useEffect(() => {\r\n    const trace = [\r\n      {\r\n        x: data.x,\r\n        y: data.y,\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n          color: color ?? undefined,\r\n          size: 5,\r\n        },\r\n      },\r\n    ];\r\n    if (hovered)\r\n      trace.push({\r\n        x: hovered.x,\r\n        y: hovered.y,\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n          color: \"rgba(0,0,0,0)\",\r\n          size: 8,\r\n          line: {\r\n            color: \"white\", // Màu viền\r\n            width: 2, // Độ rộng viền\r\n          },\r\n        },\r\n        hoverinfo: \"skip\",\r\n      });\r\n    set_Data(trace);\r\n  }, [data, hovered, color]);\r\n  const handleSelected = (event) => {\r\n    const points = event.points;\r\n    const selected = {};\r\n    points.forEach((point) => (selected[point.data._id] = true));\r\n\r\n    onSelected(selected);\r\n  };\r\n  return (\r\n    <Plot\r\n      data={_data}\r\n      layout={{\r\n        xaxis: { title: xname },\r\n        yaxis: { title: yname },\r\n        font: {\r\n          family: theme.typography.fontFamily,\r\n          size: theme.typography.fontSize,\r\n          color: theme.palette.text.primary,\r\n        },\r\n        autoscale: false,\r\n        height: height,\r\n        width: width,\r\n        margin: { t: 10, r: 10 },\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor: \"rgba(0,0,0,0)\", //theme.palette.background.paper,\r\n        showlegend: false,\r\n      }}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Histogram\",\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n      }}\r\n      onSelected={handleSelected}\r\n      onClick={(event) => {\r\n        if (event.points && event.points.length > 0) {\r\n          const point = event.points[0];\r\n          onSelect(data.data[point.pointIndex]);\r\n        }\r\n      }}\r\n      onHover={(event) => {\r\n        if (event.points && event.points.length > 0) {\r\n          const pointIndex = event.points[0].pointIndex;\r\n          onHover(data.data[pointIndex]);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Grid, MenuItem, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport Scatterplot from \"../Scatterplot\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nfunction Scatterwrapper({\r\n  data,\r\n  selectList,\r\n  onSelect,\r\n  onHover,\r\n  hovered,\r\n  getColor,\r\n}) {\r\n  const [axis, setAxis] = useState({\r\n    x: selectList[0].key,\r\n    y: selectList[1].key,\r\n  });\r\n  const [scatterdata, setScatterdata] = useState({ x: [], y: [], data: [] });\r\n  const [highlight, sethighlight] = useState({ x: [], y: [], data: [] });\r\n  const [color, setcolor] = useState([]);\r\n  const selectListMap = useMemo(() => {\r\n    const m = {};\r\n    selectList.forEach((d) => {\r\n      m[d.key] = d.label;\r\n    });\r\n    return m;\r\n  }, [selectList]);\r\n  useEffect(() => {\r\n    const scatterdata = { x: [], y: [], data: [] };\r\n    data.forEach((d) => {\r\n      scatterdata.x.push(d[axis.x]);\r\n      scatterdata.y.push(d[axis.y]);\r\n      scatterdata.data.push(d);\r\n    });\r\n    setScatterdata(scatterdata);\r\n  }, [axis, data]);\r\n  useEffect(() => {\r\n    if (scatterdata.data)\r\n      setcolor(scatterdata.data.map((d) => getColor.getColor(d)));\r\n  }, [scatterdata, getColor]);\r\n  useEffect(() => {\r\n    if (hovered)\r\n      sethighlight({\r\n        x: [hovered[axis.x]],\r\n        y: [hovered[axis.y]],\r\n        data: [hovered],\r\n      });\r\n    else sethighlight({ x: [], y: [], data: [] });\r\n  }, [axis, hovered]);\r\n  return (\r\n    <Grid container direction={\"column\"} sx={{ m: 1 }}>\r\n      <Grid container item spacing={1}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            id=\"viz-selection-scatterx\"\r\n            select\r\n            label=\"X axis\"\r\n            value={axis.x}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setAxis({ ...axis, x: event.target.value });\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`x-s-${key}`} value={key}>\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            id=\"viz-selection-scatterx\"\r\n            select\r\n            label=\"Y axis\"\r\n            value={axis.y}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setAxis({ ...axis, y: event.target.value });\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`y-s-${key}`} value={key}>\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ position: \"relative\" }}>\r\n        <AutoSizer style={{ height: \"100%\", width: \"100%\" }} disableHeight>\r\n          {({ height, width }) => {\r\n            return (\r\n              <Scatterplot\r\n                data={scatterdata}\r\n                xname={selectListMap[axis.x]}\r\n                yname={selectListMap[axis.y]}\r\n                width={width}\r\n                height={width}\r\n                onSelect={onSelect}\r\n                onHover={onHover}\r\n                hovered={highlight}\r\n                color={color}\r\n              />\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default Scatterwrapper;\r\n","import {\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  OutlinedInput,\r\n  Checkbox,\r\n  ListItemText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { PCA } from \"ml-pca\";\r\nimport Scatterplot from \"../Scatterplot\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nfunction PCAplot({ data, selectList, onSelect, onHover, hovered, getColor }) {\r\n  const [axis, setAxis] = useState(selectList.map((d) => d.key));\r\n  const [scatterdata, setScatterdata] = useState({ x: [], y: [], data: [] });\r\n  const [highlight, sethighlight] = useState({ x: [], y: [], data: [] });\r\n  const [pcaob, setpcaob] = useState();\r\n  const [color, setcolor] = useState([]);\r\n  const selectListMap = useMemo(() => {\r\n    const m = {};\r\n    selectList.forEach((d) => {\r\n      m[d.key] = d;\r\n    });\r\n    return m;\r\n  }, [selectList]);\r\n  useEffect(() => {\r\n    const dataMatrix = [];\r\n    const dataValid = [];\r\n    try {\r\n      data.forEach((d) => {\r\n        let valid = true;\r\n        const m = [];\r\n        axis.forEach((key) => {\r\n          if (isNaN(d[key])) valid = false;\r\n          else m.push(d[key]);\r\n        });\r\n        if (valid) {\r\n          dataMatrix.push(m);\r\n          dataValid.push(d);\r\n        }\r\n      });\r\n\r\n      const pca = new PCA(dataMatrix);\r\n      const result = pca.predict(dataMatrix);\r\n      // PCA 2 comp\r\n      const principalComponent1 = result.data.map((row) => row[0]);\r\n      const principalComponent2 = result.data.map((row) => row[1]);\r\n\r\n      const explain = pca.getExplainedVariance();\r\n      const scatterdata = {\r\n        x: principalComponent1,\r\n        y: principalComponent2,\r\n        data: dataValid,\r\n        xname: `PC1 (${Math.round(explain[0] * 1000) / 10}%)`,\r\n        yname: `PC2 (${Math.round(explain[1] * 1000) / 10}%)`,\r\n      };\r\n      setpcaob(pca);\r\n      setScatterdata(scatterdata);\r\n    } catch (e) {\r\n      setScatterdata({ x: [], y: [], data: [], xname: \"PC1\", yname: \"PC2\" });\r\n      setpcaob(null);\r\n    }\r\n  }, [data, axis]);\r\n  useEffect(() => {\r\n    setcolor(scatterdata.data.map((row) => getColor.getColor(row)));\r\n  }, [scatterdata.data, getColor]);\r\n  useEffect(() => {\r\n    if (hovered && pcaob)\r\n      try {\r\n        debugger;\r\n        const m = [];\r\n        let valid = true;\r\n        axis.forEach((key) => {\r\n          if (isNaN(hovered[key])) valid = false;\r\n          else m.push(hovered[key]);\r\n        });\r\n        if (valid) {\r\n          const p = pcaob.predict([m]);\r\n          sethighlight({\r\n            x: [p.data[0][0]],\r\n            y: [p.data[0][1]],\r\n            data: [hovered],\r\n          });\r\n        } else {\r\n          throw Error(\"Hover point invalid\");\r\n        }\r\n      } catch (e) {\r\n        sethighlight({ x: [], y: [], data: [] });\r\n      }\r\n    else sethighlight({ x: [], y: [], data: [] });\r\n  }, [axis, hovered, pcaob]);\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={\"column\"}\r\n      sx={{ position: \"relative\", width: \"100%\" }}\r\n    >\r\n      <Grid item>\r\n        <FormControl sx={{ m: 1, mb: 0, maxWidth: 300 }}>\r\n          <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\r\n\r\n          <Select\r\n            id=\"viz-selection-pca\"\r\n            multiple\r\n            value={axis}\r\n            input={<OutlinedInput label=\"PCA axis\" size=\"small\" />}\r\n            renderValue={(selected) =>\r\n              selected.map((d) => selectListMap[d]?.label).join(\", \")\r\n            }\r\n            onChange={(event) => {\r\n              const {\r\n                target: { value },\r\n              } = event;\r\n              setAxis(typeof value === \"string\" ? value.split(\",\") : value);\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`pca-s-${key}`} value={key}>\r\n                <Checkbox checked={axis.indexOf(key) > -1} />\r\n                <ListItemText primary={label} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ position: \"relative\" }}>\r\n        <AutoSizer style={{ height: \"100%\", width: \"100%\" }} disableHeight>\r\n          {({ height, width }) => {\r\n            return (\r\n              <Scatterplot\r\n                data={scatterdata}\r\n                xname={scatterdata.xname}\r\n                yname={scatterdata.yname}\r\n                color={color}\r\n                width={width}\r\n                height={width}\r\n                onSelect={onSelect}\r\n                onHover={onHover}\r\n                hovered={highlight}\r\n              />\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default PCAplot;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Card, Stack, Typography, Unstable_Grid2 as Grid } from \"@mui/material\";\r\nimport { scaleLinear, extent } from \"d3\";\r\nexport default function Barchart({ data, fullHeight }) {\r\n  const widthScale = useMemo(() => {\r\n    return scaleLinear()\r\n      .range([0.1, 1])\r\n      .domain(\r\n        extent(data, (d) => {\r\n          return d?.count;\r\n        })\r\n      );\r\n  }, [data]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sx={{ maxWidth: 300, textAlign: \"right\" }}>\r\n        <Stack\r\n          m={1}\r\n          sx={{\r\n            maxHeight: fullHeight ? null : \"30vh\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {data.map((d) => (\r\n            <Typography key={d[\"title\"]} variant={\"subtitle2\"}>\r\n              {d[\"title\"]}\r\n            </Typography>\r\n          ))}\r\n        </Stack>\r\n      </Grid>\r\n      <Grid item flexGrow={2}>\r\n        <Stack\r\n          m={1}\r\n          sx={{\r\n            maxHeight: fullHeight ? null : \"30vh\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {data.map((d) => (\r\n            <Typography key={d[\"title\"]} variant={\"subtitle2\"}>\r\n              <div\r\n                style={{\r\n                  width: `${80 * (widthScale(d.count) ?? 1)}%`,\r\n                  height: 10,\r\n                  backgroundColor: d.color,\r\n                  display: \"inline-block\",\r\n                  marginRight: 5,\r\n                }}\r\n              ></div>\r\n              {d.count}\r\n            </Typography>\r\n          ))}\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import SongListDetail from \"../SongListDetail\";\r\nimport React, { useCallback, useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Stack,\r\n  Typography,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport Histogram from \"./Histogram\";\r\nimport { metricList, rankMetricList } from \"../../Providers/Database/ulti\";\r\nimport Scatterwrapper from \"./Scatterwrapper\";\r\nimport PCAplot from \"./PCAplot\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport { colorArr } from \"../Earth\";\r\nimport { scaleOrdinal, maxIndex, rollup } from \"d3\";\r\nimport { isArray } from \"lodash\";\r\nimport Barchart from \"./Barchart\";\r\n\r\nconst TOP = 10;\r\nfunction VizPanel({ countries, data, source, onChangeSource, onSelect }) {\r\n  const [histindata, sethisindata] = useState([]);\r\n  const [rankdata, setrankdata] = useState([]);\r\n  const [colorKey, setColorKey] = useState(rankMetricList[0].key);\r\n  const [hovered, sethovered] = useState(null);\r\n  useEffect(() => {\r\n    const histindata = metricList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      data: data.map((d) => d[key]),\r\n    }));\r\n    sethisindata(histindata);\r\n  }, [data]);\r\n  const onHover = useCallback((data) => {\r\n    sethovered(data);\r\n  }, []);\r\n\r\n  const [rankMap, setrankMap] = useState({\r\n    data: {},\r\n    colorsCategory: () => {},\r\n    getColor: () => {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    const countMap = {};\r\n    data.forEach((d) => {\r\n      if (isArray(d[colorKey])) {\r\n        d[colorKey].forEach((e) => (countMap[e] = (countMap[e] ?? 0) + 1));\r\n      } else if (d[colorKey] && d[colorKey] !== null) {\r\n        countMap[d[colorKey]] = (countMap[d[colorKey]] ?? 0) + 1;\r\n      }\r\n    });\r\n    let rankData = [];\r\n    Object.keys(countMap).forEach((k) => {\r\n      rankData.push({ title: k, count: countMap[k] });\r\n    });\r\n    rankData.sort((a, b) => b.count - a.count);\r\n    rankData = rankData.slice(0, TOP);\r\n    setrankdata(rankData);\r\n  }, [colorKey, data]);\r\n  useEffect(() => {\r\n    const colorsCategory = (function (otherColor = \"#ececec\") {\r\n      const scale = scaleOrdinal(colorArr);\r\n      let master = (val) => {\r\n        if (!val || val === \"\" || val.trim === \"\") return \"#444444\";\r\n        const domain = scale.domain();\r\n        if (domain.find((d) => d === val) || domain.length < TOP)\r\n          return scale(val);\r\n        else return otherColor;\r\n      };\r\n      master.domain = scale.domain;\r\n      master.range = scale.range;\r\n      return master;\r\n    })();\r\n    rankdata.forEach((d) => (d.color = colorsCategory(d.title)));\r\n    const r = {};\r\n    rankdata.forEach((element) => {\r\n      r[element[\"title\"]] = element;\r\n    });\r\n    setrankMap({\r\n      data: r,\r\n      colorsCategory,\r\n      getColor: function (d) {\r\n        if (isArray(d[colorKey])) {\r\n          debugger;\r\n          const i = maxIndex(d[colorKey], (e) => r[e]?.count);\r\n          return colorsCategory(d[colorKey][i]);\r\n        } else {\r\n          return colorsCategory(d[colorKey]);\r\n        }\r\n      },\r\n    });\r\n  }, [rankdata]);\r\n  return (\r\n    <Grid container sx={{ position: \"relative\", height: \"100%\" }} spacing={1}>\r\n      {/* <Grid item xs={3}>\r\n        <SongListDetail countries={countries} />\r\n      </Grid> */}\r\n      <Grid item xs={9}>\r\n        <Grid container spacing={{ xs: 2, md: 3 }} sx={{ pt: 2 }}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"viz-selection-source\"\r\n              select\r\n              label=\"Viz source\"\r\n              value={source}\r\n              variant=\"standard\"\r\n              fullWidth\r\n              onChange={(event) => {\r\n                onChangeSource(event.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"event\">Event list</MenuItem>\r\n              <MenuItem value=\"selected\">Selected list</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider>Track histogram</Divider>\r\n          </Grid>\r\n          <Grid item xs={12} container justifyContent=\"center\" spacing={1}>\r\n            {histindata.map(({ key, label, data }) => (\r\n              <Grid key={key} item style={{ height: 120, width: 300 }}>\r\n                <Histogram name={label} data={data} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card\r\n              sx={{\r\n                pointerEvents: \"all\",\r\n                overflowY: \"auto\",\r\n                backgroundColor: (theme) =>\r\n                  semicolor(theme.palette.background.paper),\r\n              }}\r\n            >\r\n              <Stack\r\n                direction={\"collumn\"}\r\n                spacing={2}\r\n                gap={2}\r\n                sx={{ m: 1, p: 0 }}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Typography variant={\"h3\"}>Top 10 </Typography>\r\n                <TextField\r\n                  size=\"small\"\r\n                  select\r\n                  value={colorKey}\r\n                  onChange={(event) => {\r\n                    setColorKey(event.target.value);\r\n                  }}\r\n                >\r\n                  {rankMetricList.map(({ key, label }) => (\r\n                    <MenuItem key={key} value={key}>\r\n                      {label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Stack>\r\n              <Barchart data={rankdata} />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Scatterwrapper\r\n              data={data}\r\n              selectList={metricList}\r\n              onSelect={onSelect}\r\n              onHover={onHover}\r\n              hovered={hovered}\r\n              getColor={rankMap}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <PCAplot\r\n              data={data}\r\n              selectList={metricList}\r\n              onSelect={onSelect}\r\n              onHover={onHover}\r\n              hovered={hovered}\r\n              getColor={rankMap}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VizPanel;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport Page from \"../../containers/Page/Page\";\r\nimport { useDatabase } from \"../../Providers/Database\";\r\nimport {\r\n  Backdrop,\r\n  Box,\r\n  Unstable_Grid2 as Grid,\r\n  LinearProgress,\r\n  Paper,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Stack,\r\n  IconButton,\r\n  Collapse,\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable/index\";\r\nimport {\r\n  Responsive as ResponsiveGridLayout,\r\n  WidthProvider,\r\n} from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setFilter,\r\n  setFilters,\r\n  selectFilters,\r\n} from \"../../reducer/streamfilters\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport { useQuestions } from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport { SET_MENU } from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from \"@mui/icons-material/Minimize\";\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport * as FlexLayout from \"flexlayout-react\";\r\nimport \"./layout.css\";\r\nimport {\r\n  AddCircle,\r\n  Brightness4 as Brightness4Icon,\r\n  BrightnessHigh as BrightnessHighIcon,\r\n} from \"@mui/icons-material\";\r\nimport EventMap from \"../../components/EventMap\";\r\nimport Search from \"../../components/Search\";\r\nimport MediaDetail from \"../../components/MediaDetail\";\r\nimport AppHeader from \"../../components/AppHeader\";\r\nimport { actionCreators } from \"../../reducer/actions/selectedList\";\r\nimport {\r\n  fields,\r\n  fieldsWithoutSelected,\r\n} from \"../../components/EventTable/fields\";\r\nimport { useLog } from \"../../Providers/Firebase\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport VizPanel from \"components/VizPanel\";\r\nimport { metricRadarList } from \"../../Providers/Database/ulti\";\r\nimport { mean as d3mean } from \"d3\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nconst LandingPage = () => {\r\n  // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n  const dispatch = useDispatch();\r\n  const intl = useIntl();\r\n  // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n  const filters = useSelector(selectFilters);\r\n  // const { appConfig } = useConfig()\r\n  const {\r\n    getList,\r\n    isLoading,\r\n    getEvents,\r\n    requestEvents,\r\n    requestDetail,\r\n    getDetail,\r\n    setFuncCollection,\r\n    requestVizdata,\r\n  } = useDatabase();\r\n  const [zoomLoc, setZoomLoc] = useState();\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n  const [layoutItems, setLayoutItems] = useState({\r\n    Earth: { key: \"Earth View\", val: true, disable: true },\r\n    eventList: { key: \"Event List\", val: true },\r\n    eventDetail: { key: \"Event Details\", val: true },\r\n    eventMap: { key: \"Event List Map\", val: true },\r\n    mediaDetail: { key: \"Listen\", val: true },\r\n    eventSelectedList: { key: \"Selected Events\", val: true },\r\n    eventListDetail: { key: \"Event List Visualization\", val: true },\r\n  });\r\n  const toolbarRef = useRef(null);\r\n  const layoutRef = useRef(null);\r\n  const currentDetail = getDetail();\r\n  const eventTotalData = useSelector((state) => state.seletedList.currentList);\r\n  const eventSelectedData = useSelector((state) =>\r\n    Array.from(state.seletedList.items.values())\r\n  );\r\n  const { setlocation, logEvents } = useLog();\r\n  const query = useQuery();\r\n  const location = useLocation();\r\n  const [vizsource, setVizSource] = useState(\"event\");\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setlocation(position.coords);\r\n          setZoomLoc({\r\n            lng: position.coords.longitude,\r\n            lat: position.coords.latitude,\r\n          });\r\n        },\r\n        () => {}\r\n      );\r\n    }\r\n    dispatch({ type: SET_MENU, opened: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDetail)\r\n      setZoomLoc({ lng: currentDetail.long, lat: currentDetail.lat });\r\n  }, [currentDetail]);\r\n\r\n  const isLoadingInit = isLoading(\"rawData\");\r\n  const isLoadingEvent = isLoading(\"events\");\r\n  const isLoadingLocs = isLoading(\"locs\");\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n  useEffect(() => {\r\n    if (!isLoadingInit) {\r\n      if (firstLoad) {\r\n        setFirstLoad(false);\r\n        if (!(query && query.get(\"selected\"))) requestEvents(filters, 1000);\r\n      } else {\r\n        requestEvents(filters, 1000);\r\n      }\r\n    }\r\n  }, [isLoadingInit, filters, firstLoad]);\r\n  const onSelectStream = useCallback(\r\n    (data) => {\r\n      debugger;\r\n      requestDetail(data);\r\n    },\r\n    [getEvents]\r\n  );\r\n\r\n  const onSelect = useCallback((value, extra) => {\r\n    if (extra) setZoomLoc({ lng: extra.long, lat: extra.lat });\r\n    if (Object.keys(value)[0]) {\r\n      logEvents(\"click_earth\", { ...value });\r\n    }\r\n    dispatch(setFilters({ value }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    requestVizdata(\r\n      (vizsource ? eventTotalData : eventSelectedData).map((d) => d._id)\r\n    );\r\n  }, [vizsource, vizsource ? eventTotalData : eventSelectedData]);\r\n\r\n  const meanRadar = useMemo(() => {\r\n    const total = getList(\"vizdata\");\r\n    const meanradar = {};\r\n    metricRadarList.forEach(({ key }) => {\r\n      meanradar[key] = d3mean(total, (d) => d[key]);\r\n    });\r\n    return meanradar;\r\n  }, [getList(\"vizdata\")]);\r\n\r\n  // const onTogleWin = useCallback((key)=>{\r\n  //     setLayoutItems({...layoutItems,[key]:!layoutItems[key]});\r\n  // },[layoutItems])\r\n\r\n  // const generateLayout = (k)=>{\r\n  //     switch (k){\r\n  //         case 'eventList':\r\n  //             return <EventTable data={getEvents()}\r\n  //                                isLoadingData={isLoadingEvent}\r\n  //                                onSelectRow={onSelectStream}\r\n  //                                highlightId={currentDetail}\r\n  //                                onTogleWin={()=>onTogleWin(\"eventList\")}\r\n  //             />\r\n  //         case 'eventDetail':\r\n  //             return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n  //                                 events={getEvents()}\r\n  //                                 locs={getList('locs')}\r\n  //                                 sx={{height:'100%',position:'relative'}}\r\n  //                                 onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n  //             />\r\n  //         default:\r\n  //             return ''\r\n  //     }\r\n  // }\r\n\r\n  const [layouts, setLayouts] = useState(() =>\r\n    FlexLayout.Model.fromJson({\r\n      global: {\r\n        // \"splitterSize\": 1,\r\n        // \"splitterExtra\": 4,\r\n        tabEnableFloat: true,\r\n        tabSetMinWidth: 100,\r\n        tabSetMinHeight: 100,\r\n        borderMinSize: 100,\r\n      },\r\n      borders: [\r\n        {\r\n          type: \"border\",\r\n          location: \"top\",\r\n          size: 400,\r\n          active: true,\r\n          children: [],\r\n        },\r\n        {\r\n          type: \"border\",\r\n          location: \"left\",\r\n          size: windowDimensions.width * 0.4,\r\n          children: [\r\n            {\r\n              type: \"tab\",\r\n              name: \"Earth View\",\r\n              enableClose: false,\r\n              component: \"Earth\",\r\n            },\r\n          ],\r\n          selected: 0,\r\n        },\r\n      ],\r\n      layout: {\r\n        type: \"row\",\r\n        weight: 100,\r\n        children: [\r\n          {\r\n            type: \"row\",\r\n            children: [\r\n              {\r\n                type: \"row\",\r\n                children: [\r\n                  {\r\n                    type: \"tabset\",\r\n                    weight: 50,\r\n                    children: [\r\n                      {\r\n                        type: \"tab\",\r\n                        name: \"Event List\",\r\n                        component: \"eventList\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    type: \"tabset\",\r\n                    weight: 50,\r\n                    children: [\r\n                      {\r\n                        type: \"tab\",\r\n                        name: \"Selected Events\",\r\n                        component: \"eventSelectedList\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                type: \"tabset\",\r\n                weight: 50,\r\n                children: [\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event Detail\",\r\n                    component: \"eventDetail\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Listen\",\r\n                    component: \"mediaDetail\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event List Map\",\r\n                    component: \"eventMap\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event List Visualization\",\r\n                    component: \"eventListDetail\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCreators.newList(getEvents()));\r\n  }, [getEvents()]);\r\n\r\n  const factory = (node) => {\r\n    let component = node.getComponent();\r\n    switch (component) {\r\n      case \"eventList\":\r\n        return (\r\n          <EventTable\r\n            id=\"eventListTable\"\r\n            data={eventTotalData ?? []}\r\n            columns={fields}\r\n            isLoadingData={isLoadingEvent}\r\n            onSelectRow={onSelectStream}\r\n            highlightId={currentDetail}\r\n            totalData={eventTotalData}\r\n            selectedData={eventSelectedData}\r\n            onSendToList={(l) => dispatch(actionCreators.addsToBasket(l))}\r\n            onRemoveFromList={(l) => dispatch(actionCreators.removeItems(l))}\r\n            // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n            mainurl={location}\r\n          />\r\n        );\r\n      case \"eventListDetail\":\r\n        return (\r\n          <VizPanel\r\n            countries={getList(\"countries\")}\r\n            data={getList(\"vizdata\")}\r\n            source={vizsource}\r\n            onChangeSource={(source) => {\r\n              setVizSource(source);\r\n              // requestVizdata(\r\n              //   (source ? eventTotalData : eventSelectedData).map((d) => d._id)\r\n              // )\r\n            }}\r\n            onSelect={onSelectStream}\r\n          />\r\n        );\r\n      case \"eventSelectedList\":\r\n        return (\r\n          <EventTable\r\n            id=\"eventSelectedListTable\"\r\n            data={eventSelectedData}\r\n            columns={fieldsWithoutSelected}\r\n            isLoadingData={isLoadingEvent}\r\n            onSelectRow={onSelectStream}\r\n            highlightId={currentDetail}\r\n            totalData={eventTotalData}\r\n            selectedData={eventSelectedData}\r\n            disableAdding={true}\r\n            onSendToList={(l) => dispatch(actionCreators.addsToBasket(l))}\r\n            onRemoveFromList={(l) => dispatch(actionCreators.removeItems(l))}\r\n            // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n            mainurl={location}\r\n          />\r\n        );\r\n      case \"eventMap\":\r\n        return (\r\n          <EventMap\r\n            currentDetail={currentDetail}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n          />\r\n        );\r\n      case \"eventDetail\":\r\n        return (\r\n          <EventDetail\r\n            currentDetail={currentDetail}\r\n            onSelect={onSelect}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n            sx={{ height: \"100%\", position: \"relative\" }}\r\n            meanradar={meanRadar}\r\n            // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n          />\r\n        );\r\n      case \"mediaDetail\":\r\n        return (\r\n          <MediaDetail\r\n            currentDetail={currentDetail}\r\n            onSelect={onSelect}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n            sx={{ height: \"100%\", position: \"relative\" }}\r\n            // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n          />\r\n        );\r\n      case \"Earth\":\r\n        return (\r\n          <AutoSizer style={{ height: \"100%\", width: \"100%\" }}>\r\n            {({ height, width }) => {\r\n              return (\r\n                <Earth3D\r\n                  locs={getList(\"locs\")}\r\n                  countries={getList(\"countries\")}\r\n                  onSelect={onSelect}\r\n                  onSelectLegend={setFuncCollection}\r\n                  width={width}\r\n                  height={height}\r\n                  toolbarRef={toolbarRef}\r\n                  zoomLoc={zoomLoc}\r\n                />\r\n              );\r\n            }}\r\n          </AutoSizer>\r\n        );\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  // const onRenderTabSet = (tabSetNode, renderValues) =>{\r\n  //     // debugger\r\n  //     if (!Object.keys(layoutItems).reduce((pre,k)=>pre && (layoutItems[k].val),true)) {\r\n  //         renderValues.stickyButtons.push(<AddCircle\r\n  //             color={'primary'}\r\n  //             title= \"Add\"\r\n  //             key= \"Add button\"\r\n  //             className={\"flexlayout__tab_toolbar_button\"}\r\n  //             style={{width: \"1.1em\", height: \"1.1em\"}}\r\n  //         />)\r\n  //         // renderValues.stickyButtons.push(React.createElement(\"img\", {\r\n  //         //     src: \"images/add.svg\",\r\n  //         //     alt: \"Add\",\r\n  //         //     key: \"Add button\",\r\n  //         //     title: \"Add Tab (using onRenderTabSet callback, see Demo)\",\r\n  //         //     style: {width: \"1.1em\", height: \"1.1em\"},\r\n  //         //     className: \"flexlayout__tab_toolbar_button\",\r\n  //         //     // onClick: function () { return _this.onAddFromTabSetButton(node); }\r\n  //         // }));\r\n  //     }\r\n  // }\r\n  const layoutItemsOnChange = useCallback(\r\n    (key, item, isOn) => {\r\n      debugger;\r\n      if (layoutRef.current) {\r\n        if (isOn)\r\n          layoutRef.current.addTabToActiveTabSet({\r\n            name: item.key,\r\n            component: key,\r\n          });\r\n        else {\r\n          // layouts\r\n          // find id\r\n          const current = Object.keys(layouts._idMap).find(\r\n            (k) => layouts._idMap[k]._attributes.component === key\r\n          );\r\n          if (current) layouts.doAction(FlexLayout.Actions.deleteTab(current));\r\n        }\r\n        layoutItems[key].val = isOn;\r\n        setLayoutItems({ ...layoutItems });\r\n      }\r\n    },\r\n    [layoutRef, layouts]\r\n  );\r\n  return (\r\n    <Page\r\n      appBarLeftContent={\r\n        <AppHeader\r\n          layoutItems={layoutItems}\r\n          layoutItemsOnChange={layoutItemsOnChange}\r\n        />\r\n      }\r\n      appBarContent={\r\n        <>\r\n          <Search />\r\n          <div ref={toolbarRef}></div>\r\n          <UndoRedo />\r\n        </>\r\n      }\r\n    >\r\n      {/*<div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>*/}\r\n      {/*    <AutoSizer style={{ height: 'calc(100vh - 64px)', width: '100%' }} >*/}\r\n      {/*        {({ height, width }) => {*/}\r\n      {/*            return <Earth3D locs={getList('locs')}*/}\r\n      {/*                            countries={getList('countries')}*/}\r\n      {/*                            onSelect={onSelect}*/}\r\n      {/*                            onSelectLegend={setFuncCollection}*/}\r\n      {/*                            width={width} height={height}*/}\r\n      {/*                            toolbarRef={toolbarRef}*/}\r\n      {/*                            zoomLoc={zoomLoc}*/}\r\n      {/*            />*/}\r\n      {/*        }}*/}\r\n      {/*    </AutoSizer>*/}\r\n      {/*</div>*/}\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          position: \"relative\",\r\n          pointerEvents: \"all\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <FlexLayout.Layout\r\n          model={layouts}\r\n          ref={layoutRef}\r\n          factory={factory}\r\n          tabEnableRenderOnDemand={false}\r\n          // onRenderTabSet={onRenderTabSet}\r\n          popoutURL=\"#/popout\"\r\n          realtimeResize={false}\r\n          onModelChange={(m) => {\r\n            // check tab\r\n            Object.keys(layoutItems).forEach(\r\n              (k) => (layoutItems[k].val = false)\r\n            );\r\n            // m._root._children.forEach(m=>m._children.forEach(m=> {\r\n            //     if (m._attributes.component&&layoutItems[m._attributes.component])\r\n            //         layoutItems[m._attributes.component].val = true\r\n            //     else\r\n            //          m._children.forEach(m => layoutItems[m._attributes.component]?(layoutItems[m._attributes.component].val = true):'')\r\n            // }));\r\n            // m._borders._borders.forEach(m=>m._children.forEach(m=>layoutItems[m._attributes.component].val=true));\r\n            Object.values(m._idMap).forEach((m) => {\r\n              if (\r\n                m._attributes.component &&\r\n                layoutItems[m._attributes.component]\r\n              )\r\n                layoutItems[m._attributes.component].val = true;\r\n            });\r\n            setLayoutItems(layoutItems);\r\n            setLayouts(m);\r\n          }}\r\n        />\r\n\r\n        {/*<AutoSizer style={{ minHeight: '100%', width: '100%', position:'relative' }} >*/}\r\n        {/*    {({ height, width }) => {*/}\r\n        {/*        return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}*/}\r\n        {/*                      layouts={layouts}*/}\r\n        {/*                     onBreakpointChange={onBreakpointChange}*/}\r\n        {/*                     onLayoutChange={onLayoutChange}*/}\r\n        {/*                      preventCollision={true}*/}\r\n        {/*                      compactType={null}*/}\r\n        {/*                      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}*/}\r\n        {/*                     margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}*/}\r\n        {/*                         width={width}*/}\r\n        {/*                         rowHeight={(height-20)/10 -10}*/}\r\n        {/*                         height={height}*/}\r\n        {/*                      style={{position:'relative',height:height, pointerEvents:'all'}} >*/}\r\n        {/*            {*/}\r\n        {/*                Object.keys(layoutItems).map(k=>layoutItems[k]?<div key={k} style={{pointerEvents:'all'}}>*/}\r\n        {/*                    {generateLayout(k)}*/}\r\n        {/*                </div>:'')*/}\r\n        {/*            }*/}\r\n        {/*</ResponsiveGridLayout>}}*/}\r\n        {/*</AutoSizer>*/}\r\n      </div>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={isLoadingInit || isLoadingLocs}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            width: \"50%\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={isLoadingInit ? 40 : isLoadingLocs ? 90 : 100}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <h2>\r\n              {isLoadingInit\r\n                ? \"Read data....\"\r\n                : isLoadingLocs\r\n                ? \"Process data...\"\r\n                : \"Done!\"}\r\n            </h2>\r\n          </Box>\r\n        </Box>\r\n      </Backdrop>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import {useLocation} from \"react-router-dom\";\r\nimport {useDatabase} from \"../Database\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport default function useQuery() {\r\n    const { search } = useLocation();\r\n    const {requestDetail, getDataFromShortenLink} = useDatabase();\r\n    return useMemo(() => {\r\n        const queryObject = new URLSearchParams(window.location.href.split('?')[1]);\r\n        if (queryObject.get(\"selected\")) {\r\n            getDataFromShortenLink(queryObject.get(\"selected\"));\r\n\r\n            return queryObject;\r\n        }\r\n        if (queryObject.get(\"id\")) {\r\n            requestDetail({_id: queryObject.get(\"id\")});\r\n            return queryObject;\r\n        }\r\n    }, [search]);\r\n    \r\n}"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","BootstrapDialogTitle","children","onClose","other","_objectWithoutProperties","_excluded","_jsxs","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","theme","palette","grey","CloseIcon","_ref","_ref$isProcessing","isProcessing","_ref$isOpen","isOpen","_ref$message","id","message","_ref$title","title","_ref$action","action","_ref$haveButton","haveButton","_ref$handleAction","handleAction","_ref$handleClose","handleClose","rest","_excluded2","intl","useIntl","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","TransitionComponent","DialogContent","DialogContentText","DialogActions","Button","formatMessage","defaultMessage","disabled","pageTitle","_ref$appBarLeftConten","appBarLeftContent","onBackClick","isLoading","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","isRTL","useAppTheme","isOnline","useOnline","_ref3","useConfig","appConfig","menu","_ref3$appBarLeadingCo","width","appBarLeadingContent","headerTitle","String","style","display","flexDirection","height","overflow","AppBar","undefined","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","t","mode","background","default","primary","dark","margin","padding","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","_ref$onDownloadSearch","onDownloadSearchList","_ref$onDownloadSelect","onDownloadSelectedList","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","Boolean","_Fragment","target","size","startIcon","SaveIcon","event","currentTarget","endIcon","KeyboardArrowDownIcon","Menu","MenuItem","href","process","ShareButton","getUrl","_useState","useState","_useState2","dialogOpen","setDialogOpen","_useState3","_useState4","url","setUrl","_useState5","_useState6","setIsProcessing","Fragment","then","d","catch","e","QuestionDialog","maxWidth","Stack","TextField","label","InputProps","readOnly","value","navigator","clipboard","writeText","_ref$id","columns","data","totalData","selectedData","disableAdding","isLoadingData","onSelectRow","highlightId","onSendToList","onRemoveFromList","mainurl","rowSelection","setRowSelection","rowVirtualizerInstanceRef","useRef","setIsLoading","sorting","setSorting","_useDatabase","useDatabase","getDownloadData","getShortenLink","event_export_list","getList","useEffect","_rowVirtualizerInstan","_rowVirtualizerInstan2","current","scrollToIndex","call","error","console","log","handleExportRows","rows","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","concat","Date","toDateString","useBom","useKeysAsHeaders","headers","Object","keys","ExportToCsv","generateCsv","handleUrl","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","MaterialReactTable","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowSelection","enableRowVirtualization","muiTablePaperProps","initialState","density","onSortingChange","onRowSelectionChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","opacity","_id","muiSelectCheckboxProps","muiTableBodyCellProps","wordBreak","whiteSpace","enableColumnResizing","enableFullScreenToggle","defaultColumn","minSize","maxSize","layoutMode","positionToolbarAlertBanner","renderTopToolbarCustomActions","_ref4","table","Box","gap","flexWrap","DownloadOption","renderBottomToolbar","_ref5","handleSelected","getSelectedRowModel","flatRows","map","handleRemoveSelected","length","flexGrow","MRT_ToolbarAlertBanner","stackAlertBanner","Tooltip","AddEventIcon","RemoveEventIcon","UndoRedo","canUndo","canRedo","onUndo","onRedo","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","styled","Paper","spacing","borderRadius","shortest","RadarChart","inputData","axisInfo","meanradar","highlight","setData","item","type","r","theta","fill","name","forEach","k","ki","_d$k$key","key","push","line","dash","_meanradar$k$key","layout","useMemo","paper_bgcolor","plot_bgcolor","autoscale","l","b","font","family","typography","fontFamily","fontSize","text","polar","radialaxis","visible","range","showlegend","Plot","config","displaylogo","toImageButtonOptions","format","scale","showEditInChartStudio","plotlyServerURL","countriesScale","scaleLinear","zoomi","domain","d3range","Map","locs","center","lon","lat","zoom","setDomain","_botColor","extent","count","long","ticks","tsize","tickS","i","mapbox","x","y","marker","hoverinfo","_toConsumableArray","longd","latd","Math","min","_highlight","find","Location_RG_ID","paper","mapboxTick","legend","showticksuffix","xanchor","orientation","metricList","radar","metricRadarList","filter","rankMetricList","isArray","expand","ExpandMoreIcon","transform","genderIcon","g","avatar","MaleIcon","FemaleIcon","_ref2","_data$Event_SE_Descri","_data$artist_info$Art","onSelect","timeStation","moment","Event_MA_TimeStation","Track_SP_Duration","Event_SE_Description","analyticData","analyticAxis","PaperCustom","component","Station_RG_Name","Chip","Station_AR_Form","Station_AR_Frequency","Link","Station_SE_WebsiteURL","MapIcon","Location_RG_City","Location_RG_Country","Station_RG_URL","Station_AR_Format","split","Station_AR_Genre","Station_SE_Description","artist_info","Grid","container","xs","Avatar","src","Artist_SP_ImageURL","mr","Artist_SP_Name","Artist_WD_Type","Artist_WD_Description","icon","Favorite","Artist_SP_Popularity","Artist_SP_Followers","Artist_WD_Country","Artist_SP_Genre","Artist_WD_Instruments","Artist_WD_Members","Artist_WD_Genders","Artist_WD_SexualOrientations","Artist_WD_Ethnicities","Artist_WD_VoiceTypes","alt","join","Artist_WD_WebsiteURL","Artist_SP_ID","spotifyIcon","loading","Artist_WD_QID","wikiIcon","Artist_WD_YouTubeID","youtubeIcon","Artist_WD_MusicBrainzID","musicbrainzIcon","elevation","gutterBottom","Track_SP_Name","Track_WD_Desciption","Track_WD_Format","Track_WD_Composers","Track_WD_Lyricists","Track_WD_Language","Track_SP_Year","Track_SP_Popularity","Track_SP_Key","Track_SP_Mode","Track_SP_BeatsPerBar","track_genre","Track_SP_Loudness","Track_SP_ID","Track_WD_QID","Track_WD_GeniusID","geniusIcon","Track_WD_YouTubeID","Track_WD_MusicBrainzID","Track_WD_Instrumentation","Divider","mt","mb","AutoSizer","currentDetail","bgcolor","contrastText","DetailCard","events","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","setIsOpen","_defineProperty","shape","borderColor","alpha","common","white","borderStyle","textTransform","paddingLeft","paddingRight","up","minWidth","SearchIcon","FilterPanel","fullWidth","scroll","year_released","track_name_genre","frameBorder","spotify_uri","replace","allow","allowFullScreen","ListenCard","_useLocale","useLocale","setLocale","_useLocale$locale","locale","LanguageIcon","anchorOrigin","vertical","horizontal","transformOrigin","allLocales","selected","dispatch","useDispatch","FormatSize","FontsizeControl","onChange","isIncrease","INCREASE_FONT_SIZE","DECREASE_FONT_SIZE","layoutItems","SpaceDashboardIcon","val","ListItemIcon","Checkbox","checked","_ref$layoutItemsOnCha","layoutItemsOnChange","_useAppTheme","toggleThisTheme","isDarkMode","anchorElNav","setAnchorElNav","handleCloseNavMenu","require","SET_MENU","opened","HelpIcon","md","MenuIcon","keepMounted","textAlign","BrightnessHighIcon","Brightness4Icon","LayoutMenu","FontSizeMenu","LanguageMenu","_data","set_Data","xaxis","yaxis","showline","showticklabels","zeroline","xname","yname","onSelected","onHover","hovered","trace","points","point","pointIndex","selectList","getColor","axis","setAxis","scatterdata","setScatterdata","sethighlight","_useState7","_useState8","setcolor","selectListMap","select","disableHeight","Scatterplot","pcaob","setpcaob","_useState9","_useState10","dataMatrix","dataValid","valid","isNaN","pca","PCA","result","predict","principalComponent1","principalComponent2","explain","getExplainedVariance","round","Error","FormControl","InputLabel","Select","multiple","input","OutlinedInput","renderValue","_selectListMap$d","indexOf","ListItemText","Barchart","fullHeight","widthScale","overflowY","_widthScale","countries","source","onChangeSource","histindata","sethisindata","rankdata","setrankdata","colorKey","setColorKey","sethovered","colorsCategory","rankMap","setrankMap","countMap","_countMap$e","_countMap$d$colorKey","rankData","sort","a","slice","otherColor","arguments","scaleOrdinal","colorArr","master","trim","element","maxIndex","_r$e","pt","Histogram","Card","pointerEvents","semicolor","Scatterwrapper","PCAplot","filters","useSelector","selectFilters","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","requestVizdata","zoomLoc","setZoomLoc","_window","window","innerWidth","innerHeight","getWindowDimensions","windowDimensions","Earth","disable","eventList","eventDetail","eventMap","mediaDetail","eventSelectedList","eventListDetail","setLayoutItems","toolbarRef","layoutRef","eventTotalData","seletedList","currentList","eventSelectedData","Array","from","items","values","_useLog","useLog","setlocation","logEvents","query","search","useLocation","getDataFromShortenLink","queryObject","URLSearchParams","location","get","useQuery","vizsource","setVizSource","geolocation","getCurrentPosition","coords","lng","longitude","latitude","isLoadingInit","isLoadingEvent","isLoadingLocs","firstLoad","setFirstLoad","onSelectStream","extra","setFilters","meanRadar","total","d3mean","_useState11","FlexLayout","fromJson","global","tabEnableFloat","tabSetMinWidth","tabSetMinHeight","borderMinSize","borders","active","enableClose","weight","_useState12","layouts","setLayouts","actionCreators","newList","isOn","addTabToActiveTabSet","_idMap","_attributes","doAction","deleteTab","Page","AppHeader","Search","model","factory","node","getComponent","EventTable","fields","addsToBasket","removeItems","VizPanel","fieldsWithoutSelected","EventMap","EventDetail","MediaDetail","Earth3D","onSelectLegend","tabEnableRenderOnDemand","popoutURL","realtimeResize","onModelChange","Backdrop","drawer"],"sourceRoot":""}