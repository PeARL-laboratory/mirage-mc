{"version":3,"file":"static/js/841.dfa529fe.chunk.js","mappings":"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","sources":["components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","components/FilterPanel/CusAutocomplete.js","components/ListboxComponent/index.js","components/FilterPanel/SelectionWithOption.js","components/FilterPanel/index.js","components/FontsizeControl/index.js","components/LegendPanel/index.js","containers/LayoutContainer/theme.js"],"sourcesContent":["import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n  useLayoutEffect,\r\n  forwardRef,\r\n} from \"react\";\r\nimport earthNight from \"../../assets/earth-night.jpg\";\r\nimport earthDay from \"../../assets/earth-blue-marble.jpg\";\r\nimport Globe from \"react-globe.gl\";\r\nimport * as d3 from \"d3\";\r\nimport \"./index.css\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Portal,\r\n  Stack,\r\n  ToggleButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport exportAsImage from \"./htm2image\";\r\nimport RemoveIcon from \"@mui/icons-material/Remove\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = [\r\n  \"#1f77b4\",\r\n  \"#aec7e8\",\r\n  \"#ff7f0e\",\r\n  \"#ffbb78\",\r\n  \"#2ca02c\",\r\n  \"#98df8a\",\r\n  \"#d62728\",\r\n  \"#ff9896\",\r\n  \"#9467bd\",\r\n  \"#c5b0d5\",\r\n  \"#8c564b\",\r\n  \"#c49c94\",\r\n  \"#e377c2\",\r\n  \"#f7b6d2\",\r\n  \"#7f7f7f\",\r\n  \"#c7c7c7\",\r\n  \"#bcbd22\",\r\n  \"#dbdb8d\",\r\n  \"#17becf\",\r\n  \"#9edae5\",\r\n];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01, 0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3, 0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1, 1]);\r\n\r\nconst Earth3D = forwardRef(\r\n  (\r\n    {\r\n      locs,\r\n      countries,\r\n      width,\r\n      height,\r\n      onSelect,\r\n      onSelectLegend,\r\n      getSwitchView,\r\n      zoomLoc,\r\n      toolbarRef,\r\n    },\r\n    ref\r\n  ) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState(\"Location_RG_Country\");\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce, setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs, setMAP_CENTERs] = useState([\r\n      { lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },\r\n      { lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },\r\n      { lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },\r\n      { lat: 33.5842591, lng: -101.8804709, altitude: 1.8 },\r\n    ]);\r\n    const [ringData, setRingData] = useState([]);\r\n    const [contriesMap, setcontriesMap] = useState({});\r\n    const theme = useTheme();\r\n    const colorsCategory = useMemo(() => {\r\n      return (function (otherColor = \"#ececec\") {\r\n        const scale = d3.scaleOrdinal(colorArr);\r\n        let master = (val) => {\r\n          if (!val || val === \"\" || val.trim === \"\") return \"black\";\r\n          const domain = scale.domain();\r\n          if (domain.find((d) => d === val) || domain.length < TOP)\r\n            return scale(val);\r\n          else return otherColor;\r\n        };\r\n        master.domain = scale.domain;\r\n        master.range = scale.range;\r\n        return master;\r\n      })();\r\n    }, []);\r\n\r\n    function handleData({ locs, countries }) {\r\n      const contriesMap = {};\r\n      const range = d3.extent(locs, (d) => d?.count);\r\n\r\n      arcThickScale.domain(range);\r\n      labelScale.domain(range);\r\n\r\n      countriesScale.domain(\r\n        d3.extent(countries, (d) => {\r\n          contriesMap[d.title] = d;\r\n          return d?.count;\r\n        })\r\n      );\r\n\r\n      //color\r\n      colorsCategory.domain([]).range(colorArr);\r\n      countries.forEach((d) => colorsCategory(d.title));\r\n\r\n      let order = 0;\r\n      if (countries.length > 3)\r\n        [0, 1, 2, 3, 0].forEach((i) => {\r\n          if (!MAP_CENTERs[order])\r\n            MAP_CENTERs[order] = { lat: 0, lng: 0, altitude: 1 };\r\n          MAP_CENTERs[order].lat = countries[i].lat;\r\n          MAP_CENTERs[order].lng = countries[i].long;\r\n          order++;\r\n        });\r\n\r\n      return { MAP_CENTERs, contriesMap };\r\n    }\r\n    useEffect(() => {\r\n      const { MAP_CENTERs, contriesMap } = handleData({ locs, countries });\r\n      setcontriesMap(contriesMap);\r\n      setMAP_CENTERs(MAP_CENTERs);\r\n      if (!zoomLoc) setCurrentSequnce(0);\r\n    }, [locs, countries]);\r\n\r\n    const [timer, setTimer] = useState(null);\r\n    useEffect(() => {\r\n      if (globeEl.current) {\r\n        if (currentSequnce < MAP_CENTERs.length) {\r\n          const interval = setTimeout(() => {\r\n            globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000);\r\n            setCurrentSequnce(currentSequnce + 1);\r\n          }, 4000);\r\n          setTimer(interval);\r\n          return () => {\r\n            clearInterval(interval);\r\n          };\r\n        }\r\n      }\r\n    }, [currentSequnce, MAP_CENTERs]);\r\n    const stopPlay = useCallback(() => {\r\n      if (timer) clearInterval(timer);\r\n      setCurrentSequnce(MAP_CENTERs.length);\r\n    }, [timer]);\r\n\r\n    const [timerRing, setTimerRing] = useState(null);\r\n    const zoomTo = useCallback(\r\n      (lng, lat) => {\r\n        if (globeEl.current) {\r\n          stopPlay();\r\n          globeEl.current.pointOfView({ lat, lng, altitude: 2 }, 2000);\r\n          setRingData([{ lng, lat }]);\r\n          if (timerRing) clearInterval(timerRing);\r\n          let interval = setTimeout(() => {\r\n            setRingData([]);\r\n          }, 10000);\r\n          setTimerRing(interval);\r\n        }\r\n      },\r\n      [currentSequnce, stopPlay, timerRing]\r\n    );\r\n    useEffect(() => {\r\n      if (zoomLoc) zoomTo(zoomLoc.lng, zoomLoc.lat);\r\n      return () => {\r\n        if (timerRing) clearInterval(timerRing);\r\n      };\r\n    }, [zoomLoc]);\r\n\r\n    const onSaveImage = useCallback(() => {\r\n      exportAsImage(globeEl.current, \"MIRAGE-mc\");\r\n    }, [holderRef, globeEl]);\r\n\r\n    useEffect(() => {\r\n      onSelectLegend(\"selectCountry\", (d) => {\r\n        onSelect({ Location_RG_Country: [d[\"title\"]] });\r\n        zoomTo(d.long, d.lat);\r\n      });\r\n    }, [zoomTo, onSelect]);\r\n\r\n    const zoomIn = useCallback(() => {\r\n      if (globeEl.current) {\r\n        const loc = { ...globeEl.current.pointOfView() };\r\n        loc.altitude = loc.altitude / 2;\r\n        globeEl.current.pointOfView(loc, 2000);\r\n      }\r\n    }, [globeEl]);\r\n    const zoomOut = useCallback(() => {\r\n      if (globeEl.current) {\r\n        const loc = { ...globeEl.current.pointOfView() };\r\n        loc.altitude = loc.altitude * 2;\r\n        globeEl.current.pointOfView(loc, 2000);\r\n      }\r\n    }, [globeEl]);\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          background: \"#ffffff\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <div\r\n          ref={holderRef}\r\n          style={\r\n            {\r\n              // transform: \"translate(0, -20vh)\",\r\n              //      marginTop:'-20vh',\r\n              // height: '120vh'\r\n            }\r\n          }\r\n        >\r\n          <Globe\r\n            width={width}\r\n            // height={height*1.2}\r\n            height={height}\r\n            ref={globeEl}\r\n            globeImageUrl={\r\n              theme.palette.mode === \"dark\" ? earthNight : earthDay\r\n            }\r\n            backgroundColor={\r\n              theme.palette.mode === \"dark\" ? \"black\" : \"#7ec7f6\"\r\n            }\r\n            showAtmosphere={true}\r\n            ringsData={ringData}\r\n            ringColor={() => \"#D39F49\"}\r\n            ringResolution={1000}\r\n            ringMaxRadius={5}\r\n            ringPropagationSpeed={5}\r\n            ringRepeatPeriod={500}\r\n            labelsData={countries}\r\n            labelLat={useCallback((d) => d.lat, [])}\r\n            labelLng={useCallback((d) => d.long, [])}\r\n            labelAltitude={useCallback(\r\n              (d) =>\r\n                selectPoint && selectPoint[\"Location_RG_Country\"] === d[\"title\"]\r\n                  ? 0.05\r\n                  : 0.02,\r\n              [selectPoint]\r\n            )}\r\n            labelText={useCallback((d) => d[\"title\"], [])}\r\n            // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n            labelSize={useCallback(\r\n              (d) =>\r\n                selectPoint && selectPoint[\"Location_RG_Country\"] === d[\"title\"]\r\n                  ? 1\r\n                  : labelScale(d?.count),\r\n              [selectPoint]\r\n            )}\r\n            // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n            labelDotRadius={0}\r\n            // labelColor={useCallback(d => (selectPoint&&(selectPoint['Location_RG_Country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n            labelColor={useCallback((d) => d.color ?? \"white\", [selectPoint])}\r\n            labelResolution={2}\r\n            hexBinPointsData={locs}\r\n            hexBinPointWeight=\"count\"\r\n            hexBinPointLng={useCallback((d) => d.long, [])}\r\n            hexBinPointLat={useCallback((d) => d.lat, [])}\r\n            hexAltitude={useCallback((d) => arcThickScale(d.sumWeight), [])}\r\n            hexBinResolution={4}\r\n            hexTopColor={useCallback(\r\n              (d) => colorsCategory(d.points[0][colorKey]),\r\n              []\r\n            )}\r\n            hexSideColor={useCallback(\r\n              (d) => colorsCategory(d.points[0][colorKey]),\r\n              []\r\n            )}\r\n            hexBinMerge={false}\r\n            onHexHover={useCallback((hex) => {\r\n              if (hex) {\r\n                setSelectPoint(hex.points[0]);\r\n              } else setSelectPoint(undefined);\r\n            }, [])}\r\n            hexLabel={useCallback((d) => {\r\n              return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(\r\n                  d.points,\r\n                  (s) => s?.count\r\n                )}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points\r\n                  .slice()\r\n                  .sort((a, b) => b?.count - a?.count)\r\n                  .map((d) => `<td>[${d?.count}]</td><td>${d.title}</td>`)\r\n                  .join(\"</tr><tr>\")}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`;\r\n            }, [])}\r\n            onHexClick={(d) => {\r\n              const Location_RG_City = [];\r\n              d.points.forEach((d) => {\r\n                debugger;\r\n                Location_RG_City.push(d.Location_RG_City);\r\n              });\r\n              onSelect({\r\n                Location_RG_City,\r\n                Location_RG_Country: [d.points[0]?.Location_RG_Country],\r\n              });\r\n            }}\r\n            onGlobeClick={stopPlay}\r\n          />\r\n        </div>\r\n        {/*{toolbarRef&&<Portal container={toolbarRef.current}>*/}\r\n        {/*    <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>*/}\r\n        {/*</Portal>}*/}\r\n        <Stack\r\n          sx={{ position: \"absolute\", right: 0, top: 0, margin: 1 }}\r\n          direction={\"row\"}\r\n        >\r\n          {getSwitchView && (\r\n            <div>\r\n              <ToggleButton\r\n                value=\"check\"\r\n                selected={getSwitchView()}\r\n                onChange={() => {\r\n                  const current = getSwitchView();\r\n                  getSwitchView(!current);\r\n                }}\r\n              >\r\n                {getSwitchView() ? \"All Data\" : \"Reviewed Data\"}\r\n              </ToggleButton>\r\n            </div>\r\n          )}\r\n          <ButtonGroup\r\n            orientation=\"vertical\"\r\n            aria-label=\"map tool\"\r\n            variant={\"contained\"}\r\n            sx={{\r\n              // backgroundColor: theme=>alpha(theme.palette.common.white, 0.15),\r\n              \"& button\": {\r\n                padding: 1,\r\n                // '&:hover': {\r\n                //     backgroundColor: theme=>alpha(theme.palette.common.white, 0.25),\r\n                // }\r\n              },\r\n            }}\r\n          >\r\n            <Button onClick={onSaveImage}>\r\n              <SaveIcon />\r\n            </Button>\r\n            <Button onClick={zoomIn}>\r\n              <AddIcon />\r\n            </Button>\r\n            <Button onClick={zoomOut}>\r\n              <RemoveIcon />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Stack>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport EventOutIcon from \"@mui/icons-material/ShoppingCartCheckout\";\r\nimport EventIcon from \"@mui/icons-material/ShoppingCart\";\r\nexport const fields = [\r\n  {\r\n    id: \"inBasket\",\r\n    header: \"Selected\",\r\n    accessorKey: \"inBasket\",\r\n    // size: 50,\r\n    Cell: ({ renderedCellValue, row }) => (\r\n      <Checkbox\r\n        disabled\r\n        size={\"small\"}\r\n        icon={<EventOutIcon />}\r\n        checkedIcon={<EventIcon color={\"secondary\"} />}\r\n        checked={row.original.inBasket}\r\n      />\r\n    ),\r\n    size: 50,\r\n    minSize: 50,\r\n    filterDisable: true,\r\n  },\r\n  {\r\n    accessorKey: \"Location_RG_City\",\r\n    header: \"City\",\r\n  },\r\n  {\r\n    accessorKey: \"Location_RG_Country\",\r\n    header: \"Country\",\r\n  },\r\n  {\r\n    accessorKey: \"Station_RG_Name\",\r\n    header: \"Station\",\r\n    filterDisable: true,\r\n  },\r\n  {\r\n    accessorKey: \"Station_AR_Genre\",\r\n    header: \"Station Genre\",\r\n    Cell: ({ renderedCellValue, row }) => (\r\n      <>{(renderedCellValue ?? []).join(\", \")}</>\r\n    ),\r\n  },\r\n  {\r\n    accessorKey: \"Artist_SP_Name\",\r\n    header: \"Artist\",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n  {\r\n    accessorKey: \"Track_SP_Name\",\r\n    header: \"Event\",\r\n    dynamic: true,\r\n  },\r\n  // ,\r\n  // {\r\n  //     accessorKey: 'Event_MA_TimeStation',\r\n  //     header: 'Time',\r\n  //     type:'time',\r\n  //     filterDisable:true,\r\n  //     accessorFn:(d)=>d.Event_MA_TimeStation?moment(d.Event_MA_TimeStation).format('LLL'):''\r\n  // }\r\n];\r\nexport const fieldsWithoutSelected = fields.filter((d, i) => i);\r\nexport const filterSearch = [\r\n  ...fields.filter((f) => !f.filterDisable),\r\n  {\r\n    accessorKey: \"Artist_WD_Country\",\r\n    header: \"Artist Country \",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n  {\r\n    accessorKey: \"Artist_SP_Genre\",\r\n    header: \"Artist Genre \",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n  {\r\n    accessorKey: \"Artist_WD_Genders\",\r\n    header: \"Artist Gender\",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n  {\r\n    accessorKey: \"Artist_WD_SexualOrientations\",\r\n    header: \"Artist Sexualorientations \",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n  {\r\n    accessorKey: \"Artist_WD_Ethnicities\",\r\n    header: \"Artist Ethnicities \",\r\n    cat: \"artist\",\r\n    dynamic: true,\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport {Autocomplete} from \"@mui/material\";\r\nexport default function CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, { useEffect } from \"react\";\r\nimport {Stack, MenuItem, Select,FormControl, TextField, IconButton} from \"@mui/material\";\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport CusAutocomplete from \"./CusAutocomplete\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    deleteFilter,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\n\r\nconst emptyArray = [];\r\nconst emptyObj = {};\r\nconst emptyFunc = ()=>{};\r\nexport default function SelectionWithOption({options=emptyArray,\r\n    enabled=emptyObj,  filterOptionsFunc,\r\n    cat='',\r\n    filterOptions,searchByStream,\r\n    getList, isLoading, logEvents}) {\r\n    const [f, setF] = React.useState({});\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(selectFilters);\r\n\r\n    useEffect(()=>{\r\n        if (cat!=='')\r\n            setF(options.find(d=>d.accessorKey===cat));\r\n    },[cat])\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(setFilter({key:event.target.value,value:[],prekey:cat}));\r\n    };\r\n\r\n    const onDelete = () =>{\r\n        dispatch(deleteFilter({key:cat}));\r\n    }\r\n    return <React.Fragment>\r\n    <Stack direction={\"row\"}>\r\n    <FormControl sx={{ minWidth: 120 }}>\r\n        <Select\r\n          value={cat}\r\n          onChange={handleChange}\r\n          size=\"small\"\r\n        >\r\n            {options.map((d)=><MenuItem value={d.accessorKey} key={d.accessorKey} disabled={enabled[d.accessorKey]}>\r\n                {d.header}\r\n                </MenuItem>)\r\n            }\r\n        </Select>\r\n      </FormControl>\r\n      <CusAutocomplete\r\n            disabled={cat===''}\r\n            fullWidth\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                if (value!=='' && value && value.length)\r\n                    logEvents('search',{'search_term':value,key:f.accessorKey,})\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue,f.cat);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    // label={f.header}\r\n                />\r\n            )}\r\n        />\r\n        {(cat!=='')&&<IconButton aria-label=\"close\" size=\"small\" onClick={onDelete}>\r\n            <CancelIcon fontSize=\"inherit\" />\r\n        </IconButton>}\r\n    </Stack>\r\n    </React.Fragment>\r\n}","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  setFilter,\r\n  selectFiltersList,\r\n  selectHasEmpty,\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport { Button, createFilterOptions, Stack, TextField } from \"@mui/material\";\r\nimport { filterSearch } from \"../EventTable/fields\";\r\nimport { useDatabase } from \"../../Providers/Database\";\r\nimport { useLog } from \"../../Providers/Firebase\";\r\nimport SelectionWithOption from \"./SelectionWithOption\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n  return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\nexport default function FilterPanel() {\r\n  const [filterOptions, setFilterOptions] = useState({});\r\n  const { isLoading, searchByStream, getList } = useDatabase();\r\n  const [categoryOption, setCategoryOption] = useState({});\r\n  const categoryOptionList = useSelector(selectFiltersList);\r\n  const hasEmpty = useSelector(selectHasEmpty);\r\n  const dispatch = useDispatch();\r\n\r\n  const { logEvents } = useLog();\r\n  useEffect(() => {\r\n    const obj = {};\r\n    categoryOptionList.forEach((element) => {\r\n      obj[element] = true;\r\n    });\r\n    setCategoryOption(obj);\r\n  }, [categoryOptionList]);\r\n  // useEffect(()=>{\r\n  //     if (!Object.keys(filters).length) {\r\n  //         // const newfilters = {};\r\n  //         // filterSearch.forEach(f=>{\r\n  //         //     newfilters[f.accessorKey] = null;\r\n  //         // })\r\n  //         // dispatch(setFilters({value: newfilters}));\r\n  //         ActionCreators.clearHistory();\r\n  //     }\r\n  // },[]);\r\n  const fields = getList(\"fields\");\r\n\r\n  useEffect(() => {\r\n    setFilterOptions({ ...fields });\r\n  }, [fields]);\r\n  return (\r\n    <Stack spacing={2} padding={2}>\r\n      {categoryOptionList.map((d, i) => (\r\n        <SelectionWithOption\r\n          key={i}\r\n          order={i}\r\n          cat={d}\r\n          options={filterSearch}\r\n          enabled={categoryOption}\r\n          getList={getList}\r\n          filterOptionsFunc={filterOptionsFunc}\r\n          filterOptions={filterOptions}\r\n          isLoading={isLoading}\r\n          logEvents={logEvents}\r\n          searchByStream={searchByStream}\r\n        />\r\n      ))}\r\n      {categoryOptionList.length < filterSearch.length && (\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={hasEmpty}\r\n          onClick={() => {\r\n            debugger;\r\n            dispatch(setFilter({ key: \"\" }));\r\n          }}\r\n        >\r\n          Add filter\r\n        </Button>\r\n      )}\r\n      {/* {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                if (value!=='' && value && value.length)\r\n                    logEvents('search',{'search_term':value,key:f.accessorKey,})\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)} */}\r\n      {/*<TimeRangePicker*/}\r\n      {/*    fromVal={(filters[\"Event_MA_TimeStation\"]?.from)??null}*/}\r\n      {/*    toVal={(filters[\"Event_MA_TimeStation\"]?.to)??null}*/}\r\n      {/*    onChange={(key,value) => {*/}\r\n      {/*        const val = {...(filters[\"Event_MA_TimeStation\"] ?? {})};*/}\r\n      {/*        if (value)*/}\r\n      {/*            val[key] = value;*/}\r\n      {/*        else*/}\r\n      {/*            delete val[key];*/}\r\n      {/*        dispatch(setFilter({key:\"Event_MA_TimeStation\",value:val}));*/}\r\n      {/*    }}*/}\r\n      {/*/>*/}\r\n    </Stack>\r\n  );\r\n}\r\n","import {ButtonGroup, Button, Stack} from \"@mui/material\";\r\nimport {Add as AddIcon, Remove as RemoveIcon} from '@mui/icons-material';\r\n\r\nexport default function FontsizeControl({title,onChange}) {\r\n    return<Stack direction={\"row\"} alignItems={'center'} justifyContent={'space-between'}>\r\n        {title}\r\n        <ButtonGroup size=\"small\" variant=\"outlined\" aria-label=\"outlined button group\"  sx={{color:\"unset\"}}>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(true)}>\r\n            <AddIcon/>\r\n        </Button>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(false)}>\r\n            <RemoveIcon/>\r\n        </Button>\r\n    </ButtonGroup>\r\n    </Stack>\r\n}","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {\r\n    Card,\r\n    Stack,\r\n    Typography,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {scaleLinear, scaleOrdinal, extent} from \"d3\";\r\nimport {colorArr, TOP} from \"../Earth\";\r\n\r\n\r\n// const countriesScale = scaleLinear().range([0.1,1]);\r\n\r\nexport default function FilterPanel({countries,fullHeight}) {\r\n    const {getFuncCollection,getList} = useDatabase();\r\n    // const countries = getList('countries');\r\n    const countriesScale = useMemo(()=>{\r\n        return scaleLinear().range([0.1,1]).domain(extent(countries, d => {\r\n            return d?.count\r\n        }))\r\n    },[countries]);\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[countries]);\r\n\r\n    return <Grid >\r\n            <Stack\r\n                m={1}\r\n                style={{\r\n                    maxHeight:fullHeight?null:'30vh',\r\n                    overflowY:'auto'\r\n                }}\r\n            >\r\n                <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n                    <Stack sx={{m:1,p:0}}>\r\n                        <Typography>Top Stations by Country</Typography>\r\n                        {\r\n                            countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {\r\n                                getFuncCollection('selectCountry')(d)\r\n                            }}>\r\n                                <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}\r\n                            </Typography>)\r\n                        }\r\n                    </Stack>\r\n                </Card>\r\n            </Stack>\r\n        </Grid>\r\n}","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}"],"names":["exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","width","height","onSelect","onSelectLegend","getSwitchView","zoomLoc","globeEl","toolbarRef","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","theme","useTheme","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","title","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","Location_RG_Country","zoomIn","loc","_objectSpread","zoomOut","_jsxs","background","position","children","_jsx","Globe","globeImageUrl","palette","mode","earthNight","earthDay","backgroundColor","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","Location_RG_City","push","onGlobeClick","Stack","sx","right","top","margin","direction","ToggleButton","value","selected","onChange","ButtonGroup","orientation","variant","padding","Button","onClick","SaveIcon","AddIcon","RemoveIcon","fields","id","header","accessorKey","Cell","renderedCellValue","row","Checkbox","disabled","size","icon","EventOutIcon","checkedIcon","EventIcon","checked","original","inBasket","minSize","filterDisable","_Fragment","cat","dynamic","fieldsWithoutSelected","filter","filterSearch","_toConsumableArray","f","CusAutocomplete","_ref$onInputChange","onInputChange","props","_objectWithoutProperties","_excluded","_React$useState","React","_React$useState2","input","setInput","Autocomplete","inputValue","event","newValue","reason","onBlur","role","other","itemCount","Array","isArray","viewboxRef","ViewportList","viewportRef","items","Type","type","_createElement","key","emptyArray","emptyObj","SelectionWithOption","_filters$f$accessorKe","_ref$options","options","_ref$enabled","enabled","filterOptionsFunc","_ref$cat","filterOptions","searchByStream","getList","isLoading","logEvents","setF","dispatch","useDispatch","filters","useSelector","selectFilters","FormControl","minWidth","Select","setFilter","target","prekey","MenuItem","fullWidth","multiple","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","newInputValue","renderInput","params","TextField","IconButton","deleteFilter","CancelIcon","fontSize","defaultFilterOptions","createFilterOptions","state","FilterPanel","setFilterOptions","_useDatabase","useDatabase","categoryOption","setCategoryOption","categoryOptionList","selectFiltersList","hasEmpty","selectHasEmpty","useLog","obj","element","spacing","FontsizeControl","alignItems","justifyContent","fullHeight","getFuncCollection","scaleLinear","extent","scaleOrdinal","Grid","m","maxHeight","overflowY","Card","pointerEvents","semicolor","paper","p","Typography","_countriesScale","display","marginRight","_color","d3color","opacity","toString","ts","isDarkMode","isRTL","_source","source","Function","createTheme"],"sourceRoot":""}