{"version":3,"file":"static/js/855.381cea60.chunk.js","mappings":"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","sources":["components/EventTable/fields.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/index.js","components/DetailCard/index.js","components/SearchBar/index.js","containers/UndoRedo/index.js","pages/LandingPage/LandingPage.js"],"sourcesContent":["export const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'time_station',\r\n        header: 'Time',\r\n        type:'time',\r\n        filterDisable:true\r\n    }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const { toggleThis, isDesktop, isMenuOpen } = useContext(MenuContext)\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n    const handleDrawerMenuClick = () => {\r\n        if (!isMenuOpen) {\r\n            toggleThis('isMiniMode', false)\r\n            toggleThis('isMenuOpen', true)\r\n            if (!isDesktop) {\r\n                toggleThis('isMobileMenuOpen')\r\n            }\r\n        } else {\r\n            toggleThis('isMobileMenuOpen')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={isDesktop ? 'absolute' : undefined}\r\n                sx={{\r\n                    width:\r\n                        isMenuOpen && isDesktop ? `calc(100% - ${width}px)` : undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    {(isMenuOpen && isDesktop) ||\r\n                        (!onBackClick && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerMenuClick}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ))}\r\n                    {/* james- check if this is dead code? */}\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {!onBackClick && isMenuOpen && false && (\r\n                        <div style={{ marginRight: 32 }} />\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {/* james- check if this is dead code? */}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\n\r\n\r\nconst TOP = 20;\r\nconst colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect, zoomLoc, legendHolderRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        debugger\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            transform: \"translate(0, -20%)\",\r\n            height: '100vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                height={height}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {legendHolderRef&&<Portal container={legendHolderRef.current}>\r\n            <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n                <Stack sx={{m:1,p:0}}>\r\n                    <Typography>Top Stations by Country <IconButton onClick={onSaveImage}><SaveIcon/></IconButton></Typography>\r\n                    {colorsCategory.domain().map(d => <Typography key={d} variant={'subtitle2'} onClick={()=> {\r\n                        onSelect({country:[d]});\r\n                        if (contriesMap[d])\r\n                            zoomTo(contriesMap[d].long,contriesMap[d].lat);\r\n                    }}>\r\n                        <div style={{width:50*countriesScale(contriesMap[d]?.count),height:10, backgroundColor:colorsCategory(d), display:'inline-block', marginRight:5}}></div>{d}\r\n                    </Typography>)}\r\n                    <Typography variant={'subtitle2'} >\r\n                        <div style={{width:10,height:10, backgroundColor:colorsCategory('Other'), display:'inline-block', marginRight:5}}></div>---Other---\r\n                    </Typography>\r\n                </Stack>\r\n            </Card>\r\n        </Portal>}\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\n\r\n\r\n\r\n\r\nconst EventTable = ({data,isLoadingData,onSelectRow,highlightId}) => {\r\n    const columns = fields;\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        rowVirtualizerInstanceRef.current?.scrollToIndex(0);\r\n    }, [sorting]);\r\n\r\n\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n\r\n    return (\r\n        <MaterialReactTable\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            enableBottomToolbar={false}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTableContainerProps={{ sx: { maxHeight: '300px' } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 8 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.stream_detail_id=== row.original.stream_detail_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            // muiTableBodyProps={{\r\n            //     sx: {\r\n            //         //stripe the rows, make odd rows a darker color\r\n            //         '& tr': {\r\n            //             backgroundColor: (theme)=> theme.mode == 'dark' ? 'rgba(0,0,0,0.58)' : 'rgba(255,255,255,0.76)',\r\n            //         },\r\n            //     },\r\n            // }}\r\n            renderTopToolbarCustomActions={({ table }) => (\r\n                <Box\r\n                    sx={{ display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'wrap' }}\r\n                >\r\n                    <Button\r\n                        color=\"primary\"\r\n                        target={\"_blank\"}\r\n                        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n                        // onClick={handleExportData}\r\n                        href={process.env.REACT_APP_DATA_DOWNLOAD}\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Download All Data\r\n                    </Button>\r\n                    <Button\r\n                        disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                        //export all rows, including from the next page, (still respects filtering and sorting)\r\n                        onClick={() =>\r\n                            handleExportRows(table.getPrePaginationRowModel().rows)\r\n                        }\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Export Current Data\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    disabled={table.getRowModel().rows.length === 0}*/}\r\n                    {/*    //export all rows as seen on the screen (respects pagination, sorting, filtering, etc.)*/}\r\n                    {/*    onClick={() => handleExportRows(table.getRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Page Rows*/}\r\n                    {/*</Button>*/}\r\n                    {/*<Button*/}\r\n                    {/*    disabled={*/}\r\n                    {/*        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()*/}\r\n                    {/*    }*/}\r\n                    {/*    //only export selected rows*/}\r\n                    {/*    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Selected Rows*/}\r\n                    {/*</Button>*/}\r\n                </Box>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import {Avatar, Card, CardContent, Divider, Link, Typography} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\n\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    return <Card sx={{height:'100%',overflowY:'auto'}}>\r\n        <CardContent >\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station}\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station Genre</td><td>{data.station_genre}</td></tr>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td colspan=\"2\"><Divider sx={{mt:2,mb:2}}/></td></tr>\r\n                {data.stream_artist&&<tr onClick={() => onSelect({stream_artist: [data.stream_artist]})}>\r\n                    <td>Artist</td>\r\n                    <td style={{display: 'flex'}}><Avatar aria-label=\"recipe\"\r\n                                                          sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                        <div>\r\n                            <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                            <Typography variant=\"subtitle2\">N/A</Typography>\r\n                        </div>\r\n                    </td>\r\n                </tr>}\r\n                <tr onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}><td>Song</td><td>{data.stream_song}</td></tr>\r\n                <tr><td>Time Monitored</td><td>{moment(data.time_station).format('LLL')}</td></tr>\r\n            </table>\r\n\r\n            {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n            {/*    Time Monitored : {moment(data.time_station).format('LLL')}*/}\r\n            {/*</Typography>*/}\r\n        </CardContent>\r\n    </Card>\r\n}\r\nexport default DetailCard","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SearchField(){\r\n    return <Search>\r\n        <SearchIconWrapper>\r\n            <SearchIcon />\r\n        </SearchIconWrapper>\r\n        <StyledInputBase\r\n            placeholder=\"Search…\"\r\n            inputProps={{ 'aria-label': 'search' }}\r\n        />\r\n    </Search>\r\n}\r\n\r\nexport default SearchField","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {color as d3color} from 'd3';\r\nimport EventTable from \"../../components/EventTable\";\r\nimport DetailCard from \"../../components/DetailCard\";\r\nimport SearchField from \"../../components/SearchBar\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\n\r\nconst LandingPage = () => {\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [openEventList,setOpenEventList] = useState(true);\r\n    const legendRef = useRef(null);\r\n\r\n    const currentDetail = getDetail();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = (value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    }\r\n\r\n    const onTogleEventList = useCallback(()=>{\r\n        setOpenEventList(!openEventList);\r\n    },[openEventList])\r\n\r\n    return (<Page appBarContent={<>\r\n        {/*<SearchField/>*/}\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            <div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>\r\n                <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')} countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        width={width} height={height}\r\n                                        legendHolderRef={legendRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            </div>\r\n        <Grid container sx={{height:'100%', position:'relative', pointerEvents:'none'}} direction={\"column\"} justifyContent=\"space-between\">\r\n            <Grid >\r\n                <Stack\r\n                    m={1}\r\n                    ref={legendRef}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        right: 0,\r\n                        maxHeight:'30vh',\r\n                        overflowY:'auto'\r\n                    }}\r\n                >\r\n\r\n                </Stack>\r\n                {/*<Button color={'secondary'}>Station Map</Button>*/}\r\n            </Grid>\r\n            <Grid container spacing={2} m={0} sx={{pointerEvents:'auto',maxHeight: 450}} alignItems={'end'}>\r\n                <Grid item xs={8}>\r\n                    <Card sx={{ minHeight: openEventList?275:null, maxWidth:openEventList?undefined:200, backgroundColor:(theme)=> semicolor(theme.palette.background.paper)}}>\r\n                        <CardContent sx={{position:'relative'}}>\r\n                            <Typography>Event List</Typography>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                onClick={onTogleEventList}\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: 0,\r\n                                    // color: (theme) => theme.palette.grey[500],\r\n                                }}\r\n                            >\r\n                                <MinimizeIcon />\r\n                            </IconButton>\r\n                            <Collapse in={openEventList} timeout=\"auto\">\r\n                                <EventTable data={getEvents()} isLoadingData={isLoadingEvent} onSelectRow={onSelectStream} highlightId={currentDetail}/>\r\n                            </Collapse>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                {currentDetail&&<Grid item xs={4} sx={{height:'100%'}}>\r\n                    <Card sx={{height:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n                        <CardContent sx={{height:'100%'}}>\r\n                            {/*<Typography>Event detail</Typography>*/}\r\n                            <DetailCard data={currentDetail} onSelect={onSelect}/>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>}\r\n            </Grid>\r\n        </Grid>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;"],"names":["fields","accessorKey","header","dynamic","type","filterDisable","filterSearch","filter","f","semicolor","_color","color","d3color","opacity","toString","id","ts","isDarkMode","isRTL","fontSize","i","length","_source","source","Function","palette","createTheme","mode","direction","children","pageTitle","onBackClick","isLoading","appBarContent","contentStyle","tabs","useAppTheme","isOnline","useOnline","theme","useTheme","useConfig","appConfig","menu","width","appBarLeadingContent","useContext","MenuContext","toggleThis","isDesktop","isMenuOpen","intl","useIntl","headerTitle","String","style","display","flexDirection","height","overflow","AppBar","position","undefined","sx","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","IconButton","onClick","edge","Menu","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","formatMessage","defaultMessage","exportAsImage","el","imageFileName","renderer","scene","camera","render","blob","domElement","toDataURL","downloadImage","fileName","fakeLink","window","document","createElement","download","href","body","appendChild","click","removeChild","remove","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","onSelect","zoomLoc","legendHolderRef","globeEl","useRef","holderRef","useState","colorKey","selectPoint","setSelectPoint","currentSequnce","setCurrentSequnce","lat","lng","altitude","MAP_CENTERs","setMAP_CENTERs","ringData","setRingData","contriesMap","setcontriesMap","colorsCategory","useMemo","otherColor","scale","master","val","trim","domain","find","d","handleData","count","title","forEach","order","long","useEffect","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","timerRing","setTimerRing","zoomTo","onSaveImage","background","transform","globeImageUrl","earthNight","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","s","slice","sort","a","b","map","join","onHexClick","city","push","country","onGlobeClick","Portal","container","Card","pointerEvents","overflowY","paper","Stack","m","p","Save","data","isLoadingData","onSelectRow","highlightId","columns","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","useDatabase","scrollToIndex","enableBottomToolbar","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowVirtualization","muiTableContainerProps","initialState","density","onSortingChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","_id","enableColumnResizing","defaultColumn","minSize","maxSize","size","renderTopToolbarCustomActions","table","Box","gap","flexWrap","Button","target","process","startIcon","FileDownload","disabled","getPrePaginationRowModel","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","CardContent","component","station","station_description","station_genre","Link","station_url","Map","url","colspan","Divider","mt","mb","stream_artist","Avatar","mr","stream_song","moment","time_station","format","styled","borderRadius","shape","alpha","common","white","breakpoints","up","spacing","padding","InputBase","paddingLeft","UndoRedo","canUndo","canRedo","onUndo","onRedo","Undo","Redo","mapDispatchToProps","UndoActionCreators","connect","streamFilters","past","future","dispatch","useDispatch","useQuestions","filters","openDialog","closeDialog","setProcessing","useSelector","selectFilters","getList","getEvents","requestEvents","requestDetail","getDetail","setZoomLoc","openEventList","setOpenEventList","legendRef","currentDetail","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","SET_MENU","opened","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","value","extra","setFilters","onTogleEventList","Page","top","left","right","item","xs","maxWidth","Minimize","Collapse","in","timeout","Backdrop","drawer","open","textAlign"],"sourceRoot":""}