{"version":3,"file":"static/js/819.e8384461.chunk.js","mappings":"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","sources":["components/EventTable/fields.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/index.js","components/DetailCard/index.js","components/SearchBar/index.js","containers/UndoRedo/index.js","components/Map/index.js","components/EventDetail/index.js","pages/LandingPage/LandingPage.js"],"sourcesContent":["import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'time_station',\r\n        header: 'Time',\r\n        type:'time',\r\n        filterDisable:true,\r\n        accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const { toggleThis, isDesktop, isMenuOpen } = useContext(MenuContext)\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n    const handleDrawerMenuClick = () => {\r\n        if (!isMenuOpen) {\r\n            toggleThis('isMiniMode', false)\r\n            toggleThis('isMenuOpen', true)\r\n            if (!isDesktop) {\r\n                toggleThis('isMobileMenuOpen')\r\n            }\r\n        } else {\r\n            toggleThis('isMobileMenuOpen')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={isDesktop ? 'absolute' : undefined}\r\n                sx={{\r\n                    width:\r\n                        isMenuOpen && isDesktop ? `calc(100% - ${width}px)` : undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    {(isMenuOpen && isDesktop) ||\r\n                        (!onBackClick && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerMenuClick}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ))}\r\n                    {/* james- check if this is dead code? */}\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {!onBackClick && isMenuOpen && false && (\r\n                        <div style={{ marginRight: 32 }} />\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {/* james- check if this is dead code? */}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\n\r\n\r\nconst TOP = 20;\r\nconst colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect, zoomLoc, legendHolderRef, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        debugger\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n                 marginTop:'-20vh',\r\n            height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                height={height*1.2}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {toolbarRef&&<Portal container={toolbarRef.current}>\r\n            <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>\r\n        </Portal>}\r\n        {legendHolderRef&&<Portal container={legendHolderRef.current}>\r\n            <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n                <Stack sx={{m:1,p:0}}>\r\n                    <Typography>Top Stations by Country</Typography>\r\n                    {\r\n                        countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {\r\n                            onSelect({country:[d['title']]});\r\n                            zoomTo(d.long,d.lat);\r\n                        }}>\r\n                            <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}\r\n                        </Typography>)\r\n                    }\r\n                    {/*{colorsCategory.domain().map(d => <Typography key={d} variant={'subtitle2'} onClick={()=> {*/}\r\n                    {/*    onSelect({country:[d]});*/}\r\n                    {/*    if (contriesMap[d])*/}\r\n                    {/*        zoomTo(contriesMap[d].long,contriesMap[d].lat);*/}\r\n                    {/*}}>*/}\r\n                    {/*    <div style={{width:50*countriesScale(contriesMap[d]?.count),height:10, backgroundColor:colorsCategory(d), display:'inline-block', marginRight:5}}></div>{d}*/}\r\n                    {/*</Typography>)}*/}\r\n                    {/*<Typography variant={'subtitle2'} >*/}\r\n                    {/*    <div style={{width:10,height:10, backgroundColor:colorsCategory('Other'), display:'inline-block', marginRight:5}}></div>---Other---*/}\r\n                    {/*</Typography>*/}\r\n                </Stack>\r\n            </Card>\r\n        </Portal>}\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\n\r\n\r\n\r\n\r\nconst EventTable = ({data,isLoadingData,onSelectRow,highlightId}) => {\r\n    const columns = fields;\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        rowVirtualizerInstanceRef.current?.scrollToIndex(0);\r\n    }, [sorting]);\r\n\r\n\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            enableBottomToolbar={false}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx:{display:'flex', flexDirection:\"column\", height:'100%'}}}\r\n            muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 8 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.stream_detail_id=== row.original.stream_detail_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            // muiTableBodyProps={{\r\n            //     sx: {\r\n            //         //stripe the rows, make odd rows a darker color\r\n            //         '& tr': {\r\n            //             backgroundColor: (theme)=> theme.mode == 'dark' ? 'rgba(0,0,0,0.58)' : 'rgba(255,255,255,0.76)',\r\n            //         },\r\n            //     },\r\n            // }}\r\n            renderTopToolbarCustomActions={({ table }) => (\r\n                <Box\r\n                    sx={{ display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap' }}\r\n                >\r\n                    <Button\r\n                        color=\"primary\"\r\n                        target={\"_blank\"}\r\n                        size={\"small\"}\r\n                        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n                        // onClick={handleExportData}\r\n                        href={process.env.REACT_APP_DATA_DOWNLOAD}\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Download All Data\r\n                    </Button>\r\n                    <Button\r\n                        disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                        //export all rows, including from the next page, (still respects filtering and sorting)\r\n                        onClick={() =>\r\n                            handleExportRows(table.getPrePaginationRowModel().rows)\r\n                        }\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                        size={\"small\"}\r\n                    >\r\n                        Export Current Data\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    disabled={table.getRowModel().rows.length === 0}*/}\r\n                    {/*    //export all rows as seen on the screen (respects pagination, sorting, filtering, etc.)*/}\r\n                    {/*    onClick={() => handleExportRows(table.getRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Page Rows*/}\r\n                    {/*</Button>*/}\r\n                    {/*<Button*/}\r\n                    {/*    disabled={*/}\r\n                    {/*        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()*/}\r\n                    {/*    }*/}\r\n                    {/*    //only export selected rows*/}\r\n                    {/*    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Selected Rows*/}\r\n                    {/*</Button>*/}\r\n                </Box>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useSpring, animated, easings  } from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    const timeStation = moment(data.time_station).format('LLL');\r\n    const stream_name = data.stream_name??'N/A';\r\n    return <>\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station} <Typography component={\"span\"} variant={\"subtitle1\"}>{data.broadcast_frequency??'0.0'} FM</Typography>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>\r\n            </table>\r\n            {/*<table style={{width:'100%'}}>*/}\r\n            {/*    <colgroup><col style={{width:130}}/><col/></colgroup>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*        <tbody>*/}\r\n            {/*        <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>*/}\r\n            {/*        <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>*/}\r\n            {/*        <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>*/}\r\n            {/*        </tbody>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr>*/}\r\n            {/*        <td colspan=\"2\">*/}\r\n            {/*            <Grid container>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Stream</Typography>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*            </Grid>*/}\r\n            {/*        </td>*/}\r\n            {/*    </tr>*/}\r\n            {/*    <tr><td>Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Description</td><td>{data.stream_description}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr><td colspan=\"2\"><Divider sx={{mt:2,mb:2}}/></td></tr>*/}\r\n            {/*</table>*/}\r\n            {(data.stream_name||data.stream_genre||data.stream_url)&&<CollapsibleComp header={'Stream Info'} defaultValue={true}>\r\n                <CardContent>\r\n                    <Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link>\r\n                    <Typography variant={'h4'}>{stream_name}</Typography>\r\n                    <Typography color=\"text.secondary\" gutterBottom> {data.stream_description}</Typography>\r\n                    {data.stream_genre && <Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                        <Chip label={data.stream_genre} size={'small'}/></Stack>}\r\n                </CardContent>\r\n            </CollapsibleComp>}\r\n            {/*<CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" by \"{data.stream_artist}\" at {timeStation}</>}>*/}\r\n            <CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" at {timeStation}</>}>\r\n                <CardContent>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                                <Typography color=\"text.secondary\" gutterBottom> {timeStation}</Typography>\r\n                        </Grid>\r\n                        <Grid item flexGrow={1}>\r\n                            <Typography variant=\"h4\" component=\"div\" onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}>\r\n                                {data.stream_song}\r\n                            </Typography>\r\n                            {data.year_released&&<Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n                            {data.stream_song_genre&&<Chip label={data.stream_song_genre} size={'small'}/>}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box sx={{ flex: '1 0 auto', display:'flex' }}>\r\n                                <Avatar aria-label=\"recipe\"\r\n                                        src={data.stream_artist_image_url}\r\n                                        sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                                <div>\r\n                                    <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                                    <Typography variant=\"subtitle2\">from {data.stream_artist_country??\"N/A\"}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                            {data.stream_artist_genre&&(data.stream_artist_genre.map(t=><Chip key={t} label={t} size={'small'}/>))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {data.stream_instrument_list&&(<Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                                <Typography>Instruments: </Typography>\r\n                                {data.stream_instrument_list.split(';').map(t => <Chip\r\n                                key={t} label={t} size={'small'}/>)}\r\n                            </Stack>)}\r\n                        </Grid>\r\n                        {data.stream_lyrics&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                                    Lyrics {data.stream_lyrics_language ? `(${data.stream_lyrics_language})` : \"\"}\r\n                                </Typography>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                            </Grid>\r\n                            {data.stream_lyrics}\r\n                            {/*<table style={{width:'100%'}}>*/}\r\n                            {/*    {data.stream_artist&&<tr onClick={() => onSelect({stream_artist: [data.stream_artist]})}>*/}\r\n                            {/*        <td>Artist</td>*/}\r\n                            {/*        <td style={{display: 'flex'}}><Avatar aria-label=\"recipe\"*/}\r\n                            {/*                                              src={data.stream_artist_image_url}*/}\r\n                            {/*                                              sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>*/}\r\n                            {/*            <div>*/}\r\n                            {/*                <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>*/}\r\n                            {/*                <Typography variant=\"subtitle2\">N/A</Typography>*/}\r\n                            {/*            </div>*/}\r\n                            {/*        </td>*/}\r\n                            {/*    </tr>}*/}\r\n                            {/*    <tr onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}><td>Song</td><td>{data.stream_song}</td></tr>*/}\r\n                            {/*    <tr><td>Time Monitored</td><td>{timeStation}</td></tr>*/}\r\n                            {/*</table>*/}\r\n                        </Grid>}\r\n                        {(data.spotify_uri || data.youtube_url)&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                            </Grid>\r\n                            {data.spotify_uri&&<Grid item xs={12}>\r\n                                <iframe loading=\"lazy\"\r\n                                        src={data.spotify_uri.replace('com/track','com/embed/track')}\r\n                                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                                        data-mce-fragment=\"1\"></iframe>\r\n                            </Grid>}\r\n                            {data.youtube_url&&<Grid item xs={12}>\r\n                                <iframe width={'100%'} height={'auto'}\r\n                                        loading=\"lazy\"\r\n                                        src={data.youtube_url.replace(\"youtube.com/watch?v=\",\"youtube-nocookie.com/embed/\")}\r\n                                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                                        allowFullScreen\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>}\r\n                    </Grid>\r\n                </CardContent>\r\n            </CollapsibleComp>\r\n\r\n            {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n            {/*    Time Monitored : {moment(data.time_station).format('LLL')}*/}\r\n            {/*</Typography>*/}\r\n    </>\r\n}\r\nexport default DetailCard\r\n\r\nfunction CollapsibleComp ({header,banner,defaultValue,...props}) {\r\n    const [open,setopen] = useState(defaultValue);\r\n    const runningText = useSpring({\r\n        reset: open,\r\n        cancel: open,\r\n        config:{ duration: 20000},\r\n        loop:!open,\r\n        from: { transform: \"translateX(100%)\" },\r\n        to: { transform: \"translateX(-100%)\" },\r\n    });\r\n    return <Card elevation={10} sx={{mt:1}}>\r\n        <CardActions disableSpacing>\r\n            <Typography variant={\"h5\"}>{header}</Typography>\r\n            {(banner&&!open)&&<div style={{width:'100%', overflow:'hidden', marginLeft: 10, marginRight: 10, whiteSpace: 'nowrap'}}>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    <animated.div style={runningText} className={'textbanner'}>{banner}</animated.div>\r\n                    {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n                </Typography></div>}\r\n            <ExpandMore expand={open} onClick={()=>setopen(!open)}/>\r\n        </CardActions>\r\n        <Collapse in={open} unmountOnExit={true} {...props}/>\r\n    </Card>\r\n}\r\n","import * as React from 'react';\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nfunction SearchField(){\r\n    return <Search>\r\n        <SearchIconWrapper>\r\n            <SearchIcon />\r\n        </SearchIconWrapper>\r\n        <StyledInputBase\r\n            placeholder=\"Search…\"\r\n            inputProps={{ 'aria-label': 'search' }}\r\n        />\r\n    </Search>\r\n}\r\n\r\nexport default SearchField","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = {\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    };\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Collapse,\r\n    IconButton, Paper,\r\n    Tab,\r\n    Tabs,\r\n    Typography,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport MinimizeIcon from \"@mui/icons-material/Minimize\";\r\nimport DetailCard from \"../DetailCard\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events,onSelect,sx={}}) {\r\n    const [openEventList,setOpenEventList] = useState(true);\r\n    const [valueTab, setValueTab] = useState(0);\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            debugger\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n\r\n    const handleChangeTab = (event, newValueTab) => {\r\n        setValueTab(newValueTab);\r\n    };\r\n\r\n    const onTogleEventList = useCallback(()=>{\r\n        setOpenEventList(!openEventList);\r\n    },[openEventList])\r\n\r\n    return (\r\n        <Card sx={{...sx,width:openEventList?'100%':200, backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n            <CardContent sx={{height: '100%', position: 'relative'}}>\r\n                <Typography>Event detail</Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onTogleEventList}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 0,\r\n                    }}\r\n                >\r\n                    <MinimizeIcon/>\r\n                </IconButton>\r\n                <Collapse in={openEventList} timeout=\"auto\">\r\n                    <Grid container style={{height:350, width:'100%'}} m={0} flexDirection={\"column\"} flexWrap={'nowrap'}>\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <Tabs value={valueTab} onChange={handleChangeTab} aria-label=\"basic tabs example\">\r\n                                <Tab label=\"Map\" {...a11yProps(0)} />\r\n                                <Tab label=\"Event Info\" {...a11yProps(1)} />\r\n                            </Tabs>\r\n                        </Box>\r\n                        {/*<Grid item sx={{height:'100%'}} flexGrow={2}>*/}\r\n                        {/*{(valueTab === 0)?<Map/>:''}*/}\r\n                            <TabPanel value={valueTab} index={0} sx={{height:'100%'}}>\r\n                                <CardContent style={{margin:'auto',display: 'block', maxWidth:'100%',height:'100%',padding:0}}>\r\n                                    <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                                        {({ height, width }) => {\r\n                                            return <Map height={height} width={width}\r\n                                                        locs={eventlocs} highlight={currentDetail}/>\r\n                                        }}\r\n                                    </AutoSizer>\r\n                                </CardContent>\r\n                            </TabPanel>\r\n                            <TabPanel value={valueTab} index={1} style={{height:'100%',overflowY:'auto'}}>\r\n                                {(valueTab === 1)&&<CardContent sx={{width:'100%'}}>{currentDetail ?\r\n                                    <DetailCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                                        List</>}\r\n                                </CardContent>}\r\n                            </TabPanel>\r\n                        {/*</Grid>*/}\r\n                    </Grid>\r\n                </Collapse>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `event-tab-${index}`,\r\n        'aria-controls': `event-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Card\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`event-tabpanel-${index}`}\r\n            aria-labelledby={`event-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (<>\r\n                    {children}\r\n            </>)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n","import React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable\";\r\nimport DetailCard from \"../../components/DetailCard\";\r\nimport SearchField from \"../../components/SearchBar\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport EventDetail from \"../../components/EventDetail\";\r\n\r\nconst LandingPage = () => {\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [openEventList,setOpenEventList] = useState(true);\r\n    const legendRef = useRef(null);\r\n    const toolbarRef = useRef(null);\r\n\r\n    const currentDetail = getDetail();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = (value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    }\r\n\r\n    const onTogleEventList = useCallback(()=>{\r\n        setOpenEventList(!openEventList);\r\n    },[openEventList])\r\n\r\n    return (<Page appBarContent={<>\r\n        {/*<SearchField/>*/}\r\n            <div ref={toolbarRef}></div>\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            <div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>\r\n                <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')} countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        width={width} height={height}\r\n                                        legendHolderRef={legendRef}\r\n                                        toolbarRef={toolbarRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            </div>\r\n        <Grid container sx={{height:'100%', position:'relative', pointerEvents:'none'}} direction={\"column\"} justifyContent=\"space-between\">\r\n            <Grid >\r\n                <Stack\r\n                    m={1}\r\n                    ref={legendRef}\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        right: 0,\r\n                        maxHeight:'30vh',\r\n                        overflowY:'auto'\r\n                    }}\r\n                >\r\n\r\n                </Stack>\r\n                {/*<Button color={'secondary'}>Station Map</Button>*/}\r\n            </Grid>\r\n            <Grid container spacing={2} m={0} sx={{pointerEvents:'none'}} alignItems={'end'}>\r\n                <Grid item xs={8} sx={{pointerEvents:'all'}}>\r\n                    <Card sx={{  maxWidth:openEventList?undefined:200, backgroundColor:(theme)=> semicolor(theme.palette.background.paper)}}>\r\n                        <CardContent sx={{position:'relative'}}>\r\n                            <Typography>Event List</Typography>\r\n                            <IconButton\r\n                                aria-label=\"close\"\r\n                                onClick={onTogleEventList}\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    right: 0,\r\n                                    top: 0,\r\n                                }}\r\n                            >\r\n                                <MinimizeIcon />\r\n                            </IconButton>\r\n                            <Collapse in={openEventList} timeout=\"auto\">\r\n                                <div style={{height:350}}>\r\n                                    <EventTable data={getEvents()} isLoadingData={isLoadingEvent} onSelectRow={onSelectStream} highlightId={currentDetail}/>\r\n                                </div>\r\n                            </Collapse>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={4} sx={{pointerEvents:'all'}}>\r\n                    <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                 events={getEvents()}\r\n                                 locs={getList('locs')}\r\n                                 sx={{float:'right'}}/>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;"],"names":["fields","accessorKey","header","dynamic","type","filterDisable","accessorFn","d","time_station","moment","format","filterSearch","filter","f","semicolor","_color","color","d3color","opacity","toString","id","ts","isDarkMode","isRTL","fontSize","i","length","_source","source","Function","palette","createTheme","mode","direction","children","pageTitle","onBackClick","isLoading","appBarContent","contentStyle","tabs","useAppTheme","isOnline","useOnline","theme","useTheme","useConfig","appConfig","menu","width","appBarLeadingContent","useContext","MenuContext","toggleThis","isDesktop","isMenuOpen","intl","useIntl","headerTitle","String","style","display","flexDirection","height","overflow","AppBar","position","undefined","sx","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","IconButton","onClick","edge","Menu","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","formatMessage","defaultMessage","exportAsImage","el","imageFileName","renderer","scene","camera","render","blob","domElement","toDataURL","downloadImage","fileName","fakeLink","window","document","createElement","download","href","body","appendChild","click","removeChild","remove","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","onSelect","zoomLoc","legendHolderRef","toolbarRef","globeEl","useRef","holderRef","useState","colorKey","selectPoint","setSelectPoint","currentSequnce","setCurrentSequnce","lat","lng","altitude","MAP_CENTERs","setMAP_CENTERs","ringData","setRingData","setcontriesMap","colorsCategory","useMemo","otherColor","scale","master","val","trim","domain","find","handleData","contriesMap","count","title","forEach","order","long","useEffect","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","timerRing","setTimerRing","zoomTo","onSaveImage","background","marginTop","globeImageUrl","earthNight","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","s","slice","sort","a","b","map","join","onHexClick","city","push","country","onGlobeClick","Portal","container","Save","Card","pointerEvents","overflowY","paper","Stack","m","p","data","isLoadingData","onSelectRow","highlightId","columns","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","useDatabase","scrollToIndex","enableBottomToolbar","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowVirtualization","muiTablePaperProps","muiTableContainerProps","flexGrow","initialState","density","onSortingChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","_id","enableColumnResizing","defaultColumn","minSize","maxSize","size","renderTopToolbarCustomActions","table","Box","gap","flexWrap","Button","target","process","startIcon","FileDownload","disabled","getPrePaginationRowModel","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","ExpandMore","styled","props","expand","other","transform","shortest","timeStation","stream_name","component","station","broadcast_frequency","station_description","Link","station_url","Map","url","stream_genre","stream_url","CollapsibleComp","defaultValue","CardContent","gutterBottom","stream_description","spacing","Chip","label","banner","stream_song","Grid","item","xs","year_released","stream_song_genre","Avatar","src","stream_artist_image_url","mr","stream_artist","stream_artist_country","stream_artist_genre","t","stream_instrument_list","split","stream_lyrics","Divider","mt","mb","margin","stream_lyrics_language","spotify_uri","youtube_url","loading","replace","frameBorder","allow","allowFullScreen","open","setopen","runningText","useSpring","reset","cancel","config","loop","from","to","elevation","CardActions","disableSpacing","whiteSpace","className","Collapse","in","unmountOnExit","borderRadius","shape","alpha","common","white","breakpoints","up","padding","InputBase","paddingLeft","UndoRedo","canUndo","canRedo","onUndo","onRedo","Undo","Redo","mapDispatchToProps","UndoActionCreators","connect","streamFilters","past","future","scaleLinear","zoomi","d3range","highlight","setData","center","lon","zoom","setDomain","_botColor","primary","extent","text","ticks","tsize","tickS","mapbox","name","x","y","marker","visible","hoverinfo","showlegend","line","longd","latd","Math","min","_highlight","city_id","layout","paper_bgcolor","plot_bgcolor","autoscale","r","l","mapboxTick","font","family","typography","fontFamily","legend","showticksuffix","xanchor","orientation","showEditInChartStudio","plotlyServerURL","currentDetail","events","openEventList","setOpenEventList","valueTab","setValueTab","eventlocs","setEventlocs","_locsMap","_locs","groups","c","cou","onTogleEventList","right","top","Minimize","timeout","borderBottom","borderColor","Tabs","value","onChange","event","newValueTab","Tab","a11yProps","TabPanel","index","maxWidth","role","hidden","dispatch","useDispatch","useQuestions","filters","openDialog","closeDialog","setProcessing","useSelector","selectFilters","getList","getEvents","requestEvents","requestDetail","getDetail","setZoomLoc","legendRef","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","SET_MENU","opened","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","extra","setFilters","Page","left","EventDetail","float","Backdrop","drawer","textAlign"],"sourceRoot":""}