{"version":3,"file":"static/js/336.3aba1a4e.chunk.js","mappings":"2ZAgBMA,EAAaC,EAAAA,YAAiB,SAACC,EAAOC,GAAG,OAC3CC,EAAAA,EAAAA,KAACC,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACC,UAAU,MAASL,GAAK,IAAEC,IAAKA,IAAO,IAGjD,SAASK,EAAqBN,GAC1B,IAAQO,EAAgCP,EAAhCO,SAAUC,EAAsBR,EAAtBQ,QAAYC,GAAKC,EAAAA,EAAAA,GAAKV,EAAKW,GAE7C,OACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAWT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACU,GAAI,CAAEC,EAAG,EAAGC,EAAG,IAASP,GAAK,IAAAF,SAAA,CACrCA,EACAC,GACGN,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACP,aAAW,QACXC,QAASV,EACTM,GAAI,CACAK,SAAU,WACVC,MAAO,EACPC,IAAK,EACLC,MAAO,SAACC,GAAK,OAAKA,EAAMC,QAAQC,KAAK,IAAI,GAC3ClB,UAEFL,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,MAEd,QAGhB,CAuDA,IArDuB,SAAHC,GAWW,IAADC,EAAAD,EAVFE,aAAAA,OAAY,IAAAD,GAAQA,EAAAE,EAAAH,EACpBI,OAAAA,OAAM,IAAAD,GAAQA,EACPE,GADOL,EACdM,GAAON,EACPO,SAAAA,OAAO,IAAAF,EAAG,GAAEA,EAAAG,EAAAR,EACZS,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAAAE,EAAAV,EACVW,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAAZ,EACXa,WAAAA,OAAU,IAAAD,GAAMA,EAAAE,EAAAd,EAChBe,aAAAA,OAAY,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAhB,EACvBiB,YAAAA,OAAW,IAAAD,EAAG,WAAO,EAACA,EACnBE,GAAInC,EAAAA,EAAAA,GAAAiB,EAAAmB,GAEzBC,GAAOC,EAAAA,EAAAA,KACPzB,GAAQ0B,EAAAA,EAAAA,KACRC,GAAaC,EAAAA,EAAAA,GAAc5B,EAAM6B,YAAYC,KAAK,OAExD,OACIzC,EAAAA,EAAAA,MAAC0C,EAAAA,GAAMlD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACH8C,WAAYA,EACZK,KAAMxB,EACNvB,QAASoC,EACTY,oBAAqB1D,EACrB,kBAAgB,qBAChB,mBAAiB,4BACb+C,GAAI,IAAAtC,SAAA,EAGRL,EAAAA,EAAAA,KAACI,EAAoB,CAAC2B,GAAG,qBAAqBzB,QAASoC,EAAYrC,SAC9D6B,KAELlC,EAAAA,EAAAA,KAACuD,EAAAA,EAAa,CAAAlD,UACVL,EAAAA,EAAAA,KAACwD,EAAAA,EAAiB,CAACzB,GAAG,2BAA0B1B,SAC3C2B,MAGRM,IAAY5B,EAAAA,EAAAA,MAAC+C,EAAAA,EAAa,CAAApD,SAAA,EACvBL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAAC1C,QAAS0B,EAAatB,MAAM,UAASf,SACxCwC,EAAKc,cAAc,CAAC5B,GAAI,SAAU6B,eAAgB,cAEvD5D,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CACHG,SAAUlC,EACVX,QAAS,WACLwB,EAAaE,EACjB,EACAtB,MAAM,YAAWf,SAEhB+B,UAKrB,C,wPC9Ee,SAAS,EAATX,GASc,IARApB,EAAQoB,EAARpB,SACAyD,EAASrC,EAATqC,UAASC,EAAAtC,EACTuC,kBAAAA,OAAiB,IAAAD,EAAG,KAAIA,EACxBE,EAAWxC,EAAXwC,YACAC,EAASzC,EAATyC,UAASC,EAAA1C,EACT2C,cAAAA,OAAa,IAAAD,EAAG,KAAIA,EACpBE,EAAY5C,EAAZ4C,aAAYC,EAAA7C,EACZ8C,KAAAA,OAAI,IAAAD,EAAG,KAAIA,EAE5BE,GAAUC,EAAAA,EAAAA,YAAVD,MACFE,GAAWC,EAAAA,EAAAA,aACXtD,GAAQ0B,EAAAA,EAAAA,KAGd6B,IAFsBC,EAAAA,EAAAA,aAAdC,WACsB,CAAC,GAAvBC,MACqD,CAAC,EAA3CC,GAA4CJ,EAAvDK,MAAWL,EAAEM,sBAAAA,OAAoB,IAAAF,EAAG,KAAIA,EAE1CnC,GAAOC,EAAAA,EAAAA,KACTqC,EAAc,GAOlB,OALyB,kBAAdrB,GAA0BA,aAAqBsB,UACtDD,EAAcrB,IAKdpD,EAAAA,EAAAA,MAAA,OACI2E,MAAO,CACHJ,MAAO,OACPK,QAAS,OACTC,cAAe,SACfC,OAAQ,QACRC,SAAU,UACZpF,SAAA,EAEFL,EAAAA,EAAAA,KAAC0F,EAAAA,EAAM,CACHzE,SAAU,WACVL,GAAI,CACAqE,WAAOU,EACPC,OAAQvE,EAAMuE,OAAe,OAC7BC,WAAYxE,EAAMyE,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQ3E,EAAMyE,YAAYE,OAAOC,MACjCC,SAAU7E,EAAMyE,YAAYI,SAASC,gBAEzCC,UAAW,GACXC,WAAY7B,EAAQ,GAAK,GACzB8B,YAAa9B,EAAQ,GAAK,EAC1B+B,gBAAgB,cAChBC,gBAAgB,OAChBC,UAAU,QACZpG,UAEFK,EAAAA,EAAAA,MAACgG,EAAAA,EAAO,CAAC9F,GAAI,CACT2F,gBAAiB,SAACI,GAAC,MACI,SAAnBA,EAAErF,QAAQsF,KACJD,EAAErF,QAAQuF,WAAWC,QACrBH,EAAErF,QAAQyF,QAAQC,IAAI,EAChCC,OAAQ,EACRC,QAAS,GACX7G,SAAA,CACG4D,IACGjE,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACPK,MAAM,UACN,aAAW,cACXJ,QAASiD,EAAY5D,UAErBL,EAAAA,EAAAA,KAACmH,EAAAA,EAAW,MAGnBjC,EACAlB,GACDhE,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,KAAKjG,MAAM,UAAUkG,QAAM,EAAAjH,SAC1C8E,KAELnF,EAAAA,EAAAA,KAAA,OAAKqF,MAAO,CAAEkC,KAAM,cACnBnD,QAITpE,EAAAA,EAAAA,KAAA,OACIqF,MAAO,CACHmC,WAAY,SACZC,eAAgB,WAEhBC,UAAW,MAIlBxD,IAAalE,EAAAA,EAAAA,KAAC2H,EAAAA,EAAc,KAC3BjD,IACE1E,EAAAA,EAAAA,KAAA,OACIqF,MAAO,CACHC,QAAS,OACTmC,eAAgB,SAChBxC,MAAO,OACPO,OAAQ,GACRe,gBAAiBlF,EAAMC,QAAQsG,UAAUC,MAC3CxH,UAEFL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,UAAUjG,MAAM,gBAAgBkG,QAAM,EAAAjH,SACrDwC,EAAKc,cAAc,CAChB5B,GAAI,UACJ6B,eAAgB,gBAK/BW,GACDvE,EAAAA,EAAAA,KAAA,OAAKqF,OAAKnF,EAAAA,EAAAA,GAAA,CAAIqH,KAAM,EAAG9B,SAAU,QAAWpB,GAAehE,SACtDA,MAIjB,C,yMC7He,WAAAoB,GAAsE,IAADqG,EAAArG,EAA3DsG,qBAAAA,OAAoB,IAAAD,EAAC,WAAK,EAACA,EAAAE,EAAAvG,EAACwG,uBAAAA,OAAsB,IAAAD,EAAC,WAAK,EAACA,EAC9EE,EAAgCrI,EAAAA,SAAe,MAAKsI,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAA7CG,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtB9E,EAAOkF,QAAQF,GAIf3F,EAAc,WAChB4F,EAAY,KAChB,EACA,OAAO5H,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EAAEL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CACZtC,MAAM,UACNqH,OAAQ,SACRC,KAAM,QAGNC,WAAW3I,EAAAA,EAAAA,KAAC4I,EAAAA,EAAQ,IACpBvB,QAAQ,YACRrG,QAdgB,SAAC6H,GACjBP,EAAYO,EAAMC,cACtB,EAaIC,SAAS/I,EAAAA,EAAAA,KAACgJ,EAAAA,EAAqB,IAAI3I,SACtC,cAGGK,EAAAA,EAAAA,MAACuI,EAAAA,EAAI,CAACZ,SAAUA,EACVhF,KAAMA,EACN/C,QAASoC,EAAYrC,SAAA,EACvBL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS,WAAK+G,IAAuBrF,GAAc,EAAErC,SAAC,2BAChEL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS,WAAKiH,IAAyBvF,GAAc,EAAErC,SAAC,6BAClEL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAACrF,UAAQ,EAAC7C,QAAS0B,EAAayG,KAAMC,iJAAoC/I,SAAC,iCACpFL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS0B,EAAamB,UAAQ,EAAAxD,SAAC,wCAGrD,C,qCChCe,SAASgJ,EAAW5H,GAAW,IAAT6H,EAAM7H,EAAN6H,OACjCC,GAAmCC,EAAAA,EAAAA,WAAS,GAAMC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA3CG,EAAUD,EAAA,GAACE,EAAaF,EAAA,GAC/BG,GAAqBJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA1BE,EAAGD,EAAA,GAACE,EAAMF,EAAA,GACjBG,GAAwCR,EAAAA,EAAAA,WAAS,GAAMS,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAhDrI,EAAYsI,EAAA,GAAEC,EAAeD,EAAA,GAgBpC,OAAOvJ,EAAAA,EAAAA,MAACyJ,EAAAA,SAAQ,CAAA9J,SAAA,EAChBL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAAC2D,QAAQ,YAAYrG,QAZT,WACfkJ,GAAgB,GAChBZ,IAASc,MAAK,SAAAC,GACVN,EAAOM,GACPV,GAAc,GACdO,GAAgB,EACpB,IAAGI,OAAM,SAACC,GACNR,EAAO,IACPG,GAAgB,EACpB,GACJ,EAEgD7J,SAAC,WACjDL,EAAAA,EAAAA,KAACwK,EAAAA,EAAc,CACX3I,OAAQ6H,EACRhH,YAlBgB,WAChBiH,GAAc,EAClB,EAiBIhI,aAAcA,EACdO,MAAO,YACPuI,SAAU,KACVzI,SAAStB,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CAACvK,UAAU,UAASE,SAAA,EAC/BL,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACNjC,KAAK,QACLkC,MAAM,GACNvD,QAAQ,WACRwD,WAAY,CACRC,UAAU,GAEdC,MAAOjB,KAEX9J,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CAAC2D,QAAQ,YAAYqB,KAAK,QAC7B1H,QAAS,WAAOgK,UAAUC,UAAUC,UAAUpB,EAAI,EAAEzJ,SAAC,gBAMrE,CClCA,IA0LA,EA1LmB,SAAHoB,GAIW,IAAD0J,EAAA1J,EAHFM,GAAAA,OAAE,IAAAoJ,EAAG,aAAYA,EAAEC,EAAO3J,EAAP2J,QAASC,EAAI5J,EAAJ4J,KAAMC,EAAS7J,EAAT6J,UAAWC,EAAY9J,EAAZ8J,aAAcC,EAAa/J,EAAb+J,cAC3DC,EAAahK,EAAbgK,cAAeC,EAAWjK,EAAXiK,YAAaC,EAAWlK,EAAXkK,YAAaC,EAAYnK,EAAZmK,aAAcC,EAAgBpK,EAAhBoK,iBACvDC,EAAOrK,EAAPqK,QAEpBvC,GAAwCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA7CwC,EAAYtC,EAAA,GAAEuC,EAAevC,EAAA,GAG9BwC,GAA4BC,EAAAA,EAAAA,QAAO,MAGzCtC,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA1C1F,EAAS2F,EAAA,GAAEsC,EAAYtC,EAAA,GAC9BG,GAA8BR,EAAAA,EAAAA,UAAS,IAAGS,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAnCoC,EAAOnC,EAAA,GAAEoC,EAAUpC,EAAA,GAC1BqC,GAAkDC,EAAAA,EAAAA,MAA3CC,EAAeF,EAAfE,gBAAgBC,EAAcH,EAAdG,eACjBC,GAAoBC,EADoBL,EAAPK,SACL,sBAElCC,EAAAA,EAAAA,YAAU,WAEN,IAAK,IAADC,EAAAC,EACiC,QAAjCD,EAAAZ,EAA0Bc,eAAO,IAAAF,GAAe,QAAfC,EAAjCD,EAAmCG,qBAAa,IAAAF,GAAhDA,EAAAG,KAAAJ,EAAmD,EACvD,CAAE,MAAOK,GACLC,QAAQC,IAAIF,EAChB,CACJ,GAAG,CAACd,KAEJQ,EAAAA,EAAAA,YAAU,WACNZ,EAAgB,CAAC,EACrB,GAAG,CAACX,IACJ,IAAMgC,EAAmB,SAACC,GACtBnB,GAAa,GACbK,EAAgBc,GAAMlD,MAAK,SAACmD,GACxB,IAAMC,EAAa,CACfC,eAAgB,IAChBC,aAAc,IACdC,iBAAkB,IAClBC,YAAY,EACZC,SAAS,aAADC,QAAe,IAAIC,MAAOC,gBAClCC,QAAQ,EACRC,kBAAkB,EAClBC,QAASC,OAAOC,KAAK3B,IAEL,IAAI4B,EAAAA,YAAYd,GACxBe,YAAYhB,GACxBpB,GAAa,EACjB,IAAG7B,OAAM,SAAAC,GACL4B,GAAa,EACjB,GACJ,EAuCMqC,GAAYC,EAAAA,EAAAA,cAAWC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACnBzC,KAAgB,wBAAAsC,EAAAI,OAAA,GAAAN,EAAA,KACzB,CAACxD,EAAKS,IAER,OACI9L,EAAAA,EAAAA,KAACoP,EAAAA,GAAkB,CAEfrN,GAAIA,EACJqJ,QAASA,EACTC,KAAMA,EAENgE,yBAAuB,EACvBC,qBAAqB,EACrBC,kBAAkB,EAClBC,oBAAkB,EAElBC,yBAAuB,EACvBC,mBAAoB,CAAC9O,GAAI,CAAC0E,QAAS,OAAQC,cAAe,SAAUmC,UAAW,EAAGlC,OAAQ,SAE1FmK,aAAc,CAACC,QAAS,WACxBC,gBAAiBxD,EACjByD,qBAAsB9D,EACtB+D,MAAO,CAAC7L,UAAWuH,GAAiBvH,EAAWkI,QAAAA,EAASL,aAAAA,GACxDE,0BAA2BA,EAC3B+D,oBAAqB,CAACC,SAAU,GAChCC,qBAAsB,SAAAtL,GAAA,IAAEuL,EAAGvL,EAAHuL,IAAG,MAAO,CAC9BnP,QAAS,WACL0K,EAAYyE,EAAIC,SACpB,EAEAxP,GAAI,CAACyP,OAAQ,UAAWC,QAAS3E,EAAeA,EAAY4E,MAAQJ,EAAIC,SAASG,IAAM,EAAI,GAAO,GACrG,EACDC,uBAAwB,CAAC9H,KAAM,SAC/B+H,sBAAuB,CAAC7P,GAAI,CAAC,UAAa,aAAc8P,WAAY,WACpEC,sBAAsB,EACtBC,wBAAwB,EACxBC,cAAe,CACXC,QAAS,GACTC,QAAS,KACTrI,KAAM,KAEVsI,WAAW,OACXC,2BAA4B,SAC5BC,8BAA+B,SAAAC,GAAOA,EAALC,MAC7B,OACI1Q,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CACAzQ,GAAI,CAAC0E,QAAS,OAAQgM,IAAK,OAAQxQ,EAAG,SAAUyQ,SAAU,WAAWlR,SAAA,EAErEL,EAAAA,EAAAA,KAACwR,EACG,CACAzJ,qBAAsB,kBAAMsF,EAAiB/B,EAAU,EACvDrD,uBAAwB,kBAAMoF,EAAiB9B,EAAa,KAEhEvL,EAAAA,EAAAA,KAACqJ,EAAW,CAACC,OAAQkF,MAGjC,EACAiD,oBAAqB,SAAAC,GAAc,IAAZN,EAAKM,EAALN,MACbO,EAAiB/F,EAAe,WAClCA,EAAawF,EAAMQ,sBAAsBC,SAASC,KAAI,SAAAzH,GAAC,OAAIA,EAAE+F,QAAQ,IACzE,EAAI,WACJ,EACM2B,EAAuBlG,EAAmB,WAC5CA,EAAiBuF,EAAMQ,sBAAsBC,SAASC,KAAI,SAAAzH,GAAC,OAAIA,EAAE+F,QAAQ,IAC7E,EAAI,WACJ,EACA,OAAQ1P,EAAAA,EAAAA,MAACgG,EAAAA,EAAO,CACZ9F,GAAI,CACA0E,QAAS8I,OAAOC,KAAKtC,GAAciG,OAAS,OAAS,QACvD3R,SAAA,EAEFL,EAAAA,EAAAA,KAACqR,EAAAA,EAAG,CAACzQ,GAAI,CAACqR,SAAU,GAAG5R,UACnBL,EAAAA,EAAAA,KAACkS,EAAAA,GAAsB,CACnBC,kBAAgB,EAChBf,MAAOA,MAGbxF,IAAkBJ,IAAmBxL,EAAAA,EAAAA,KAACoS,EAAAA,EAAO,CAAClQ,MAAO,uBAAuB7B,UAACL,EAAAA,EAAAA,KAACe,EAAAA,EAE5E,CACAC,QAAS2Q,EACTtK,QAAQ,YAAWhH,UAEnBL,EAAAA,EAAAA,KAACqS,EAAAA,EAAY,QAGfxG,IAAqB7L,EAAAA,EAAAA,KAACoS,EAAAA,EAAO,CAAClQ,MAAO,4BAA4B7B,UAACL,EAAAA,EAAAA,KAACe,EAAAA,EAEjE,CACAC,QAAS+Q,EACT1K,QAAQ,YAAWhH,UAEnBL,EAAAA,EAAAA,KAACsS,EAAAA,EAAe,UAI5B,GA1FKvQ,EA6FjB,E,uDChMIwQ,EAAW,SAAA9Q,GAAA,IAAG+Q,EAAO/Q,EAAP+Q,QAASC,EAAOhR,EAAPgR,QAASC,EAAMjR,EAANiR,OAAQC,EAAMlR,EAANkR,OAAM,OAC9CjS,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EACIL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAS0R,EAAQ7O,UAAW2O,EAAQnS,UAACL,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,OAC1D5S,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAS2R,EAAQ9O,UAAW4O,EAAQpS,UAACL,EAAAA,EAAAA,KAAC6S,EAAAA,EAAQ,QAC3D,EAQDC,EAAsB,CACxBJ,OAAQK,EAAAA,GAAmBC,KAC3BL,OAAQI,EAAAA,GAAmBE,MAQ/B,EALAV,GAAWW,EAAAA,EAAAA,KAVa,SAACnD,GAAK,MAAM,CAChCyC,QAASzC,EAAMoD,cAAcC,KAAKpB,OAAS,EAC3CS,QAAS1C,EAAMoD,cAAcE,OAAOrB,OAAS,EAChD,GASGc,EAFOI,CAGTX,G,iPChBF,IARoBe,EAAAA,GAAAA,IAAOC,GAAAA,EAAPD,EAAc,SAAA7R,GAAA,IAAGJ,EAAKI,EAALJ,MAAK,MAAQ,CAC9C6F,QAAS7F,EAAMmS,QAAQ,GACvBC,aAAa,GACb5N,WAAYxE,EAAMyE,YAAYC,OAAO,YAAa,CAC9CG,SAAU7E,EAAMyE,YAAYI,SAASwN,WAE5C,I,YCLc,SAASC,GAAUlS,GAO9B,IANFmS,EAASnS,EAATmS,UACAC,EAAQpS,EAARoS,SACArO,EAAM/D,EAAN+D,OACAP,EAAKxD,EAALwD,MAEA6O,GADSrS,EAATsS,UACStS,EAATqS,WAEMzS,GAAQ0B,EAAAA,EAAAA,KACdwG,GAAsBC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA7B8B,EAAI5B,EAAA,GAAEuK,EAAOvK,EAAA,IAClBmD,EAAAA,EAAAA,YAAU,WACR,GAAIiH,EAAS7B,QAAU4B,EAAU5B,OAAQ,CACvC,IAAM3G,EAAOuI,EAAU9B,KAAI,SAACzH,GAC1B,IAAM4J,EAAO,CACXC,KAAM,eACNC,EAAG,GACHC,MAAO,GACPC,KAAM,SACNC,KAAM,iBAQR,OANAT,EAASU,SAAQ,SAACC,EAAGC,GAAQ,IAADC,EAC1BT,EAAKE,EAAEM,GAAc,QAAXC,EAAGrK,EAAEmK,EAAEG,YAAI,IAAAD,EAAAA,OAAI/O,EACzBsO,EAAKG,MAAMK,GAAMD,EAAE5J,KACrB,IACAqJ,EAAKE,EAAES,KAAKX,EAAKE,EAAE,IACnBF,EAAKG,MAAMQ,KAAKX,EAAKG,MAAM,IACpBH,CACT,IACA,GAAIH,EAAW,CACb,IAAMG,EAAO,CACXC,KAAM,eACNC,EAAG,GACHC,MAAO,GACPS,KAAM,CACJC,KAAM,QAERR,KAAM,QAERjJ,EAAKuJ,KAAKX,GACVJ,EAASU,SAAQ,SAACC,EAAGC,GAAQ,IAADM,EAC1Bd,EAAKE,EAAEM,GAAsB,QAAnBM,EAAGjB,EAAUU,EAAEG,YAAI,IAAAI,EAAAA,OAAIpP,EACjCsO,EAAKG,MAAMK,GAAMD,EAAE5J,KACrB,IACAqJ,EAAKE,EAAES,KAAKX,EAAKE,EAAE,IACnBF,EAAKG,MAAMQ,KAAKX,EAAKG,MAAM,GAC7B,CACAJ,EAAQ3I,EACV,MACE2I,EAAQ,GAEZ,GAAG,CAACJ,EAAWE,EAAWD,IAC1B,IAAImB,GAASC,EAAAA,EAAAA,UACX,iBAAO,CACLC,cAAe,sBACfC,aAAc,sBACdC,WAAW,EACX5P,OAAQA,EACRP,MAAOA,EACPgC,OAAQ,CAAEN,EAAG,GAAIwN,EAAG,GAAIkB,EAAG,GAAIC,EAAG,IAClCC,KAAM,CACJC,OAAQnU,EAAMoU,WAAWC,WACzBhN,KAAMrH,EAAMoU,WAAWE,SACvBvU,MAAOC,EAAMC,QAAQsU,KAAK7O,SAE5B8O,MAAO,CACLC,WAAY,CACVC,SAAS,EACTC,MAAO,CAAC,EAAG,KAGfC,YAAY,EACb,GACD,CAACzQ,EAAQP,EAAO5D,IAElB,OACErB,EAAAA,EAAAA,KAACkW,GAAAA,EAAI,CACH7K,KAAMA,EACN2J,OAAQA,EACRmB,OAAQ,CACNC,aAAa,EACbC,qBAAsB,CACpBC,OAAQ,MACRzI,SAAU,cACVrI,OAAQ,KACRP,MAAO,KACPsR,MAAO,GAETC,uBAAuB,EACvBC,gBAAiB,oCAKzB,C,gBC3FMC,IAAiBC,EAAAA,GAAAA,OAAcX,MAAM,CAAC,EAAE,KACxCY,IAAQD,EAAAA,GAAAA,OAAcE,OAAO,CAC/B,KAAQ,MAAQ,KAAO,KAAO,KAAO,KAAO,KAAO,KACnD,KAAO,MAAQ,KAAO,MAAO,MAAO,MAAO,QAAS,QACpD,QAAS,OAAQ,SAAU,MAC5Bb,OAAMc,EAAAA,GAAAA,KAAQ,EAAE,IAAIhF,KAAI,SAAAzH,GAAC,OAAE,GAAGA,CAAC,KACnB,SAAU0M,GAAGtV,GAAkC,IAA/BuV,EAAIvV,EAAJuV,KAAKxR,EAAM/D,EAAN+D,OAAOP,EAAKxD,EAALwD,MAAM8O,EAAStS,EAATsS,UACvC1S,GAAQ0B,EAAAA,EAAAA,KACdwG,GAAqBC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA5B8B,EAAI5B,EAAA,GAACuK,EAAOvK,EAAA,GACjBG,GAAyBJ,EAAAA,EAAAA,UAAS,CAACyN,OAAQ,CAACC,IAAK,EAAGC,IAAK,GAAGC,KAAK,IAAGvN,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA/DiN,EAAMhN,EAAA,GAACwN,EAASxN,EAAA,IACrB+C,EAAAA,EAAAA,YAAU,WACN,IACI,GAAIoK,EAAKhF,OAAQ,CAGb,IAAMsF,EAAYjW,EAAMC,QAAQyF,QAAQc,KACxC6O,GAAeG,QAAOU,EAAAA,GAAAA,KAAOP,GAAM,SAAA3M,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGmN,KAAK,KAChD,IAAIN,EAAM,GACNC,EAAM,GACNzO,EAAO,GACPkN,EAAO,GAEXoB,EAAKzC,SAAQ,SAAAlK,GACT6M,EAAItC,KAAKvK,EAAEoN,MACXN,EAAIvC,KAAKvK,EAAE8M,KACXzO,EAAKkM,KAAK8B,GAAgB,OAADrM,QAAC,IAADA,OAAC,EAADA,EAAGmN,QAC5B5B,EAAKhB,KAAK,GAAD9G,OAAIzD,EAAS,MAAC,MAAAyD,OAAM,OAADzD,QAAC,IAADA,OAAC,EAADA,EAAGmN,MAAK,KAExC,IAEA,IAAIE,EAAQhB,GAAegB,MAAM,GAC7BC,EAAQD,EAAM5F,KAAI,SAAAnL,GAAC,OAAI+P,GAAe/P,EAAE,IACxCiR,EAAQF,EAAM5F,KAAI,SAACnL,EAAGkR,GAAC,MAAM,CAC7BC,OAAQ,aACR5D,KAAM,gBACNI,KAAK,GAADxG,OAAKnH,GACTuQ,IAAK,CAAC,GACNC,IAAK,CAAC,GACNY,EAAG,CAAC,GACJC,EAAG,CAAC,GACJC,OAAQ,CACJ7W,MAAOkW,EACP5O,KAAMiP,EAAME,IAEhB9B,QAAS,aACZ,IACG1K,EAAI,CAAI,CACR6I,KAAM,gBACNgD,IAAAA,EACAC,IAAAA,EACAe,UAAW,OACXtC,KAAAA,EACAK,YAAY,EACZgC,OAAQ,CACJvP,KAAAA,EACAtH,MAAOkW,EAEPzC,KAAM,CACFzT,MAAO,UAGfkT,KAAM,WACTxG,QAAAqK,EAAAA,GAAAA,GAAKP,IAEAQ,GAAQb,EAAAA,GAAAA,KAAOP,GAAM,SAAA3M,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGoN,IAAI,IACjCY,GAAOd,EAAAA,GAAAA,KAAOP,GAAM,SAAA3M,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAG8M,GAAG,IAC/BF,EAAS,CAACC,KAAMkB,EAAM,GAAKA,EAAM,IAAM,EAAGjB,KAAMkB,EAAK,GAAKA,EAAK,IAAM,GAErEjB,EAAOkB,KAAKC,IAAI,GAAID,KAAKC,IAAI3B,GADpB,KAC2BwB,EAAM,GAAKA,EAAM,IAAe,GAAIxB,GAD/D,KACsEyB,EAAK,GAAKA,EAAK,MAAiB,KAGrH,GADAhB,EAAU,CAACD,KAAAA,EAAMH,OAAAA,IACblD,EAAW,CACX,IAAMyE,EAAaxB,EAAKyB,MAAK,SAAApO,GAAC,OAAIA,EAAW,UAAM0J,EAAU2E,OAAO,IAChEF,GACAnN,EAAKuJ,KAAK,CACNV,KAAM,gBAENgD,IAAK,CAACsB,EAAWf,MACjBN,IAAK,CAACqB,EAAWrB,KACjBe,UAAW,OACXtC,KAAM,CAAC,GAAD9H,OAAI0K,EAAkB,MAAC,MAAA1K,OAAe,OAAV0K,QAAU,IAAVA,OAAU,EAAVA,EAAYhB,MAAK,MACnDvB,YAAY,EACZgC,OAAQ,CACJvP,KAAM,CAACgO,GAAe8B,EAAWhB,QACjCpW,MAAO,MACPyT,KAAM,CACFzT,MAAO,UAGfkT,KAAMkE,EAAkB,OAGpC,CACAxE,EAAQ3I,EACZ,MACI2I,EAAQ,GAChB,CAAC,MAAMzJ,GAEP,CACJ,GAAE,CAACyM,EAAKjD,IAER,IAAIiB,GAASC,EAAAA,EAAAA,UAAQ,iBAAK,CACtBC,cAAe7T,EAAMC,QAAQuF,WAAW8R,MACxCxD,aAAa,gBACbC,WAAW,EACX5P,OAAOA,EACPP,MAAMA,EACNgC,OAAO,CAACN,EAAE,GAAGwN,EAAE,GAAGkB,EAAE,GAAGC,EAAE,IACzBsD,WAAY,CACRvT,MAAO,WAEXyS,OAAQ,CACJzS,MAAO,iBACP4R,OAAOJ,EAAOI,OACdG,KAAKP,EAAOO,MAEhB7B,KAAM,CACFC,OAAQnU,EAAMoU,WAAWC,WACzBhN,KAAMrH,EAAMoU,WAAWE,SACvBvU,MAAOC,EAAMC,QAAQsU,KAAK7O,SAE9B8R,OAAQ,CACJ3W,MAAO,CAAC0T,KAAM,YACdkD,eAAgB,OAChBf,EAAG,EACHgB,QAAS,QACTf,EAAG,EACHgB,YAAa,KAEpB,GAAE,CAACxT,EAAOP,EAAM5D,EAAMwV,IACvB,OACI7W,EAAAA,EAAAA,KAACkW,GAAAA,EAAI,CACD7K,KAAMA,EACN2J,OAASA,EACTmB,OAAU,CAAC,aAAe,EACtB,qBAAwB,CACxB,OAAU,MACV,SAAY,cACZ,OAAU,KACV,MAAS,KACT,MAAS,GAETK,uBAAuB,EACvBC,gBAAiB,kCACjB,YAAW,IAI3B,C,gBClIA,IACA,GAAe,IAA0B,iE,qPCvB5BwC,GAAa,CACxB,CAAEtE,IAAK,qBAAsB/J,MAAO,eAAgBsO,OAAO,GAC3D,CAAEvE,IAAK,oBAAqB/J,MAAO,cAAesO,OAAO,GACzD,CAAEvE,IAAK,qBAAsB/J,MAAO,eAAgBsO,OAAO,GAC3D,CAAEvE,IAAK,yBAA0B/J,MAAO,mBAAoBsO,OAAO,GACnE,CAAEvE,IAAK,iBAAkB/J,MAAO,WAAYsO,OAAO,GACnD,CAAEvE,IAAK,eAAgB/J,MAAO,UAC9B,CAAE+J,IAAK,gBAAiB/J,MAAO,WAC/B,CAAE+J,IAAK,sBAAuB/J,MAAO,uBACrC,CAAE+J,IAAK,mBAAoB/J,MAAO,oBAClC,CAAE+J,IAAK,cAAe/J,MAAO,UAGlBuO,GAAkBF,GAAWG,QAAO,SAAC/O,GAAC,OAAKA,EAAE6O,KAAK,IAElDG,GAAiB,CAC5B,CAAE1E,IAAK,gBAAiB/J,MAAO,gBAAiB0O,SAAS,GACzD,CAAE3E,IAAK,iBAAkB/J,MAAO,kBAChC,CAAE+J,IAAK,YAAa/J,MAAO,YAAa0O,SAAS,I,eCsBhChG,EAAAA,GAAAA,KAAO,SAACxT,GACIA,EAArByZ,OAAR,IAAmBhZ,GAAKC,EAAAA,EAAAA,GAAKV,EAAKW,IAClC,OAAOT,EAAAA,EAAAA,KAACwZ,GAAAA,GAActZ,EAAAA,EAAAA,GAAA,GAAKK,GAC7B,GAHmB+S,EAGhB,SAAA7R,GAAA,IAAGJ,EAAKI,EAALJ,MAAa,MAAQ,CACzBoY,UADiBhY,EAAN8X,OAC2B,iBAAjB,eACrBlT,WAAY,OACZR,WAAYxE,EAAMyE,YAAYC,OAAO,YAAa,CAChDG,SAAU7E,EAAMyE,YAAYI,SAASwN,WAExC,IAED,SAASgG,GAAWC,GAClB,OAAQA,GACN,IAAK,OACH,MAAO,CAAEC,QAAQ5Z,EAAAA,EAAAA,KAAC6Z,GAAAA,EAAQ,CAACxU,MAAO,CAAEiB,aAAc,MAAUsE,MAAO,IACrE,IAAK,SACH,MAAO,CAAEgP,QAAQ5Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAU,CAACzU,MAAO,CAAEiB,aAAc,MAAUsE,MAAO,IACvE,QACE,MAAO,CAAEA,MAAO+O,GAEtB,CA2iBA,OAziBA,SAAmBI,GAAiC,IAADC,EAAAC,EAA7B5O,EAAI0O,EAAJ1O,KAAM6O,EAAQH,EAARG,SAAUpG,EAASiG,EAATjG,UAC9BqG,EAAcC,KAAO/O,EAAKgP,cAAc/D,OAAO,OAC/CpQ,EAAWkU,KAAAA,IAAiC,IAAtB/O,EAAKiP,gBAAuBhE,OAAO,YACzDiE,EAAgC,QAApBP,EAAG3O,EAAKkP,oBAAY,IAAAP,EAAAA,EAAI,MACpCQ,GAAevF,EAAAA,EAAAA,UAAQ,iBAAM,CAAC5J,EAAK,GAAE,CAACA,IACtCoP,GAAexF,EAAAA,EAAAA,UAAQ,kBAAMkE,EAAe,GAAE,IAEpD,OACEzY,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CAAC8I,QAAS,EAAEnT,SAAA,EAChBK,EAAAA,EAAAA,MAACga,GAAW,CAAAra,SAAA,EACVL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CACTuT,UAAU,MACVtT,QAAQ,KACRrG,QAAS,kBAAMkZ,EAAS,CAAEU,QAAS,CAACvP,EAAKuP,UAAYvP,EAAK,EAAChL,SAE1DgL,EAAKuP,WAKRla,EAAAA,EAAAA,MAAA,SAAO2E,MAAO,CAAEJ,MAAO,QAAS5E,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,YAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKqF,MAAO,CAAEJ,MAAO,QACrBjF,EAAAA,EAAAA,KAAA,cAEFU,EAAAA,EAAAA,MAAA,SAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,UACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEK,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CACJvK,UAAW,MACXqT,QAAS,EACTjC,UAAQ,EACR3Q,GAAI,CAAEqE,MAAO,OAAQsM,SAAU,QAASlR,SAAA,EAExCL,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAACjQ,MAAOS,EAAKyP,aAAcpS,KAAM,UACrC2C,EAAK0P,oBACJ/a,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,SACGgL,EAAK0P,kBAAkBjJ,KAAI,SAACzH,GAAC,OAC5BrK,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAACjQ,MAAOP,EAAW3B,KAAM,SAAT2B,EAAoB,MAG5C,aAIT3J,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAACgb,GAAAA,EAAI,CACH7R,KAAMkC,EAAK4P,YACXxS,OAAQ,SACRrH,MAAO,YAAYf,SAElBgL,EAAK4P,oBAIZva,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,cACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEK,EAAAA,EAAAA,MAACsa,GAAAA,EAAI,CACHvS,OAAQ,SACRrH,MAAO,YACP+H,KAAI,8BAAA2E,OAAgCzC,EAAK8L,IAAG,KAAArJ,OAAIzC,EAAKoM,MAAOpX,SAAA,EAE5DL,EAAAA,EAAAA,KAACkb,GAAAA,EAAO,IACP7P,EAAK8P,KAAK,KAAG9P,EAAK+P,iBAIzB1a,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,sBACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAACgb,GAAAA,EAAI,CAAC7R,KAAMkC,EAAKvB,IAAKrB,OAAQ,SAAUrH,MAAO,YAAYf,SACxDgL,EAAKvB,YAIZpJ,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,aACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAKgQ,iBACJrb,EAAAA,EAAAA,KAAC0K,EAAAA,EAAK,CACJvK,UAAW,MACXqT,QAAS,EACTjC,UAAQ,EACR3Q,GAAI,CAAEqE,MAAO,OAAQsM,SAAU,QAASlR,SAEvCgL,EAAKgQ,eAAeC,MAAM,KAAKxJ,KAAI,SAACzH,GAAC,OACpCrK,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAACjQ,MAAOP,EAAW3B,KAAM,SAAT2B,EAAoB,YAMnD3J,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAKkQ,gBACJvb,EAAAA,EAAAA,KAAC0K,EAAAA,EAAK,CACJvK,UAAW,MACXqT,QAAS,EACTjC,UAAQ,EACR3Q,GAAI,CAAEqE,MAAO,OAAQsM,SAAU,QAASlR,SAEvCgL,EAAKkQ,cAAczJ,KAAI,SAACzH,GAAC,OACxBrK,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAACjQ,MAAOP,EAAW3B,KAAM,SAAT2B,EAAoB,YAMnD3J,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAKmQ,mCAMlBxb,EAAAA,EAAAA,KAAC0a,GAAW,CAAAra,UACVK,EAAAA,EAAAA,MAAA,SAAO2E,MAAO,CAAEJ,MAAO,QAAS5E,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,YAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKqF,MAAO,CAAEJ,MAAO,QACrBjF,EAAAA,EAAAA,KAAA,cAEFA,EAAAA,EAAAA,KAAA,SAAAK,UACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKka,cAMZlP,EAAKoQ,cACJzb,EAAAA,EAAAA,KAAC0a,GAAW,CAAAra,UACVK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAACnI,QAAS,EAAEnT,SAAA,EACzBK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,SAAA,EAChBK,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CAACzQ,GAAI,CAAE2G,KAAM,WAAYjC,QAAS,QAASjF,SAAA,EAC7CL,EAAAA,EAAAA,KAAC6b,GAAAA,EAAM,CACL,aAAW,SACXC,IAAKzQ,EAAKoQ,YAAYM,iBACtBnb,GAAI,CAAEob,GAAI,GAAI3b,SAEbgL,EAAKoQ,YAAYQ,YAAY,MAEhCvb,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACEL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,KAAKjG,MAAO,eAAef,SAC5CgL,EAAKoQ,YAAYQ,eAEpBjc,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,YAAWhH,SAC5BgL,EAAKoQ,YAAYS,qBAIxBlc,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CACTuT,UAAU,MACVtT,QAAQ,YACRjG,MAAM,iBAAgBf,SAErBgL,EAAKoQ,YAAYU,yBAGtBnc,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UAChBK,EAAAA,EAAAA,MAAA,SAAO2E,MAAO,CAAEJ,MAAO,QAAS5E,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,YAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKqF,MAAO,CAAEJ,MAAO,QACrBjF,EAAAA,EAAAA,KAAA,cAEFU,EAAAA,EAAAA,MAAA,SAAAL,SAAA,EACEK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,gBACJK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CACHuB,MAAMpc,EAAAA,EAAAA,KAACqc,GAAAA,EAAQ,IACfzb,GAAI,CAAE0F,YAAa,GACnBsE,MAAOS,EAAKoQ,YAAYa,kBACxB5T,KAAM,UACN,KACA4N,EAAAA,GAAAA,KAAO,IAAPA,CAAYjL,EAAKoQ,YAAYc,kBAAmB,IAAI,oBAI1D7b,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,UACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAoC,QAApC4Z,EAAK5O,EAAKoQ,YAAYe,sBAAc,IAAAvC,EAAAA,EAAI,YAE1CvZ,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,YACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAKoQ,YAAYgB,eAChBpR,EAAKoQ,YAAYgB,cAAc3K,KAAI,SAACnL,GAAC,OACnC3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAAG+B,KAAM,SAAnB/B,EAA8B,UAIjDjG,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAKoQ,YAAYiB,mBAAmB5K,KAAI,SAACnL,GAAC,OACzC3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAAG+B,KAAM,SAAnB/B,EAA8B,SAI9C0E,EAAKoQ,YAAYkB,gBAClBtR,EAAKoQ,YAAYkB,eAAe3K,QAC9BtR,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,aACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAKoQ,YAAYkB,eAAe7K,KAC/B,SAAAlN,GAAA,IACE2L,EAAG3L,EAAH2L,IACA0L,EAAWrX,EAAXqX,YACAF,EAAgBnX,EAAhBmX,iBACAa,EAAchY,EAAdgY,eACAC,EAAyBjY,EAAzBiY,0BACAC,EAAkBlY,EAAlBkY,mBACAC,EAAiBnY,EAAjBmY,kBAAiB,OAEjB/c,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CACHjB,QACE5Z,EAAAA,EAAAA,KAAC6b,GAAAA,EAAM,CACLmB,IAAKf,EACLH,IAAKC,IAITnR,OACElK,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EACEL,EAAAA,EAAAA,KAAA,UAAAK,SAAS4b,IACRW,IACC5c,EAAAA,EAAAA,KAAC6a,GAAAA,GAAI3a,EAAAA,EAAAA,GAAA,CACHgC,MAAK,WAAA4L,OAAa8O,GAClBxb,MAAO,QACPsH,KAAM,SACFgR,GAAWkD,KAGlBC,IACC7c,EAAAA,EAAAA,KAAC6a,GAAAA,GAAI3a,EAAAA,EAAAA,GAAA,CACHgC,MAAK,wBAAA4L,OAA0B+O,GAC/BnU,KAAM,SACFgR,GAAWmD,KAGlBC,IACC9c,EAAAA,EAAAA,KAAC6a,GAAAA,GAAI3a,EAAAA,EAAAA,GAAA,CACHgC,MAAK,gBAAA4L,OAAkBgP,GACvBpU,KAAM,SACFgR,GAAWoD,KAGlBC,GACDA,EAAkB/K,QAChBhS,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CACH3Y,MAAO,cACP0I,MAAOmS,EAAkBE,KAAK,MAC9BvU,KAAM,UAGR,MAINrB,QAAS,YAtCJkJ,EAuCL,SAMV,IAEF7P,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAACgb,GAAAA,EAAI,CACH7R,KAAMkC,EAAKoQ,YAAYyB,eACvBzU,OAAQ,SACRrH,MAAO,YAAYf,SAElBgL,EAAKoQ,YAAYyB,uBAIxBxc,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,iBACJK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,mCAAA2E,OAAqCzC,EAAKoQ,YAAY0B,WAC1D1U,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKsB,GAAanY,MAAO,GAAIoY,QAAQ,WAE3ChS,EAAKoQ,YAAY6B,aAChBtd,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,6BAAA2E,OAA+BzC,EAAKoQ,YAAY6B,YACpD7U,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKyB,GAAUtY,MAAO,GAAIoY,QAAQ,WAG1ChS,EAAKoQ,YAAY+B,mBAChBxd,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,mCAAA2E,OAAqCzC,EAAKoQ,YAAY+B,kBAC1D/U,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAK2B,GAAaxY,MAAO,GAAIoY,QAAQ,WAG7ChS,EAAKoQ,YAAYiC,uBAChB1d,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,kCAAA2E,OAAoCzC,EAAKoQ,YAAYiC,sBACzDjV,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OACE8b,IAAK6B,GACL1Y,MAAO,GACPoY,QAAQ,+BAa9Brd,EAAAA,EAAAA,KAAC0a,GAAW,CAACkD,UAAW,EAAEvd,UACxBK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAACnI,QAAS,EAAEnT,SAAA,EACzBL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UAChBK,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAAChG,MAAM,iBAAiByc,cAAY,EAAAxd,SAAA,CAC5C,IACA8Z,QAGLzZ,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,SAAA,EAChBL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CACTC,QAAQ,KACRsT,UAAU,MACV3Z,QACEqK,EAAKyS,WACD,kBAAM5D,EAAS,CAAE4D,WAAY,CAACzS,EAAKyS,aAAc,EACjD,KACLzd,SAEAgL,EAAKyS,cAER9d,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CACTuT,UAAU,MACVtT,QAAQ,YACRjG,MAAM,iBAAgBf,SAErBgL,EAAK0S,qBAERrd,EAAAA,EAAAA,MAAA,SAAO2E,MAAO,CAAEJ,MAAO,QAAS5E,SAAA,EAC9BK,EAAAA,EAAAA,MAAA,YAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,OAAKqF,MAAO,CAAEJ,MAAO,QACrBjF,EAAAA,EAAAA,KAAA,cAEFU,EAAAA,EAAAA,MAAA,SAAAL,SAAA,CACGgL,EAAK2S,aACJtd,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,UACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAK2S,gBAGb3S,EAAK4S,iBAAmB5S,EAAK4S,gBAAgBjM,QAC5CtR,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,eACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAK4S,gBAAgBnM,KAAI,SAACnL,GAAC,OAC1B3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAAG+B,KAAM,SAAnB/B,EAA8B,SAK/C,GAED0E,EAAK6S,iBAAmB7S,EAAK6S,gBAAgBlM,QAC5CtR,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,eACJL,EAAAA,EAAAA,KAAA,MAAAK,SACGgL,EAAK6S,gBAAgBpM,KAAI,SAACnL,GAAC,OAC1B3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAAG+B,KAAM,SAAnB/B,EAA8B,SAK/C,GAED0E,EAAK8S,iBACJzd,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,cACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAK8S,oBAGb9S,EAAK+S,sBACJ1d,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,mBACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAK+S,yBAGb/S,EAAKiP,iBACJ5Z,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,cACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAK6F,OAGRmF,EAAKgT,mBACJ3d,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,gBACJL,EAAAA,EAAAA,KAAA,MAAAK,UACEL,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CACHuB,MAAMpc,EAAAA,EAAAA,KAACqc,GAAAA,EAAQ,IACfzR,MAAOS,EAAKgT,iBACZ3V,KAAM,gBAKdhI,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,UACJK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CACGgL,EAAKiT,UAAU,KAAGjT,EAAKkT,kBAG5B7d,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,uBACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAKmT,uBAEXnT,EAAKoT,cACJ/d,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,WACJL,EAAAA,EAAAA,KAAA,MAAAK,SAAKgL,EAAKoT,iBAGbpT,EAAKqT,iBACJhe,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,cACJK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CAAKgL,EAAKqT,eAAe,aAG7Bhe,EAAAA,EAAAA,MAAA,MAAAL,SAAA,EACEL,EAAAA,EAAAA,KAAA,MAAAK,SAAI,cACJK,EAAAA,EAAAA,MAAA,MAAAL,SAAA,CACGgL,EAAKsT,WACJ3e,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,kCAAA2E,OAAoCzC,EAAKsT,UAC7ClW,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKsB,GAAanY,MAAO,GAAIoY,QAAQ,WAG7ChS,EAAKuT,YACJ5e,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,6BAAA2E,OAA+BzC,EAAKuT,WACxCnW,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKyB,GAAUtY,MAAO,GAAIoY,QAAQ,WAG1ChS,EAAKwT,iBACJ7e,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,sBAAA2E,OAAwBzC,EAAKwT,gBACjCpW,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKgD,GAAY7Z,MAAO,GAAIoY,QAAQ,WAG5ChS,EAAK0T,kBACJ/e,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,mCAAA2E,OAAqCzC,EAAK0T,iBAC9CtW,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAK2B,GAAaxY,MAAO,GAAIoY,QAAQ,WAG7ChS,EAAK2T,sBACJhf,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACToI,KAAI,gCAAA2E,OAAkCzC,EAAK2T,qBAC3CvW,OAAQ,SAASpI,UAEjBL,EAAAA,EAAAA,KAAA,OAAK8b,IAAK6B,GAAiB1Y,MAAO,GAAIoY,QAAQ,2BAQ5Drd,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,SACfgL,EAAK4T,uBAAyB5T,EAAK4T,sBAAsBjN,QACxDtR,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CACJvK,UAAW,MACXqT,QAAS,EACTjC,UAAQ,EACR3Q,GAAI,CAAEqE,MAAO,OAAQsM,SAAU,QAASlR,SAAA,EAExCL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAAA/G,SAAC,kBACXgL,EAAK4T,sBAAsBnN,KAAI,SAACnL,GAAC,OAChC3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAAG+B,KAAM,SAAnB/B,EAA8B,OAI7C,MAGJjG,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,SAAA,EAChBK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAAAtb,SAAA,EACbL,EAAAA,EAAAA,KAACkf,GAAAA,EAAO,CAACte,GAAI,CAAEue,GAAI,EAAGC,GAAI,EAAGnN,SAAU,MACvCjS,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CACTC,QAAS,KACTsT,UAAW,MACX/Z,GAAI,CAAEqG,OAAQ,QAAS5G,SACxB,aAGDL,EAAAA,EAAAA,KAACkf,GAAAA,EAAO,CAACte,GAAI,CAAEue,GAAI,EAAGC,GAAI,EAAGnN,SAAU,SAEzCjS,EAAAA,EAAAA,KAACqf,EAAAA,EAAS,CAACha,MAAO,CAAEG,OAAQ,IAAKP,MAAO,QAAS5E,SAC9C,SAAA8Q,GAAwB,IAArB3L,EAAM2L,EAAN3L,OAAQP,EAAKkM,EAALlM,MACV,OACEjF,EAAAA,EAAAA,KAAC2T,GAAU,CACTC,UAAW4G,EACX1G,UAAWA,EACXD,SAAU4G,EACVjV,OAAQA,EAAS,GACjBP,MAAOA,GAGb,cAgBd,ECpmBe,SAAS,GAATxD,GAA4D,IAAhD6d,EAAa7d,EAAb6d,cAAepF,EAAQzY,EAARyY,SAAUpG,EAASrS,EAATqS,UAASrS,EAAEb,GAC7D,OACEZ,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,UAIEL,EAAAA,EAAAA,KAAC0b,EAAAA,EAAI,CACHC,WAAS,EACTtW,MAAO,CAAEG,OAAQ,OAAQP,MAAO,OAAQiC,QAAS,GAAIzB,SAAU,QAC/D5E,EAAG,EACH0E,cAAe,SACfgM,SAAU,SACV3Q,GAAI,CACF2e,QAAS,SAACle,GAAK,OAAKA,EAAMC,QAAQuF,WAAW8R,KAAK,EAClDvX,MAAO,SAACC,GAAK,OAAKA,EAAMC,QAAQyF,QAAQyY,YAAY,GACpDnf,SAEDif,GACCtf,EAAAA,EAAAA,KAACyf,GAAU,CACTpU,KAAMiU,EACNpF,SAAUA,EACVpG,UAAWA,KAGb9T,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,SAAE,8BAOZ,C,gCC9Be,SAAS,GAAToB,GAAyC,IAA9B6d,EAAa7d,EAAb6d,cAActI,EAAIvV,EAAJuV,KAAM0I,EAAMje,EAANie,OAC1CnW,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvCoW,EAASlW,EAAA,GAAEmW,EAAYnW,EAAA,GAiB9B,OAhBAmD,EAAAA,EAAAA,YAAU,WACN,IACI,IAAMiT,EAAW,CAAC,EAClB7I,EAAKzC,SAAQ,SAAAlK,GAAC,OAAEwV,EAASxV,EAAW,SAAGA,CAAC,IACxC,IAAMyV,GAAQC,EAAAA,GAAAA,KAAOL,GAAO,SAAArV,GAAC,OAAEA,EAAW,OAAC,IAAEyH,KAAI,SAAAiI,GAAA,IAAAiG,EAAAC,EAAAC,EAAAtb,GAAAwD,EAAAA,EAAAA,GAAA2R,EAAA,GAAEoG,EAACvb,EAAA,GAACwb,EAAGxb,EAAA,SAAK,CACzD1C,MAAiB,QAAZ8d,EAACH,EAASM,UAAE,IAAAH,OAAA,EAAXA,EAAa9d,MACnBwW,QAAQyH,EACR3I,MAAO4I,EAAIpO,OACXmF,IAAgB,QAAb8I,EAAEJ,EAASM,UAAE,IAAAF,OAAA,EAAXA,EAAa9I,IAClBM,KAAiB,QAAbyI,EAAEL,EAASM,UAAE,IAAAD,OAAA,EAAXA,EAAazI,KACtB,IACDmI,EAAaE,EACjB,CAAC,MAAMvV,GAEP,CACJ,GAAE,CAACyM,EAAK0I,KACD1f,EAAAA,EAAAA,KAACqf,EAAAA,EAAS,CAACha,MAAO,CAAEG,OAAQ,OAAQP,MAAO,QAAS5E,SACtD,SAAA8Q,GAAwB,IAArB3L,EAAM2L,EAAN3L,OAAQP,EAAKkM,EAALlM,MACR,OAAOjF,EAAAA,EAAAA,KAAC+W,GAAG,CAACvR,OAAQA,EAAQP,MAAOA,EACvB+R,KAAM2I,EAAW5L,UAAWuL,GAC5C,GAER,C,kDCpBe,SAAS,KACpB,IAAA/V,GAA2BC,EAAAA,EAAAA,YAAUC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA9B1H,EAAM4H,EAAA,GAAC4W,EAAS5W,EAAA,GACvB,OAAO/I,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EAAEL,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,CACZgF,KAAM,QACN9H,GAAI,SAAAS,GAAK,OAAAif,EAAAA,GAAAA,GAAA,CAAKrf,SAAU,WACxBwS,aAAcpS,EAAMkf,MAAM9M,aACtB+M,aAAaC,EAAAA,GAAAA,IAAMpf,EAAMC,QAAQof,OAAOC,MAAO,IAC/CC,YAAY,QAChBra,iBAAiBka,EAAAA,GAAAA,IAAMpf,EAAMC,QAAQof,OAAOC,MAAO,KAC/CE,cAAc,OAClB,UAAW,CACPta,iBAAiBka,EAAAA,GAAAA,IAAMpf,EAAMC,QAAQof,OAAOC,MAAO,MAEvD1b,MAAO,OACH6b,YAAYzf,EAAMmS,QAAQ,GAC1BuN,aAAa1f,EAAMmS,QAAQ,IAC9BnS,EAAM6B,YAAY8d,GAAG,MAAQ,CAC1B3a,WAAYhF,EAAMmS,QAAQ,GAC1ByN,SAAU,IACVhc,MAAO,QACV,EACD0D,WAAW3I,EAAAA,EAAAA,KAACkhB,GAAAA,EAAU,IACtB7Z,QAAS,YACTrG,QAAS,kBAAIqf,GAAU,EAAK,EAAChgB,UAE7BL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAS,YAAYhH,SAAE,iBASnCL,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CAACvB,OAAQA,EAAQE,GAAI,eACpBG,MAAO,SACPF,SAAShC,EAAAA,EAAAA,KAACmhB,GAAAA,EAAW,IACrBze,YAAa,kBAAI2d,GAAU,EAAM,EACjCe,WAAW,EACX3W,SAAU,KACV4W,OAAQ,YAKxB,C,mBC9BmB/N,EAAAA,GAAAA,KAAO,SAACxT,GACIA,EAApByZ,OAAP,IAAkBhZ,GAAKC,EAAAA,EAAAA,GAAIV,EAAKW,IAChC,OAAOT,EAAAA,EAAAA,KAACwZ,GAAAA,GAActZ,EAAAA,EAAAA,GAAA,GAAKK,GAC/B,GAHmB+S,EAGhB,SAAA7R,GAAA,IAAEJ,EAAKI,EAALJ,MAAa,MAAO,CACrBoY,UADchY,EAAN8X,OAC8B,iBAAjB,eACrBlT,WAAY,OACZR,WAAYxE,EAAMyE,YAAYC,OAAO,YAAa,CAC9CG,SAAU7E,EAAMyE,YAAYI,SAASwN,WAE5C,IAkED,OAhEA,SAAmBqG,GAAoB,IAADE,EAAjB5O,EAAI0O,EAAJ1O,KAAM6O,EAAQH,EAARG,SACvB,OAAOxZ,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CAAC8I,QAAS,EAAEnT,SAAA,EACrBL,EAAAA,EAAAA,KAAC0a,GAAW,CAAAra,UACRK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAACnI,QAAS,EAAEnT,SAAA,EAC/BK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,SAAA,EACbL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,KAAKsT,UAAU,MACvB3Z,QAASqK,EAAKyS,WAAa,kBAAM5D,EAAS,CAAC4D,WAAY,CAACzS,EAAKyS,aAAa,EAAG,KAAKzd,SACzFgL,EAAKyS,aAETzS,EAAKiW,gBAAiB5gB,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAAChG,MAAM,iBAAiByc,cAAY,EAAAxd,SAAA,CAAC,IAAEgL,EAAKiW,iBAC7EjW,EAAKkW,mBAAoBvhB,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAACjQ,MAAOS,EAAKkW,iBAAkB7Y,KAAM,aAE/D2C,EAAKoQ,cAAe/a,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAA5T,SAAA,EAC3BK,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CAACzQ,GAAI,CAAC2G,KAAM,WAAYjC,QAAS,QAAQjF,SAAA,EACzCL,EAAAA,EAAAA,KAAC6b,GAAAA,EAAM,CAAC,aAAW,SACXC,IAAKzQ,EAAKoQ,YAAYM,iBACtBnb,GAAI,CAACob,GAAI,GAAG3b,SAAEgL,EAAKoQ,YAAYQ,YAAY,MACnDvb,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACIL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAQ,KAAKjG,MAAO,eAAef,SAAEgL,EAAKoQ,YAAYQ,eAClEvb,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACC,QAAQ,YAAWhH,SAAA,CAAC,QAAqC,QAAhC4Z,EAAC5O,EAAKoQ,YAAYe,sBAAc,IAAAvC,EAAAA,EAAI,eAGhF5O,EAAKoQ,YAAYgB,eAAkBpR,EAAKoQ,YAAYgB,cAAc3K,KAAI,SAAAnL,GAAC,OAAI3G,EAAAA,EAAAA,KAAC6a,GAAAA,EAAI,CAASjQ,MAAOjE,EAC3B+B,KAAM,SADW/B,EACD,aAIlG3G,EAAAA,EAAAA,KAAC0a,GAAW,CAAAra,UACRK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,SAAA,EACdK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAAAtb,SAAA,EACXL,EAAAA,EAAAA,KAACkf,GAAAA,EAAO,CAACte,GAAI,CAACue,GAAI,EAAGC,GAAI,EAAGnN,SAAU,MACtCjS,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAS,KAAMsT,UAAW,MAAO/Z,GAAI,CAACqG,OAAQ,QAAQ5G,SAAC,oBACnEL,EAAAA,EAAAA,KAACkf,GAAAA,EAAO,CAACte,GAAI,CAACue,GAAI,EAAGC,GAAI,EAAGnN,SAAU,SAE1CjS,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UACdL,EAAAA,EAAAA,KAAA,UAAQqd,QAAQ,OACRvB,IAAG,wCAAAhO,OAA0CzC,EAAKsT,UAClD1Z,MAAO,OAAQO,OAAO,KAAKgc,YAAY,IACvC,oBAAkB,SAEpCnW,EAAKoW,aAAepW,EAAK0T,mBAAoBre,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,CAC1CgL,EAAKoW,cAAezhB,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UACnCL,EAAAA,EAAAA,KAAA,UAAQqd,QAAQ,OACRvB,IAAKzQ,EAAKoW,YAAYC,QAAQ,YAAa,mBAC3Czc,MAAO,OAAQO,OAAO,KAAKgc,YAAY,IACvC,oBAAkB,QAE7BnW,EAAK0T,kBAAmB/e,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UACvCL,EAAAA,EAAAA,KAAA,UAAQiF,MAAO,OAAQO,OAAQ,OACvB6X,QAAQ,OACRvB,IAAG,0CAAAhO,OAA4CzC,EAAK0T,iBACpD7c,MAAM,uBAAuBsf,YAAY,IACzCG,MAAM,sGACNC,iBAAe,gBASvC,EC5Fe,SAAS,GAATngB,GAA2C,IAAhC6d,EAAa7d,EAAb6d,cAAcpF,EAAQzY,EAARyY,SAAQzY,EAACb,GAE7C,OAAQZ,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,UACAL,EAAAA,EAAAA,KAAC0b,EAAAA,EAAI,CAACC,WAAS,EAACtW,MAAO,CAACG,OAAO,OAAQP,MAAM,OAAOiC,QAAQ,GAAGzB,SAAS,QAClE5E,EAAG,EAAG0E,cAAe,SAAUgM,SAAU,SACzC3Q,GAAI,CAAC2e,QAAQ,SAAAle,GAAK,OAAEA,EAAMC,QAAQuF,WAAW8R,KAAK,EAAEvX,MAAO,SAAAC,GAAK,OAAGA,EAAMC,QAAQyF,QAAQyY,YAAY,GAAEnf,SACxGif,GACGtf,EAAAA,EAAAA,KAAC6hB,GAAU,CAACxW,KAAMiU,EAAepF,SAAUA,KAAcla,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,SAAE,8BAK/E,C,uFCXe,SAAS,GAAToB,GAAmB,IAARoB,EAAIpB,EAAJoB,KACtB0G,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvClB,EAAQoB,EAAA,GAAEnB,EAAWmB,EAAA,GAC5BqY,GAAqCC,EAAAA,GAAAA,aAA7BC,EAASF,EAATE,UAASC,EAAAH,EAAEI,OAAAA,OAAM,IAAAD,EAAG,KAAIA,EAC1B5e,EAAOkF,QAAQF,GAQrB,OAAO3H,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EAAEK,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAChBmB,MAAOW,EAAKc,cAAc,CAAE5B,GAAI,aAChCf,QATgB,SAAC6H,GACjBP,EAAYO,EAAMC,cACtB,EAOyBzI,SAAA,EAErBL,EAAAA,EAAAA,KAACmiB,GAAAA,EAAY,IAAE,KAACniB,EAAAA,EAAAA,KAAA,QAAMqF,MAAO,CAACsQ,SAAS,QAAQmL,YAAY,EAAED,cAAc,aAAaxgB,SAAE6hB,QAE9FliB,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CACDlH,GAAG,gBACH,kBAAgB,yBAChBsG,SAAUA,EACVhF,KAAMA,EACN/C,QAfgB,WAChBgI,EAAY,KAChB,EAcI8Z,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdjiB,SAGEmiB,GAAAA,EAAW1Q,KAAI,SAAAuD,GAAC,OAAE3U,EAAAA,EAAAA,MAACwI,EAAAA,EAAQ,CAEvBuZ,SAAUpN,EAAE6M,SAAWA,EACvBlhB,QAAS,kBAAIghB,EAAU3M,EAAE6M,OAAO,EAAC7hB,SAAA,EAEjCL,EAAAA,EAAAA,KAACmiB,GAAAA,EAAY,CAAC9c,MAAO,CAAC0b,aAAa,KAAK,IAAEle,EAAKc,cAAc,CAAE5B,GAAIsT,EAAE6M,WAJhE7M,EAAE6M,OAKA,QAIvB,C,2BCxCe,SAAS,GAATzgB,GAAmB,IAARoB,EAAIpB,EAAJoB,KACtB0G,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvClB,EAAQoB,EAAA,GAAEnB,EAAWmB,EAAA,GAC5BqY,GAAqCC,EAAAA,GAAAA,aAC/B1e,GADWye,EAATE,UAASF,EAAEI,OACN3Z,QAAQF,IACfqa,GAAWC,EAAAA,EAAAA,MAcjB,OAAOjiB,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EACHL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACmB,MAAOW,EAAKc,cAAc,CAAC5B,GAAI,cAC/Bf,QARI,SAAC6H,GACjBP,EAAYO,EAAMC,cACtB,EAMqCzI,UAC7BL,EAAAA,EAAAA,KAAC4iB,GAAAA,EAAU,OAEf5iB,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CACDlH,GAAG,iBACH,kBAAgB,yBAChBsG,SAAUA,EACVhF,KAAMA,EACN/C,QAbY,WAChBgI,EAAY,KAChB,EAYQ8Z,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdjiB,UAEFL,EAAAA,EAAAA,KAACqR,EAAAA,EAAG,CAACzQ,GAAI,CAACkgB,YAAY,EAAEC,aAAa,GAAG1gB,UACpCL,EAAAA,EAAAA,KAAC6iB,GAAAA,EAAe,CAAC3gB,MAAOW,EAAKc,cAAc,CAAC5B,GAAI,cAAe+gB,SAlCpD,SAACC,GAEhBL,EADAK,EACS,CAAE7O,KAAM8O,EAAAA,IAER,CAAE9O,KAAM+O,EAAAA,IACzB,UAiCJ,C,wCC/Ce,SAAS,GAATxhB,GAAwC,IAA7BoB,EAAIpB,EAAJoB,KAAKqgB,EAAWzhB,EAAXyhB,YAAYJ,EAAQrhB,EAARqhB,SACvCvZ,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvClB,EAAQoB,EAAA,GAAEnB,EAAWmB,EAAA,GACtBpG,EAAOkF,QAAQF,GAQrB,OAAO3H,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EAAEL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAChBmB,MAAOW,EAAKc,cAAc,CAAE5B,GAAI,WAChCf,QATgB,SAAC6H,GACjBP,EAAYO,EAAMC,cACtB,EAOyBzI,UAErBL,EAAAA,EAAAA,KAACmjB,GAAAA,EAAkB,OAEvBnjB,EAAAA,EAAAA,KAACiJ,EAAAA,EAAI,CACDlH,GAAG,cACHsG,SAAUA,EACVhF,KAAMA,EACN/C,QAdgB,WAChBgI,EAAY,KAChB,EAaI8Z,aAAc,CACVC,SAAU,MACVC,WAAY,QAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,QACdjiB,SAGE+N,OAAOC,KAAK6U,GAAapR,KAAI,SAAA0C,GAAC,OAAE9T,EAAAA,EAAAA,MAACwI,EAAAA,EAAQ,CAErClI,QAAS,kBAAI8hB,EAAStO,EAAE0O,EAAY1O,IAAI0O,EAAY1O,GAAG4O,IAAI,EAAC/iB,SAAA,EAE5DL,EAAAA,EAAAA,KAACqjB,GAAAA,EAAY,CAAAhjB,UACTL,EAAAA,EAAAA,KAACsjB,GAAAA,EAAQ,CAACC,QAASL,EAAY1O,GAAG4O,QACtBvgB,EAAKc,cAAc,CAAE5B,GAAImhB,EAAY1O,GAAGG,QALnDH,EAME,QAIvB,CC9Be,SAAS,GAAT/S,GAAoD,IAAzCyhB,EAAWzhB,EAAXyhB,YAAWM,EAAA/hB,EAACgiB,oBAAAA,OAAmB,IAAAD,EAAC,WAAK,EAACA,EACtD3gB,GAAOC,EAAAA,EAAAA,KACP4f,GAAWC,EAAAA,EAAAA,MACjBe,GAAwCjf,EAAAA,EAAAA,YAAhCkf,EAAeD,EAAfC,gBAAiBC,EAAUF,EAAVE,WACzBra,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA7Csa,EAAWpa,EAAA,GAAEqa,EAAcra,EAAA,GAClCG,GAAwCJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAShDma,GATala,EAAA,GAAiBA,EAAA,GAST,WACvBia,EAAe,KACnB,GAMA,OAAOpjB,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EACHL,EAAAA,EAAAA,KAAA,OAAK8b,IAAKkI,EAAQ,OAA0B3G,QAAQ,OAAOhY,MAAO,CAACG,OAAO,OAAOP,MAAM,QACvFvE,EAAAA,EAAAA,MAAA,QAAM2E,MAAO,CAACiB,YAAY,GAAGjG,SAAA,CAAC,IAAE+I,UAChCpJ,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACmB,MAAO,WAAYwG,KAAM,QAAS9H,GAAI,CAAC6Y,UAAU,yBAC7DzY,QAAS,kBAAI0hB,EAAS,CAAExO,KAAM+P,EAAAA,GAAUC,QAAQ,GAAO,EAAC7jB,UACpDL,EAAAA,EAAAA,KAACmkB,GAAAA,EAAQ,CAACxO,SAAS,eAEvBjV,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CAACzQ,GAAI,CAAEqR,SAAU,EAAG3M,QAAS,CAAEsW,GAAI,OAAQwI,GAAI,SAAW/jB,SAAA,EAC1DL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACP2H,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACd1H,QA5Bc,SAAC6H,GACvBib,EAAejb,EAAMC,cACzB,EA2BY1H,MAAM,UAASf,UAEfL,EAAAA,EAAAA,KAACqkB,GAAAA,EAAQ,OAEb3jB,EAAAA,EAAAA,MAACuI,EAAAA,EAAI,CACDlH,GAAG,cACHsG,SAAUwb,EACVzB,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBgC,aAAW,EACX/B,gBAAiB,CACbF,SAAU,MACVC,WAAY,QAEhBjf,KAAMkF,QAAQsb,GACdvjB,QAASyjB,EACTnjB,GAAI,CACA0E,QAAS,CAAEsW,GAAI,QAASwI,GAAI,SAC9B/jB,SAAA,EAGFL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS+iB,EAAmB1jB,UAClCK,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACmd,UAAU,SAAQlkB,SAAA,EAC1BL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACPmB,MAAO,eACPlB,QAAS,WACL2iB,EAAgB,aACpB,EAAEtjB,SAEDujB,GACG5jB,EAAAA,EAAAA,KAACwkB,GAAAA,EAAkB,KAEnBxkB,EAAAA,EAAAA,KAACykB,GAAAA,EAAe,MAGvBb,GACG5jB,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,SAAE,gBAEFL,EAAAA,EAAAA,KAAAwI,EAAAA,SAAA,CAAAnI,SAAE,oBAIdL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS+iB,EAAmB1jB,UAClCK,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACmd,UAAU,SAAQlkB,SAAA,EAC1BL,EAAAA,EAAAA,KAAC0kB,GAAU,CAAC7hB,KAAMA,EAAMqgB,YAAaA,EAAaJ,SAAUW,IAAsB,eAI1FzjB,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS+iB,EAAmB1jB,UAClCK,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAACmd,UAAU,SAAQlkB,SAAA,EAC1BL,EAAAA,EAAAA,KAAC2kB,GAAY,CAAC9hB,KAAMA,IAAO,kBAGxB7C,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAClI,QAAS+iB,EAAmB1jB,UAC7CL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACmd,UAAU,SAAQlkB,UAC1BL,EAAAA,EAAAA,KAAC4kB,GAAY,CAAC/hB,KAAMA,eAKpCnC,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CAACzQ,GAAI,CAAEqR,SAAU,EAAG3M,QAAS,CAAEsW,GAAI,OAAQwI,GAAI,SAAW/jB,SAAA,EAC1DL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CACPmB,MAAO,eACPlB,QAAS,WACL2iB,EAAgB,aACpB,EAAEtjB,SAEDujB,GACG5jB,EAAAA,EAAAA,KAACwkB,GAAAA,EAAkB,KAEnBxkB,EAAAA,EAAAA,KAACykB,GAAAA,EAAe,OAIxBzkB,EAAAA,EAAAA,KAAC0kB,GAAU,CAAC7hB,KAAMA,EAAMqgB,YAAaA,EAAaJ,SAAUW,KAC5DzjB,EAAAA,EAAAA,KAAC2kB,GAAY,CAAC9hB,KAAMA,KACpB7C,EAAAA,EAAAA,KAAC4kB,GAAY,CAAC/hB,KAAMA,SAGhC,C,wCClIe,SAAS,GAATpB,GAAwB,IAAbojB,EAASpjB,EAATojB,UACtB,OAAO7kB,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAAC9a,GAAI,CAACK,SAAS,WAAWuE,OAAO,QAAQnF,UACjDL,EAAAA,EAAAA,KAAC8kB,GAAAA,EAAW,CAACD,UAAWA,EAAWE,YAAY,KAEvD,C,4BCJe,SAAS,GAATtjB,GAA2B,IAAf4J,EAAI5J,EAAJ4J,KAAMiJ,EAAI7S,EAAJ6S,KACzBjT,GAAQ0B,EAAAA,EAAAA,KACdwG,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA/Byb,EAAKvb,EAAA,GAAEwb,EAAQxb,EAAA,GAgBtB,OAfAmD,EAAAA,EAAAA,YAAU,WACRqY,EAAS,CACP,CACElN,EAAG1M,EACH6I,KAAM,YACN+D,OAAQ,CACN7W,MAAO,wBACPyT,KAAM,CACJzT,MAAO,sBACP6D,MAAO,MAKjB,GAAG,CAACoG,KAEFrL,EAAAA,EAAAA,KAACkW,GAAAA,EAAI,CACH7K,KAAM2Z,EACNhQ,OAAQ,CACNkQ,MAAO,CAAEhjB,MAAOoS,GAChB6Q,MAAO,CAAEC,UAAU,EAAOC,gBAAgB,EAAOC,UAAU,GAC3D/P,KAAM,CACJC,OAAQnU,EAAMoU,WAAWC,WACzBhN,KAAMrH,EAAMoU,WAAWE,SACvBvU,MAAOC,EAAMC,QAAQsU,KAAK7O,SAE5BE,OAAQ,CAAEN,EAAG,GAAIwN,EAAG,GAAIkB,EAAG,GAAIC,EAAG,IAClCJ,cAAe7T,EAAMC,QAAQuF,WAAW8R,MACxCxD,aAAc,iBAEhB9P,MAAO,CAAEJ,MAAO,OAAQO,OAAQ,QAChC2Q,OAAQ,CACNC,aAAa,EACbC,qBAAsB,CACpBC,OAAQ,MACRzI,SAAU,YACV0I,MAAO,GAETC,uBAAuB,EACvBC,gBAAiB,oCAIzB,CC9Ce,SAAS,GAAThV,GAUX,IATF4J,EAAI5J,EAAJ4J,KACAka,EAAK9jB,EAAL8jB,MACAC,EAAK/jB,EAAL+jB,MACAhgB,EAAM/D,EAAN+D,OACAP,EAAKxD,EAALwD,MACAwgB,EAAUhkB,EAAVgkB,WACAvL,EAAQzY,EAARyY,SACAwL,EAAOjkB,EAAPikB,QACAC,EAAOlkB,EAAPkkB,QAEMtkB,GAAQ0B,EAAAA,EAAAA,KACdwG,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA/Byb,EAAKvb,EAAA,GAAEwb,EAAQxb,EAAA,IACtBmD,EAAAA,EAAAA,YAAU,WAAO,IAADgZ,EACRC,EAAQ,CACZ,CACE9N,EAAG1M,EAAK0M,EACRC,EAAG3M,EAAK2M,EACR9D,KAAM,UACNtN,KAAM,UACNqR,OAAQ,CACN7W,MAAiB,QAAZwkB,EAAEva,EAAKjK,aAAK,IAAAwkB,EAAAA,OAAIjgB,EACrB+C,KAAM,KAIRid,GACFE,EAAMjR,KAAK,CACTmD,EAAG4N,EAAQ5N,EACXC,EAAG2N,EAAQ3N,EACX9D,KAAM,UACNtN,KAAM,UACNqR,OAAQ,CACN7W,MAAO,gBACPsH,KAAM,EACNmM,KAAM,CACJzT,MAAO,QACP6D,MAAO,IAGXiT,UAAW,SAEf+M,EAASY,EACX,GAAG,CAACxa,EAAMsa,IAQV,OACE3lB,EAAAA,EAAAA,KAACkW,GAAAA,EAAI,CACH7K,KAAM2Z,EACNhQ,OAAQ,CACNkQ,MAAO,CAAEhjB,MAAOqjB,GAChBJ,MAAO,CAAEjjB,MAAOsjB,GAChBjQ,KAAM,CACJC,OAAQnU,EAAMoU,WAAWC,WACzBhN,KAAMrH,EAAMoU,WAAWE,SACvBvU,MAAOC,EAAMC,QAAQsU,KAAK7O,SAE5BqO,WAAW,EACX5P,OAAQA,EACRP,MAAOA,EACPgC,OAAQ,CAAEN,EAAG,GAAIwN,EAAG,IACpBe,cAAe7T,EAAMC,QAAQuF,WAAW8R,MACxCxD,aAAc,gBACdc,YAAY,GAEd5Q,MAAO,CAAEJ,MAAO,OAAQO,OAAQ,QAChC2Q,OAAQ,CACNC,aAAa,EACbC,qBAAsB,CACpBC,OAAQ,MACRzI,SAAU,YACV0I,MAAO,GAETC,uBAAuB,EACvBC,gBAAiB,mCAEnBgP,WArCmB,SAAC5c,GACtB,IAAMid,EAASjd,EAAMid,OACfrD,EAAW,CAAC,EAClBqD,EAAOvR,SAAQ,SAACwR,GAAK,OAAMtD,EAASsD,EAAM1a,KAAKkF,MAAO,CAAI,IAE1DkV,EAAWhD,EACb,EAgCIzhB,QAAS,SAAC6H,GACR,GAAIA,EAAMid,QAAUjd,EAAMid,OAAO9T,OAAS,EAAG,CAC3C,IAAM+T,EAAQld,EAAMid,OAAO,GAC3B5L,EAAS7O,EAAKA,KAAK0a,EAAMC,YAC3B,CACF,EACAN,QAAS,SAAC7c,GACR,GAAIA,EAAMid,QAAUjd,EAAMid,OAAO9T,OAAS,EAAG,CAC3C,IAAMgU,EAAand,EAAMid,OAAO,GAAGE,WACnCN,EAAQra,EAAKA,KAAK2a,GACpB,CACF,GAGN,CCWA,OA1GA,SAAuBvkB,GAOnB,IANF4J,EAAI5J,EAAJ4J,KACA4a,EAAUxkB,EAAVwkB,WACA/L,EAAQzY,EAARyY,SACAwL,EAAOjkB,EAAPikB,QACAC,EAAOlkB,EAAPkkB,QACAO,EAAQzkB,EAARykB,SAEA3c,GAAwBC,EAAAA,EAAAA,UAAS,CAC/BuO,EAAGkO,EAAW,GAAGtR,IACjBqD,EAAGiO,EAAW,GAAGtR,MACjBlL,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAHK4c,EAAI1c,EAAA,GAAE2c,EAAO3c,EAAA,GAIpBG,GAAsCJ,EAAAA,EAAAA,UAAS,CAAEuO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,KAAKxB,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAAnEyc,EAAWxc,EAAA,GAAEyc,EAAczc,EAAA,GAClCG,GAAkCR,EAAAA,EAAAA,UAAS,CAAEuO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,KAAKpB,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA/D+J,EAAS9J,EAAA,GAAEsc,EAAYtc,EAAA,GACxBuc,GAAgBvR,EAAAA,EAAAA,UAAQ,WAC5B,IAAMpU,EAAI,CAAC,EAIX,OAHAolB,EAAW1R,SAAQ,SAAClK,GAClBxJ,EAAEwJ,EAAEsK,KAAOtK,EAAEO,KACf,IACO/J,CACT,GAAG,CAAColB,IAqBJ,OApBArZ,EAAAA,EAAAA,YAAU,WACR,IAAMyZ,EAAc,CAAEtO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,GAAIjK,MAAO,IACrDiK,EAAKkJ,SAAQ,SAAClK,GACZgc,EAAYtO,EAAEnD,KAAKvK,EAAE8b,EAAKpO,IAC1BsO,EAAYrO,EAAEpD,KAAKvK,EAAE8b,EAAKnO,IAC1BqO,EAAYhb,KAAKuJ,KAAKvK,GACtBgc,EAAYjlB,MAAMwT,KAAKsR,EAAS7b,GAClC,IAEAic,EAAeD,EACjB,GAAG,CAACF,EAAM9a,EAAM6a,KAChBtZ,EAAAA,EAAAA,YAAU,WAEN2Z,EADEZ,EACW,CACX5N,EAAG,CAAC4N,EAAQQ,EAAKpO,IACjBC,EAAG,CAAC2N,EAAQQ,EAAKnO,IACjB3M,KAAM,CAACsa,IAEO,CAAE5N,EAAG,GAAIC,EAAG,GAAI3M,KAAM,IAC1C,GAAG,CAAC8a,EAAMR,KAERjlB,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAACxb,UAAW,SAAUS,GAAI,CAAEC,EAAG,GAAIR,SAAA,EAChDK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAAC1H,MAAI,EAACT,QAAS,EAAEnT,SAAA,EAC9BL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfL,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACR5I,GAAG,yBACH0kB,QAAM,EACN7b,MAAM,SACNG,MAAOob,EAAKpO,EACZ1Q,QAAQ,WACRqB,KAAK,QACL0Y,WAAS,EACT0B,SAAU,SAACja,GACTud,GAAOlmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIimB,GAAI,IAAEpO,EAAGlP,EAAMJ,OAAOsC,QACrC,EAAE1K,SAED4lB,EAAWnU,KAAI,SAAAiI,GAAA,IAAGpF,EAAGoF,EAAHpF,IAAK/J,EAAKmP,EAALnP,MAAK,OAC3B5K,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAoB6B,MAAO4J,EAAItU,SACrCuK,GAAK,OAAAkD,OADc6G,GAEX,SAIjB3U,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfL,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACR5I,GAAG,yBACH0kB,QAAM,EACN7b,MAAM,SACNG,MAAOob,EAAKnO,EACZtP,KAAK,QACLrB,QAAQ,WACR+Z,WAAS,EACT0B,SAAU,SAACja,GACTud,GAAOlmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIimB,GAAI,IAAEnO,EAAGnP,EAAMJ,OAAOsC,QACrC,EAAE1K,SAED4lB,EAAWnU,KAAI,SAAAlN,GAAA,IAAG+P,EAAG/P,EAAH+P,IAAK/J,EAAKhG,EAALgG,MAAK,OAC3B5K,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAoB6B,MAAO4J,EAAItU,SACrCuK,GAAK,OAAAkD,OADc6G,GAEX,YAKnB3U,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAIhb,GAAI,CAAEK,SAAU,YAAaZ,UAC9CL,EAAAA,EAAAA,KAACqf,EAAAA,EAAS,CAACha,MAAO,CAAEG,OAAQ,OAAQP,MAAO,QAAUyhB,eAAa,EAAArmB,SAC/D,SAAA8Q,GAASA,EAAN3L,OAAqB,IAAbP,EAAKkM,EAALlM,MACV,OACEjF,EAAAA,EAAAA,KAAC2mB,GAAW,CACVtb,KAAMgb,EACNd,MAAOiB,EAAcL,EAAKpO,GAC1ByN,MAAOgB,EAAcL,EAAKnO,GAC1B/S,MAAOA,EACPO,OAAQP,EACRiV,SAAUA,EACVwL,QAASA,EACTC,QAAS5R,GAGf,QAKV,E,wECoCA,OAnIA,SAAgBtS,GAA8D,IAA3D4J,EAAI5J,EAAJ4J,KAAM4a,EAAUxkB,EAAVwkB,WAAY/L,EAAQzY,EAARyY,SAAUwL,EAAOjkB,EAAPikB,QAASC,EAAOlkB,EAAPkkB,QAASO,EAAQzkB,EAARykB,SAC/D3c,GAAwBC,EAAAA,EAAAA,UAASyc,EAAWnU,KAAI,SAACzH,GAAC,OAAKA,EAAEsK,GAAG,KAAElL,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvD4c,EAAI1c,EAAA,GAAE2c,EAAO3c,EAAA,GACpBG,GAAsCJ,EAAAA,EAAAA,UAAS,CAAEuO,EAAG,GAAIC,EAAG,KAAKnO,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAAzDyc,EAAWxc,EAAA,GAAEyc,EAAczc,EAAA,GAClCG,GAAkCR,EAAAA,EAAAA,UAAS,CAAEuO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,KAAKpB,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAA/D+J,EAAS9J,EAAA,GAAEsc,EAAYtc,EAAA,GAC9B2c,GAA0Bpd,EAAAA,EAAAA,YAAUqd,GAAAze,EAAAA,EAAAA,GAAAwe,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBL,GAAgBvR,EAAAA,EAAAA,UAAQ,WAC5B,IAAMpU,EAAI,CAAC,EAIX,OAHAolB,EAAW1R,SAAQ,SAAClK,GAClBxJ,EAAEwJ,EAAEsK,KAAOtK,CACb,IACOxJ,CACT,GAAG,CAAColB,IAiEJ,OAhEArZ,EAAAA,EAAAA,YAAU,WACR,IAAMoa,EAAa,GACbC,EAAY,GAClB,IACE5b,EAAKkJ,SAAQ,SAAClK,GACZ,IAAI6c,GAAQ,EACNrmB,EAAI,GACVslB,EAAK5R,SAAQ,SAACI,GACRwS,MAAM9c,EAAEsK,IAAOuS,GAAQ,EACtBrmB,EAAE+T,KAAKvK,EAAEsK,GAChB,IACIuS,IACFF,EAAWpS,KAAK/T,GAChBomB,EAAUrS,KAAKvK,GAEnB,IAEA,IAAM+c,EAAM,IAAIC,GAAAA,EAAIL,GACdM,EAASF,EAAIG,QAAQP,GAErBQ,EAAsBF,EAAOjc,KAAKyG,KAAI,SAAC3B,GAAG,OAAKA,EAAI,EAAE,IACrDsX,EAAsBH,EAAOjc,KAAKyG,KAAI,SAAC3B,GAAG,OAAKA,EAAI,EAAE,IACrDuX,EAAST,EAAUnV,KAAI,SAAC3B,GAAG,OAAK+V,EAAS/V,EAAI,IAC7CwX,EAAUP,EAAIQ,uBACdvB,EAAc,CAClBtO,EAAGyP,EACHxP,EAAGyP,EACHrmB,MAAOsmB,EACPrc,KAAM4b,EACN1B,MAAM,QAADzX,OAAUwK,KAAKuP,MAAmB,IAAbF,EAAQ,IAAa,GAAE,MACjDnC,MAAM,QAAD1X,OAAUwK,KAAKuP,MAAmB,IAAbF,EAAQ,IAAa,GAAE,OAEnDZ,EAASK,GACTd,EAAeD,EACjB,CAAE,MAAO9b,GACP+b,EAAe,CAAEvO,EAAG,GAAIC,EAAG,GAAIuN,MAAO,MAAOC,MAAO,QACpDuB,EAAS,KACX,CACF,GAAG,CAAC1b,EAAM8a,KACVvZ,EAAAA,EAAAA,YAAU,WACR,GAAI+Y,GAAWmB,EACb,IAEE,IAAMjmB,EAAI,GACNqmB,GAAQ,EAKZ,GAJAf,EAAK5R,SAAQ,SAACI,GACRwS,MAAMxB,EAAQhR,IAAOuS,GAAQ,EAC5BrmB,EAAE+T,KAAK+Q,EAAQhR,GACtB,KACIuS,EAQF,MAAMY,MAAM,uBAPZ,IAAMhnB,EAAIgmB,EAAMS,QAAQ,CAAC1mB,IACzB0lB,EAAa,CACXxO,EAAG,CAACjX,EAAEuK,KAAK,GAAG,IACd2M,EAAG,CAAClX,EAAEuK,KAAK,GAAG,IACdA,KAAM,CAACsa,IAKb,CAAE,MAAOpb,GACPgc,EAAa,CAAExO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,IACrC,MACGkb,EAAa,CAAExO,EAAG,GAAIC,EAAG,GAAI3M,KAAM,IAC1C,GAAG,CAAC8a,EAAMR,EAASmB,KAEjBpmB,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CACHC,WAAS,EACTxb,UAAW,SACXS,GAAI,CAAEK,SAAU,WAAYgE,MAAO,QAAS5E,SAAA,EAE5CL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAA5T,UACRK,EAAAA,EAAAA,MAACqnB,GAAAA,EAAW,CAACnnB,GAAI,CAAEC,EAAG,EAAGue,GAAI,EAAG3U,SAAU,KAAMpK,SAAA,EAC9CL,EAAAA,EAAAA,KAACgoB,GAAAA,EAAU,CAACjmB,GAAG,+BAA8B1B,SAAC,SAE9CL,EAAAA,EAAAA,KAACioB,GAAAA,EAAM,CACLlmB,GAAG,oBACHmmB,UAAQ,EACRnd,MAAOob,EACPgC,OAAOnoB,EAAAA,EAAAA,KAACooB,GAAAA,EAAa,CAACxd,MAAM,WAAWlC,KAAK,UAC5C2f,YAAa,SAAC5F,GAAQ,OACpBA,EAAS3Q,KAAI,SAACzH,GAAC,IAAAie,EAAA,OAAqB,QAArBA,EAAK9B,EAAcnc,UAAE,IAAAie,OAAA,EAAhBA,EAAkB1d,KAAK,IAAEqS,KAAK,KAAK,EAEzD6F,SAAU,SAACja,GACT,IACYkC,EACRlC,EADFJ,OAAUsC,MAEZqb,EAAyB,kBAAVrb,EAAqBA,EAAMuQ,MAAM,KAAOvQ,EACzD,EAAE1K,SAED4lB,EAAWnU,KAAI,SAAAiI,GAAA,IAAGpF,EAAGoF,EAAHpF,IAAK/J,EAAKmP,EAALnP,MAAK,OAC3BlK,EAAAA,EAAAA,MAACwI,EAAAA,EAAQ,CAAsB6B,MAAO4J,EAAItU,SAAA,EACxCL,EAAAA,EAAAA,KAACsjB,GAAAA,EAAQ,CAACC,QAAS4C,EAAKoC,QAAQ5T,IAAQ,KACxC3U,EAAAA,EAAAA,KAACwoB,GAAAA,EAAY,CAACzhB,QAAS6D,MAAS,SAAAkD,OAFV6G,GAGb,YAKnB3U,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAIhb,GAAI,CAAEK,SAAU,YAAaZ,UAC9CL,EAAAA,EAAAA,KAACqf,EAAAA,EAAS,CAACha,MAAO,CAAEG,OAAQ,OAAQP,MAAO,QAAUyhB,eAAa,EAAArmB,SAC/D,SAAAuE,GAASA,EAANY,OAAqB,IAAbP,EAAKL,EAALK,MACV,OACEjF,EAAAA,EAAAA,KAAC2mB,GAAW,CACVtb,KAAMgb,EACNd,MAAOc,EAAYd,MACnBC,MAAOa,EAAYb,MACnBvgB,MAAOA,EACPO,OAAQP,EACRiV,SAAUA,EACVwL,QAASA,EACTC,QAAS5R,GAGf,QAKV,EC9Ie,SAAS0U,GAAQhnB,GAAwB,IAArB4J,EAAI5J,EAAJ4J,KAAM0Z,EAAUtjB,EAAVsjB,WACjC2D,GAAazT,EAAAA,EAAAA,UAAQ,WACzB,OAAO0B,EAAAA,GAAAA,OACJX,MAAM,CAAC,GAAK,IACZa,QACCU,EAAAA,GAAAA,KAAOlM,GAAM,SAAChB,GACZ,OAAQ,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGmN,KACZ,IAEN,GAAG,CAACnM,IAEJ,OACE3K,EAAAA,EAAAA,MAACgb,EAAAA,EAAI,CAACC,WAAS,EAAAtb,SAAA,EACbL,EAAAA,EAAAA,KAAC0b,EAAAA,EAAI,CAACzH,MAAI,EAACrT,GAAI,CAAE6J,SAAU,IAAK8Z,UAAW,SAAUlkB,UACnDL,EAAAA,EAAAA,KAAC0K,EAAAA,EAAK,CACJ7J,EAAG,EACHD,GAAI,CACFwF,UAAW2e,EAAa,KAAO,OAC/B4D,UAAW,QACXtoB,SAEDgL,EAAKyG,KAAI,SAACzH,GAAC,OACVrK,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAAkBC,QAAS,YAAYhH,SAC/CgK,EAAS,OADKA,EAAS,MAEb,SAInBrK,EAAAA,EAAAA,KAAC0b,EAAAA,EAAI,CAACzH,MAAI,EAAChC,SAAU,EAAE5R,UACrBL,EAAAA,EAAAA,KAAC0K,EAAAA,EAAK,CACJ7J,EAAG,EACHD,GAAI,CACFwF,UAAW2e,EAAa,KAAO,OAC/B4D,UAAW,QACXtoB,SAEDgL,EAAKyG,KAAI,SAACzH,GAAC,IAAAue,EAAA,OACVloB,EAAAA,EAAAA,MAAC0G,EAAAA,EAAU,CAAkBC,QAAS,YAAYhH,SAAA,EAChDL,EAAAA,EAAAA,KAAA,OACEqF,MAAO,CACLJ,MAAM,GAAD6I,OAAK,IAAyB,QAAvB8a,EAAIF,EAAWre,EAAEmN,cAAM,IAAAoR,EAAAA,EAAI,GAAE,KACzCpjB,OAAQ,GACRe,gBAAiB8D,EAAEjJ,MACnBkE,QAAS,eACTgB,YAAa,KAGhB+D,EAAEmN,QAVYnN,EAAS,MAWb,UAMzB,CCmIA,OAtKA,SAAiB5I,GAAyD,IAAtDojB,EAASpjB,EAATojB,UAAWxZ,EAAI5J,EAAJ4J,KAAMwd,EAAMpnB,EAANonB,OAAQC,EAAcrnB,EAAdqnB,eAAgB5O,EAAQzY,EAARyY,SAC3D3Q,GAAmCC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAxCwf,EAAUtf,EAAA,GAAEuf,EAAYvf,EAAA,GAC/BG,GAAgCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAArCqf,EAAQpf,EAAA,GAAEqf,EAAWrf,EAAA,GAC5BG,GAAgCR,EAAAA,EAAAA,UAAS6P,GAAe,GAAG1E,KAAI1K,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAAxDmf,EAAQlf,EAAA,GAAEmf,EAAWnf,EAAA,GAC5B2c,GAA8Bpd,EAAAA,EAAAA,UAAS,MAAKqd,GAAAze,EAAAA,EAAAA,GAAAwe,EAAA,GAArCjB,EAAOkB,EAAA,GAAEwC,EAAUxC,EAAA,IAC1Bja,EAAAA,EAAAA,YAAU,WACR,IAAMmc,EAAa9P,GAAWnH,KAAI,SAAAiI,GAAA,IAAGpF,EAAGoF,EAAHpF,IAAK/J,EAAKmP,EAALnP,MAAK,MAAQ,CACrD+J,IAAAA,EACA/J,MAAAA,EACAS,KAAMA,EAAKyG,KAAI,SAACzH,GAAC,OAAKA,EAAEsK,EAAI,IAC7B,IACDqU,EAAaD,EACf,GAAG,CAAC1d,IACJ,IAAMqa,GAAUjX,EAAAA,EAAAA,cAAY,SAACpD,GAC3Bge,EAAWhe,EACb,GAAG,IAEHie,GAA8B9f,EAAAA,EAAAA,UAAS,CACrC6B,KAAM,CAAC,EACPke,eAAgB,WAAO,EACvBrD,SAAU,WAAO,IACjBsD,GAAAphB,EAAAA,EAAAA,GAAAkhB,EAAA,GAJKG,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAqD1B,OA/CA5c,EAAAA,EAAAA,YAAU,WACR,IAAM+c,EAAW,CAAC,EAClBte,EAAKkJ,SAAQ,SAAClK,GACZ,IAAIiP,EAAAA,GAAAA,SAAQjP,EAAE8e,IACZ9e,EAAE8e,GAAU5U,SAAQ,SAAChK,GAAC,IAAAqf,EAAA,OAAMD,EAASpf,IAAiB,QAAZqf,EAACD,EAASpf,UAAE,IAAAqf,EAAAA,EAAI,GAAK,CAAC,SAC3D,GAAIvf,EAAE8e,IAA6B,OAAhB9e,EAAE8e,GAAoB,CAAC,IAADU,EAC9CF,EAAStf,EAAE8e,KAAmC,QAAtBU,EAACF,EAAStf,EAAE8e,WAAU,IAAAU,EAAAA,EAAI,GAAK,CACzD,CACF,IACA,IAAIC,EAAW,GACf1b,OAAOC,KAAKsb,GAAUpV,SAAQ,SAACC,GAC7BsV,EAASlV,KAAK,CAAE1S,MAAOsS,EAAGgD,MAAOmS,EAASnV,IAC5C,IACAsV,EAASC,MAAK,SAACC,EAAG1U,GAAC,OAAKA,EAAEkC,MAAQwS,EAAExS,KAAK,IACzCsS,EAAWA,EAASG,MAAM,EAtClB,IAuCR,IAAMV,EAAkB,WAAmC,IAAzBW,EAAUC,UAAAnY,OAAA,QAAArM,IAAAwkB,UAAA,GAAAA,UAAA,GAAG,UACvC5T,GAAQ6T,EAAAA,GAAAA,KAAaC,EAAAA,IACvBC,EAAS,SAAClH,GACZ,IAAKA,GAAe,KAARA,GAA2B,KAAbA,EAAImH,KAAa,MAAO,UAClD,IAAM1T,EAASN,EAAMM,SACrB,OAAIA,EAAO4B,MAAK,SAACpO,GAAC,OAAKA,IAAM+Y,CAAG,KAAKvM,EAAO7E,OA5CxC,GA6CKuE,EAAM6M,GACH8G,CACd,EAGA,OAFAI,EAAOzT,OAASN,EAAMM,OACtByT,EAAOtU,MAAQO,EAAMP,MACdsU,CACT,CAZwB,GAaxBR,EAASvV,SAAQ,SAAClK,GAAC,OAAMA,EAAEjJ,MAAQmoB,EAAelf,EAAEnI,MAAM,IAC1D,IAAMiS,EAAI,CAAC,EACX8U,EAAS1U,SAAQ,SAACiW,GAChBrW,EAAEqW,EAAe,OAAKA,CACxB,IACAd,EAAW,CACTre,KAAM8I,EACNoV,eAAAA,EACArD,SAAU,SAAC7b,GACT,IAAIiP,EAAAA,GAAAA,SAAQjP,EAAE8e,IAAY,CACxB,IAAMtR,GAAI4S,EAAAA,GAAAA,KAASpgB,EAAE8e,IAAW,SAAC5e,GAAC,IAAAmgB,EAAA,OAAS,QAATA,EAAKvW,EAAE5J,UAAE,IAAAmgB,OAAA,EAAJA,EAAMlT,KAAK,IAClD,OAAO+R,EAAelf,EAAE8e,GAAUtR,GACpC,CACE,OAAO0R,EAAelf,EAAE8e,GAE5B,IAEFD,EAAYY,EACd,GAAG,CAACX,EAAU9d,KAEZ3K,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAAC/a,GAAI,CAAEK,SAAU,WAAYuE,OAAQ,QAAUgO,QAAS,EAAEnT,SAAA,EACvEL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfL,EAAAA,EAAAA,KAAC2qB,GAAc,CAAC9F,UAAWA,OAE7B7kB,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfK,EAAAA,EAAAA,MAACgb,GAAAA,GAAI,CAACC,WAAS,EAACnI,QAAS,CAAEoI,GAAI,EAAGwI,GAAI,GAAKxjB,GAAI,CAAEgqB,GAAI,GAAIvqB,SAAA,EACvDL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UAChBK,EAAAA,EAAAA,MAACiK,EAAAA,EAAS,CACR5I,GAAG,uBACH0kB,QAAM,EACN7b,MAAM,aACNG,MAAO8d,EACPxhB,QAAQ,WACR+Z,WAAS,EACT0B,SAAU,SAACja,GACTigB,EAAejgB,EAAMJ,OAAOsC,MAC9B,EAAE1K,SAAA,EAEFL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAC6B,MAAM,QAAO1K,SAAC,gBACxBL,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAC6B,MAAM,WAAU1K,SAAC,wBAG/BL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UAChBL,EAAAA,EAAAA,KAACkf,GAAAA,EAAO,CAAA7e,SAAC,uBAEXL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAID,WAAS,EAAClU,eAAe,SAAS+L,QAAS,EAAEnT,SAC7D0oB,EAAWjX,KAAI,SAAAlN,GAAA,IAAG+P,EAAG/P,EAAH+P,IAAK/J,EAAKhG,EAALgG,MAAOS,EAAIzG,EAAJyG,KAAI,OACjCrL,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAAWzH,MAAI,EAAC5O,MAAO,CAAEG,OAAQ,IAAKP,MAAO,KAAM5E,UACtDL,EAAAA,EAAAA,KAAC6qB,GAAS,CAACvW,KAAM1J,EAAOS,KAAMA,KADrBsJ,EAEJ,OAGX3U,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,GAAGvb,UAChBK,EAAAA,EAAAA,MAACoqB,GAAAA,EAAI,CACHlqB,GAAI,CACFmqB,cAAe,MACfpC,UAAW,OACXpiB,gBAAiB,SAAClF,GAAK,OACrB2pB,EAAAA,EAAAA,GAAU3pB,EAAMC,QAAQuF,WAAW8R,MAAM,GAC3CtY,SAAA,EAEFK,EAAAA,EAAAA,MAACgK,EAAAA,EAAK,CACJvK,UAAW,UACXqT,QAAS,EACTlC,IAAK,EACL1Q,GAAI,CAAEC,EAAG,EAAGC,EAAG,GACf2G,eAAgB,SAChBD,WAAY,SAASnH,SAAA,EAErBL,EAAAA,EAAAA,KAACoH,EAAAA,EAAU,CAACC,QAAS,KAAKhH,SAAC,aAC3BL,EAAAA,EAAAA,KAAC2K,EAAAA,EAAS,CACRjC,KAAK,QACL+d,QAAM,EACN1b,MAAOoe,EACPrG,SAAU,SAACja,GACTugB,EAAYvgB,EAAMJ,OAAOsC,MAC3B,EAAE1K,SAEDgZ,GAAevH,KAAI,SAAAX,GAAA,IAAGwD,EAAGxD,EAAHwD,IAAK/J,EAAKuG,EAALvG,MAAK,OAC/B5K,EAAAA,EAAAA,KAACkJ,EAAAA,EAAQ,CAAW6B,MAAO4J,EAAItU,SAC5BuK,GADY+J,EAEJ,UAIjB3U,EAAAA,EAAAA,KAACyoB,GAAQ,CAACpd,KAAM4d,UAIpBjpB,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfL,EAAAA,EAAAA,KAACirB,GAAc,CACb5f,KAAMA,EACN4a,WAAYhN,GACZiB,SAAUA,EACVwL,QAASA,EACTC,QAASA,EACTO,SAAUuD,EAAQvD,cAGtBlmB,EAAAA,EAAAA,KAAC0b,GAAAA,GAAI,CAACzH,MAAI,EAAC2H,GAAI,EAAEvb,UACfL,EAAAA,EAAAA,KAACkrB,GAAO,CACN7f,KAAMA,EACN4a,WAAYhN,GACZiB,SAAUA,EACVwL,QAASA,EACTC,QAASA,EACTO,SAAUuD,EAAQvD,oBAOhC,EC9GA,IAihBA,GAjhBoB,WAElB,IAAMxD,GAAWC,EAAAA,EAAAA,MAGXwI,IAFOroB,EAAAA,EAAAA,MAEGsoB,EAAAA,EAAAA,IAAYC,EAAAA,KAE5B/e,GASIC,EAAAA,EAAAA,MARFI,EAAOL,EAAPK,QACAzI,EAASoI,EAATpI,UACAonB,EAAShf,EAATgf,UACAC,EAAajf,EAAbif,cACAC,EAAalf,EAAbkf,cACAC,EAASnf,EAATmf,UACAC,EAAiBpf,EAAjBof,kBACAC,EAAcrf,EAAdqf,eAEFpiB,GAA8BC,EAAAA,EAAAA,YAAUC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAAjCqiB,EAAOniB,EAAA,GAAEoiB,EAAUpiB,EAAA,GAC1BG,GAAoCJ,EAAAA,EAAAA,WAAS,GAAKK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA3CkiB,EAAUjiB,EAAA,GAAEkiB,EAAaliB,EAAA,GAChCG,GAAgDR,EAAAA,EAAAA,UA3BlD,WACE,IAAAwiB,EAAmDC,OACnD,MAAO,CACLhnB,MAFuB+mB,EAAjBE,WAGN1mB,OAH4CwmB,EAAnBG,YAK7B,CAsBIC,IACDniB,GAAA7B,EAAAA,EAAAA,GAAA4B,EAAA,GAFMqiB,EAAgBpiB,EAAA,GAGvB2c,GAH4C3c,EAAA,IAGNT,EAAAA,EAAAA,UAAS,CAC7C8iB,MAAO,CAAE3X,IAAK,aAAcyO,KAAK,EAAMmJ,SAAS,GAChDC,UAAW,CAAE7X,IAAK,aAAcyO,KAAK,GACrCqJ,YAAa,CAAE9X,IAAK,gBAAiByO,KAAK,GAC1CsJ,SAAU,CAAE/X,IAAK,iBAAkByO,KAAK,GACxCuJ,YAAa,CAAEhY,IAAK,SAAUyO,KAAK,GACnCwJ,kBAAmB,CAAEjY,IAAK,kBAAmByO,KAAK,GAClDyJ,gBAAiB,CAAElY,IAAK,2BAA4ByO,KAAK,MACzDyD,GAAAze,EAAAA,EAAAA,GAAAwe,EAAA,GARK1D,EAAW2D,EAAA,GAAEiG,EAAcjG,EAAA,GAS5BkG,GAAa7gB,EAAAA,EAAAA,QAAO,MACpB8gB,GAAY9gB,EAAAA,EAAAA,QAAO,MACnBoT,EAAgBmM,IAChBwB,GAAiB7B,EAAAA,EAAAA,KAAY,SAACrb,GAAK,OAAKA,EAAMmd,YAAYC,WAAW,IACrEC,GAAoBhC,EAAAA,EAAAA,KAAY,SAACrb,GAAK,OAC1Csd,MAAMC,KAAKvd,EAAMmd,YAAYK,MAAMC,SAAS,IAE9CC,GAAmCC,EAAAA,GAAAA,MAA3BC,EAAWF,EAAXE,YAAaC,EAASH,EAATG,UACfC,EC/GO,WACX,IAAQC,GAAWC,EAAAA,GAAAA,MAAXD,OACRxhB,GAAgDC,EAAAA,EAAAA,MAAzCif,EAAalf,EAAbkf,cAAewC,EAAsB1hB,EAAtB0hB,uBACtB,OAAO/Y,EAAAA,EAAAA,UAAQ,WACX,IAAMgZ,EAAc,IAAIC,gBAAgBjC,OAAOkC,SAAShlB,KAAKmS,MAAM,KAAK,IACxE,OAAI2S,EAAYG,IAAI,aAChBJ,EAAuBC,EAAYG,IAAI,aAEhCH,GAEPA,EAAYG,IAAI,OAChB5C,EAAc,CAACjb,IAAK0d,EAAYG,IAAI,QAC7BH,QAFX,CAIJ,GAAG,CAACH,GAER,CD+FgBO,GACRF,GAAWJ,EAAAA,GAAAA,MACjBzE,GAAkC9f,EAAAA,EAAAA,UAAS,SAAQggB,IAAAphB,EAAAA,EAAAA,GAAAkhB,EAAA,GAA5CgF,GAAS9E,GAAA,GAAE+E,GAAY/E,GAAA,IAE9B5c,EAAAA,EAAAA,YAAU,WACJ5B,UAAUwjB,aACZxjB,UAAUwjB,YAAYC,oBACpB,SAACxtB,GACC0sB,EAAY1sB,EAASytB,QACrB7C,EAAW,CACT8C,IAAK1tB,EAASytB,OAAOE,UACrBzX,IAAKlW,EAASytB,OAAOG,UAEzB,IACA,WAAO,IAGXnM,EAAS,CAAExO,KAAM+P,EAAAA,GAAUC,QAAQ,GACrC,GAAG,KAEHtX,EAAAA,EAAAA,YAAU,WACJ0S,GACFuM,EAAW,CAAE8C,IAAKrP,EAAc7H,KAAMN,IAAKmI,EAAcnI,KAC7D,GAAG,CAACmI,IAEJ,IAAMwP,GAAgB5qB,EAAU,WAC1B6qB,GAAiB7qB,EAAU,UAC3B8qB,GAAgB9qB,EAAU,QAChC+qB,IAAkCzlB,EAAAA,EAAAA,WAAS,GAAK0lB,IAAA9mB,EAAAA,EAAAA,GAAA6mB,GAAA,GAAzCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,IAC9BtiB,EAAAA,EAAAA,YAAU,WACHkiB,KACCK,IACFC,IAAa,GACPvB,GAASA,EAAMO,IAAI,aAAc7C,EAAcJ,EAAS,MAE9DI,EAAcJ,EAAS,KAG7B,GAAG,CAAC2D,GAAe3D,EAASgE,KAC5B,IAAME,IAAiB5gB,EAAAA,EAAAA,cACrB,SAACpD,GAECmgB,EAAcngB,EAChB,GACA,CAACigB,IAGGpR,IAAWzL,EAAAA,EAAAA,cAAY,SAAC1D,EAAOukB,GAC/BA,GAAOzD,EAAW,CAAE8C,IAAKW,EAAM7X,KAAMN,IAAKmY,EAAMnY,MAChD/I,OAAOC,KAAKtD,GAAO,IACrB6iB,EAAU,eAAa1tB,EAAAA,EAAAA,GAAA,GAAO6K,IAEhC2X,GAAS6M,EAAAA,EAAAA,IAAW,CAAExkB,MAAAA,IACxB,GAAG,KAEH6B,EAAAA,EAAAA,YAAU,WACR+e,GACG2C,GAAYrB,EAAiBG,GAAmBtb,KAAI,SAACzH,GAAC,OAAKA,EAAEkG,GAAG,IAErE,GAAG,CAAC+d,GAAWA,GAAYrB,EAAiBG,IAE5C,IAAMoC,IAAYva,EAAAA,EAAAA,UAAQ,WACxB,IAAMwa,EAAQ9iB,EAAQ,WAChBmH,EAAY,CAAC,EAInB,OAHAqF,GAAgB5E,SAAQ,SAAA9S,GAAc,IAAXkT,EAAGlT,EAAHkT,IACzBb,EAAUa,IAAO+a,EAAAA,GAAAA,KAAOD,GAAO,SAACplB,GAAC,OAAKA,EAAEsK,EAAI,GAC9C,IACOb,CACT,GAAG,CAACnH,EAAQ,aA2BZgjB,IAA8BnmB,EAAAA,EAAAA,WAAS,kBACrComB,GAAAA,MAAiBC,SAAS,CACxBC,OAAQ,CAGNC,gBAAgB,EAChBC,eAAgB,IAChBC,gBAAiB,IACjBC,cAAe,KAEjBC,QAAS,CACP,CACEjc,KAAM,SACNia,SAAU,MACVzlB,KAAM,IACN0nB,QAAQ,EACR/vB,SAAU,IAEZ,CACE6T,KAAM,SACNia,SAAU,OACVzlB,KAA+B,GAAzB2jB,EAAiBpnB,MACvB5E,SAAU,CACR,CACE6T,KAAM,MACNI,KAAM,aACN+b,aAAa,EACb1V,UAAW,UAGf8H,SAAU,IAGdzN,OAAQ,CACNd,KAAM,MACNoc,OAAQ,IACRjwB,SAAU,CACR,CACE6T,KAAM,MACN7T,SAAU,CACR,CACE6T,KAAM,MACN7T,SAAU,CACR,CACE6T,KAAM,SACNoc,OAAQ,GACRjwB,SAAU,CACR,CACE6T,KAAM,MACNI,KAAM,aACNqG,UAAW,eAIjB,CACEzG,KAAM,SACNoc,OAAQ,GACRjwB,SAAU,CACR,CACE6T,KAAM,MACNI,KAAM,kBACNqG,UAAW,yBAMrB,CACEzG,KAAM,SACNoc,OAAQ,GACRjwB,SAAU,CACR,CACE6T,KAAM,MACNI,KAAM,eACNqG,UAAW,eAEb,CACEzG,KAAM,MACNI,KAAM,SACNqG,UAAW,eAEb,CACEzG,KAAM,MACNI,KAAM,iBACNqG,UAAW,YAEb,CACEzG,KAAM,MACNI,KAAM,2BACNqG,UAAW,0BAQzB,IACH4V,IAAAnoB,EAAAA,EAAAA,GAAAunB,GAAA,GAlGMa,GAAOD,GAAA,GAAEE,GAAUF,GAAA,IAoG1B3jB,EAAAA,EAAAA,YAAU,WACR8V,EAASgO,GAAAA,GAAeC,QAAQrF,KAClC,GAAG,CAACA,MAEJ,IAAMsF,IAAgBniB,EAAAA,EAAAA,cACpB,SAACoiB,GAEC,YADelrB,IAAXkrB,GAAsB9E,EAAc8E,GACjC/E,CACT,GACA,CAACA,IAyIGrI,IAAsBhV,EAAAA,EAAAA,cAC1B,SAACkG,EAAKV,EAAM6c,GAEV,GAAI9D,EAAUjgB,QAAS,CACrB,GAAI+jB,EACF9D,EAAUjgB,QAAQgkB,qBAAqB,CACrCzc,KAAML,EAAKU,IACXgG,UAAWhG,QAEV,CAGH,IAAM5H,EAAUqB,OAAOC,KAAKmiB,GAAQQ,QAAQvY,MAC1C,SAACjE,GAAC,OAAKgc,GAAQQ,OAAOxc,GAAGyc,YAAYtW,YAAchG,CAAG,IAEpD5H,GAASyjB,GAAQU,SAAStB,GAAAA,QAAmBuB,UAAUpkB,GAC7D,CACAmW,EAAYvO,GAAKyO,IAAM0N,EACvBhE,GAAc5sB,EAAAA,EAAAA,GAAC,CAAC,EAAIgjB,GACtB,CACF,GACA,CAAC8J,EAAWwD,KAEd,OACE9vB,EAAAA,EAAAA,MAAC0wB,EAAI,CACHptB,mBACEhE,EAAAA,EAAAA,KAACqxB,GAAS,CACRnO,YAAaA,EACbO,oBAAqBA,KAGzBrf,eACE1D,EAAAA,EAAAA,MAAA8H,EAAAA,SAAA,CAAAnI,SAAA,EACEL,EAAAA,EAAAA,KAACsxB,GAAM,KACPtxB,EAAAA,EAAAA,KAAA,OAAKD,IAAKgtB,KACV/sB,EAAAA,EAAAA,KAACuS,EAAQ,OAEZlS,SAAA,EAgBDL,EAAAA,EAAAA,KAAA,OACEqF,MAAO,CACLG,OAAQ,OACRvE,SAAU,WACV8pB,cAAe,MACftlB,SAAU,UACVpF,UAEFL,EAAAA,EAAAA,KAAC4vB,GAAAA,OAAiB,CAChB2B,MAAOf,GACPzwB,IAAKitB,EACLwE,QAvMQ,SAACC,GAEf,OADgBA,EAAKC,gBAEnB,IAAK,YACH,OACE1xB,EAAAA,EAAAA,KAAC2xB,EAAU,CACT5vB,GAAG,iBACHsJ,KAAoB,OAAd4hB,QAAc,IAAdA,EAAAA,EAAkB,GACxB7hB,QAASwmB,GAAAA,GACTnmB,cAAesjB,GACfrjB,YAAa2jB,GACb1jB,YAAa2T,EACbhU,UAAW2hB,EACX1hB,aAAc6hB,EACdxhB,aAAc,SAACyJ,GAAC,OAAKqN,EAASgO,GAAAA,GAAemB,aAAaxc,GAAG,EAC7DxJ,iBAAkB,SAACwJ,GAAC,OAAKqN,EAASgO,GAAAA,GAAeoB,YAAYzc,GAAG,EAEhEvJ,QAASqiB,IAGf,IAAK,kBACH,OACEnuB,EAAAA,EAAAA,KAAC+xB,GAAQ,CACPlN,UACelY,EAAbmf,EAAqB,iBAA4B,aAEnDzgB,KAAMsB,EAAQ,WACdkc,OAAQyF,GACRxF,eAAgB,SAACD,GACf0F,GAAa1F,EAIf,EACA3O,SAAUmV,KAGhB,IAAK,oBACH,OACErvB,EAAAA,EAAAA,KAAC2xB,EAAU,CACT5vB,GAAG,yBACHsJ,KAAM+hB,EACNhiB,QAAS4mB,GAAAA,GACTvmB,cAAesjB,GACfrjB,YAAa2jB,GACb1jB,YAAa2T,EACbhU,UAAW2hB,EACX1hB,aAAc6hB,EACd5hB,eAAe,EACfI,aAAc,SAACyJ,GAAC,OAAKqN,EAASgO,GAAAA,GAAemB,aAAaxc,GAAG,EAC7DxJ,iBAAkB,SAACwJ,GAAC,OAAKqN,EAASgO,GAAAA,GAAeoB,YAAYzc,GAAG,EAEhEvJ,QAASqiB,IAGf,IAAK,WACH,OACEnuB,EAAAA,EAAAA,KAACiyB,GAAQ,CACP3S,cAAeA,EACfI,OAAQ4L,IACRtU,KAAMrK,EAAQ,UAGpB,IAAK,cACH,OACE3M,EAAAA,EAAAA,KAACkyB,GAAW,CACV5S,cAAeA,EACfpF,SAAUA,GACVwF,OAAQ4L,IACRtU,KAAMrK,EAAQ,QACd/L,GAAI,CAAE4E,OAAQ,OAAQvE,SAAU,YAChC6S,UAAW0b,KAIjB,IAAK,cACH,OACExvB,EAAAA,EAAAA,KAACmyB,GAAW,CACV7S,cAAeA,EACfpF,SAAUA,GACVwF,OAAQ4L,IACRtU,KAAMrK,EAAQ,QACd/L,GAAI,CAAE4E,OAAQ,OAAQvE,SAAU,cAItC,IAAK,QACH,OACEjB,EAAAA,EAAAA,KAACqf,EAAAA,EAAS,CAACha,MAAO,CAAEG,OAAQ,OAAQP,MAAO,QAAS5E,SACjD,SAAA0Z,GAAwB,IAArBvU,EAAMuU,EAANvU,OAAQP,EAAK8U,EAAL9U,MACV,OACEjF,EAAAA,EAAAA,KAACoyB,EAAAA,GAAO,CACNpb,KAAmBrK,EAAbmf,EAAqB,YAAuB,QAClDjH,UAEMlY,EADJmf,EACY,iBACA,aAEd5R,SAAUA,GACVmY,eAAgB3G,EAChBzmB,MAAOA,EACPO,OAAQA,EACRunB,WAAYA,EACZnB,QAASA,EACTgF,cAAeA,IAGrB,IAGN,QACE,MAAO,GAEb,EAuFQ0B,yBAAyB,EAEzBC,UAAU,WACVC,gBAAgB,EAChBC,cAAe,SAAC5xB,GAEduN,OAAOC,KAAK6U,GAAa3O,SACvB,SAACC,GAAC,OAAM0O,EAAY1O,GAAG4O,KAAM,CAAK,IASpChV,OAAOof,OAAO3sB,EAAEmwB,QAAQzc,SAAQ,SAAC1T,GAE7BA,EAAEowB,YAAYtW,WACduI,EAAYriB,EAAEowB,YAAYtW,aAE1BuI,EAAYriB,EAAEowB,YAAYtW,WAAWyI,KAAM,EAC/C,IACA0J,EAAe5J,GACfuN,GAAW5vB,EACb,OAyBJb,EAAAA,EAAAA,KAAC0yB,EAAAA,EAAQ,CACP9xB,GAAI,CAAEQ,MAAO,OAAQwE,OAAQ,SAACvE,GAAK,OAAKA,EAAMuE,OAAO+sB,OAAS,CAAC,GAC/DtvB,KAAMyrB,IAAiBE,GAAc3uB,UAErCK,EAAAA,EAAAA,MAAC2Q,EAAAA,EAAG,CACFzQ,GAAI,CACF0E,QAAS,OACTkC,WAAY,SACZvC,MAAO,MACPM,cAAe,SACfgf,UAAW,UACXlkB,SAAA,EAEFL,EAAAA,EAAAA,KAACqR,EAAAA,EAAG,CAACzQ,GAAI,CAAEqE,MAAO,QAAS5E,UACzBL,EAAAA,EAAAA,KAAC2H,EAAAA,EAAc,CACbN,QAAQ,cACR0D,MAAO+jB,GAAgB,GAAKE,GAAgB,GAAK,SAGrDhvB,EAAAA,EAAAA,KAACqR,EAAAA,EAAG,CAACzQ,GAAI,CAAEqE,MAAO,QAAS5E,UACzBL,EAAAA,EAAAA,KAAA,MAAAK,SACGyuB,GACG,gBACAE,GACA,kBACA,mBAOlB,C","sources":["components/Dialog/index.js","containers/Page/Page.js","components/EventTable/DownloadOption.js","components/EventTable/ShareButton.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/PaperCustom/index.js","components/RadarChart/index.js","components/Map/index.js","assets/Spotify_icon.svg","Providers/Database/ulti.js","components/DetailCard/index.js","components/EventDetail/index.js","components/EventMap/index.js","components/Search/index.js","components/ListenCard/index.js","components/MediaDetail/index.js","components/AppHeader/LanguageMenu.js","components/AppHeader/FontSizeMenu.js","components/AppHeader/LayoutMenu.js","components/AppHeader/index.js","components/SongListDetail/index.js","components/VizPanel/Histogram/index.js","components/VizPanel/Scatterplot/index.js","components/VizPanel/Scatterwrapper/index.js","components/VizPanel/PCAplot/index.js","components/VizPanel/Barchart/index.js","components/VizPanel/index.js","pages/LandingPage/LandingPage.js","Providers/Query/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport { useTheme } from '@mui/material/styles'\r\n\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle, IconButton,\r\n    Slide,\r\n    useMediaQuery,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Transition = React.forwardRef((props, ref) => (\r\n    <Slide direction=\"up\" {...props} ref={ref} />\r\n))\r\n\r\nfunction BootstrapDialogTitle(props) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: (theme) => theme.palette.grey[500],\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst QuestionDialog = ({\r\n                            isProcessing = false,\r\n                            isOpen = false,\r\n                            id = '',\r\n                            message = '',\r\n                            title = '',\r\n                            action = '',\r\n                            haveButton=false,\r\n                            handleAction = () => {},\r\n                            handleClose = () => {},\r\n                            ...rest\r\n                        }) => {\r\n    const intl = useIntl()\r\n    const theme = useTheme()\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            open={isOpen}\r\n            onClose={handleClose}\r\n            TransitionComponent={Transition}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            {...rest}\r\n        >\r\n            {/*<DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>*/}\r\n            <BootstrapDialogTitle id=\"alert-dialog-title\" onClose={handleClose}>\r\n                {title}\r\n            </BootstrapDialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {message}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            {haveButton&&<DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    {intl.formatMessage({id: 'cancel', defaultMessage: 'Cancel'})}\r\n                </Button>\r\n                <Button\r\n                    disabled={isProcessing}\r\n                    onClick={() => {\r\n                        handleAction(handleClose)\r\n                    }}\r\n                    color=\"secondary\"\r\n                >\r\n                    {action}\r\n                </Button>\r\n            </DialogActions>}\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default QuestionDialog","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography, Menu, MenuItem, Box,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             appBarLeftContent = null,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={'absolute'}\r\n                sx={{\r\n                    width: undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar sx={{\r\n                    backgroundColor: (t) =>\r\n                        t.palette.mode === 'dark'\r\n                            ? t.palette.background.default\r\n                            : t.palette.primary.dark,\r\n                    margin: 0,\r\n                    padding: 0,\r\n                }}>\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {appBarLeftContent}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import SaveIcon from \"@mui/icons-material/Save\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport {Button, Menu, MenuItem} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport default function({onDownloadSearchList=()=>{},onDownloadSelectedList=()=>{}}){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <><Button\r\n        color=\"primary\"\r\n        target={\"_blank\"}\r\n        size={\"small\"}\r\n        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n        // onClick={handleExportData}\r\n        startIcon={<SaveIcon/>}\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n    >\r\n        Download\r\n    </Button>\r\n        <Menu anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={handleClose}>\r\n            <MenuItem onClick={()=>{onDownloadSearchList();handleClose();}}>Data from Search list</MenuItem>\r\n            <MenuItem onClick={()=>{onDownloadSelectedList();handleClose();}}>Data from Selected list</MenuItem>\r\n            <MenuItem disabled onClick={handleClose} href={process.env.REACT_APP_DATA_DOWNLOAD}>MIRAGE-MetaCorpus Song List</MenuItem>\r\n            <MenuItem onClick={handleClose} disabled>MIRAGE-MetaCorpus Station List</MenuItem>\r\n        </Menu>\r\n        </>\r\n}","import {Button, TextField, Stack} from \"@mui/material\";\r\nimport React, {Fragment, useState} from \"react\";\r\nimport QuestionDialog from '../../components/Dialog';\r\n\r\nexport default function ShareButton({getUrl}){\r\n    const [dialogOpen,setDialogOpen] = useState(false);\r\n    const [url,setUrl] = useState('');\r\n    const [isProcessing, setIsProcessing] = useState(false)\r\n\r\n    const closeDialog = () => {\r\n        setDialogOpen(false);\r\n    }\r\n    const openDialog = () => {\r\n        setIsProcessing(true);\r\n        getUrl().then(d=>{\r\n            setUrl(d);\r\n            setDialogOpen(true);\r\n            setIsProcessing(false);\r\n        }).catch((e)=>{\r\n            setUrl('');\r\n            setIsProcessing(false);\r\n        })\r\n    }\r\n    return <Fragment>\r\n    <Button variant=\"contained\" onClick={openDialog}>Share</Button>\r\n    <QuestionDialog\r\n        isOpen={dialogOpen}\r\n        handleClose={closeDialog}\r\n        isProcessing={isProcessing}\r\n        title={'Share URL'}\r\n        maxWidth={\"md\"}\r\n        message={<Stack direction=\"collumn\">\r\n            <TextField \r\n                size=\"small\"\r\n                label=\"\" \r\n                variant=\"outlined\" \r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n                value={url}\r\n            />\r\n            <Button variant=\"contained\" size=\"small\"\r\n                onClick={() => {navigator.clipboard.writeText(url)}}>\r\n                    Copy\r\n            </Button>\r\n        </Stack>}\r\n    />\r\n    </Fragment>\r\n}","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\r\nimport {MaterialReactTable, MRT_ToolbarAlertBanner} from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\n// import {fields} from \"./fields\";\r\nimport {Box, Button, IconButton, Toolbar, Tooltip} from \"@mui/material\";\r\nimport AddEventIcon from '@mui/icons-material/AddShoppingCart';\r\nimport RemoveEventIcon from '@mui/icons-material/RemoveShoppingCart';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport {ExportToCsv} from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport DownloadOption from \"./DownloadOption\";\r\nimport ShareButton from \"./ShareButton\";\r\n\r\nconst EventTable = ({\r\n                        id = 'tableevent', columns, data, totalData, selectedData, disableAdding,\r\n                        isLoadingData, onSelectRow, highlightId, onSendToList, onRemoveFromList,\r\n                        mainurl\r\n                    }) => {\r\n    const [rowSelection, setRowSelection] = useState({});\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData,getShortenLink, getList} = useDatabase();\r\n    const event_export_list = getList('event_export_list');\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        try {\r\n            rowVirtualizerInstanceRef.current?.scrollToIndex?.(0);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [sorting]);\r\n\r\n    useEffect(() => {\r\n        setRowSelection({})\r\n    }, [data])\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows).then((datadownload) => {\r\n            const csvOptions = {\r\n                fieldSeparator: '|',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                headers: Object.keys(event_export_list),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e => {\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportRowsFromTable = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload) => {\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e => {\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    const handleUrl = useCallback(async() => {\r\n        return getShortenLink();\r\n    },[data,mainurl])\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            key={id}\r\n            id={id}\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            // enableBottomToolbar={!!Object.keys(rowSelection).length}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            enableRowSelection\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx: {display: 'flex', flexDirection: \"column\", minHeight: 1, height: '100%'}}}\r\n            // muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{density: 'compact'}}\r\n            onSortingChange={setSorting}\r\n            onRowSelectionChange={setRowSelection}\r\n            state={{isLoading: isLoadingData || isLoading, sorting, rowSelection}}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{overscan: 2}} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({row}) => ({\r\n                onClick: () => {\r\n                    onSelectRow(row.original)\r\n                },\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.event_id=== row.original.event_id?1:0.7):1},\r\n                sx: {cursor: 'pointer', opacity: highlightId ? (highlightId._id === row.original._id ? 1 : 0.7) : 1},\r\n            })}\r\n            muiSelectCheckboxProps={{size: \"small\"}}\r\n            muiTableBodyCellProps={{sx: {\"wordBreak\": \"break-word\", whiteSpace: \"normal\"}}}\r\n            enableColumnResizing={true}\r\n            enableFullScreenToggle={false}\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 120, //make columns wider by default\r\n            }}\r\n            layoutMode=\"grid\"\r\n            positionToolbarAlertBanner={\"bottom\"}\r\n            renderTopToolbarCustomActions={({table}) => {\r\n                return (\r\n                    <Box\r\n                        sx={{display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap'}}\r\n                    >\r\n                        <DownloadOption\r\n                            // onDownloadSearchList={()=>handleExportRows(table.getPrePaginationRowModel().rows)}\r\n                            onDownloadSearchList={() => handleExportRows(totalData)}\r\n                            onDownloadSelectedList={() => handleExportRows(selectedData)}\r\n                        />\r\n                        <ShareButton getUrl={handleUrl}/>\r\n                    </Box>\r\n                )\r\n            }}\r\n            renderBottomToolbar={({table}) => {\r\n                const handleSelected = onSendToList ? () => {\r\n                    onSendToList(table.getSelectedRowModel().flatRows.map(d => d.original))\r\n                } : () => {\r\n                };\r\n                const handleRemoveSelected = onRemoveFromList ? () => {\r\n                    onRemoveFromList(table.getSelectedRowModel().flatRows.map(d => d.original))\r\n                } : () => {\r\n                };\r\n                return (<Toolbar\r\n                    sx={{\r\n                        display: Object.keys(rowSelection).length ? 'flex' : 'none',\r\n                    }}\r\n                >\r\n                    <Box sx={{flexGrow: 2}}>\r\n                        <MRT_ToolbarAlertBanner\r\n                            stackAlertBanner\r\n                            table={table}\r\n                        />\r\n                    </Box>\r\n                    {(onSendToList && (!disableAdding)) && <Tooltip title={\"Add to Selected list\"}><IconButton\r\n                        // color=\"info\"\r\n                        // disabled={!table.getIsSomeRowsSelected()}\r\n                        onClick={handleSelected}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <AddEventIcon/>\r\n                    </IconButton>\r\n                    </Tooltip>}\r\n                    {(onRemoveFromList) && <Tooltip title={\"Remove from Selected list\"}><IconButton\r\n                        // color=\"info\"\r\n                        // disabled={!table.getIsSomeRowsSelected()}\r\n                        onClick={handleRemoveSelected}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <RemoveEventIcon/>\r\n                    </IconButton>\r\n                    </Tooltip>}\r\n                </Toolbar>)\r\n            }}\r\n        />\r\n    );\r\n};\r\nexport default EventTable;","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {styled} from \"@mui/material/styles\";\r\nimport {Paper} from \"@mui/material\";\r\n\r\nconst PaperCustom = styled(Paper)(({ theme }) => ({\r\n    padding: theme.spacing(1),\r\n    borderRadius:10,\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nexport default PaperCustom;","import Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\n\r\nexport default function RadarChart({\r\n  inputData,\r\n  axisInfo,\r\n  height,\r\n  width,\r\n  highlight,\r\n  meanradar,\r\n}) {\r\n  const theme = useTheme();\r\n  let [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    if (axisInfo.length && inputData.length) {\r\n      const data = inputData.map((d) => {\r\n        const item = {\r\n          type: \"scatterpolar\",\r\n          r: [],\r\n          theta: [],\r\n          fill: \"toself\",\r\n          name: \"current event\",\r\n        };\r\n        axisInfo.forEach((k, ki) => {\r\n          item.r[ki] = d[k.key] ?? undefined;\r\n          item.theta[ki] = k.label;\r\n        });\r\n        item.r.push(item.r[0]);\r\n        item.theta.push(item.theta[0]);\r\n        return item;\r\n      });\r\n      if (meanradar) {\r\n        const item = {\r\n          type: \"scatterpolar\",\r\n          r: [],\r\n          theta: [],\r\n          line: {\r\n            dash: \"dash\", // Dash line for the trace\r\n          },\r\n          name: \"mean\",\r\n        };\r\n        data.push(item);\r\n        axisInfo.forEach((k, ki) => {\r\n          item.r[ki] = meanradar[k.key] ?? undefined;\r\n          item.theta[ki] = k.label;\r\n        });\r\n        item.r.push(item.r[0]);\r\n        item.theta.push(item.theta[0]);\r\n      }\r\n      setData(data);\r\n    } else {\r\n      setData([]);\r\n    }\r\n  }, [inputData, meanradar, axisInfo]);\r\n  let layout = useMemo(\r\n    () => ({\r\n      paper_bgcolor: \"rgba(255,255,255,0)\",\r\n      plot_bgcolor: \"rgba(255,255,255,0)\",\r\n      autoscale: false,\r\n      height: height,\r\n      width: width,\r\n      margin: { t: 40, r: 20, l: 20, b: 40 },\r\n      font: {\r\n        family: theme.typography.fontFamily,\r\n        size: theme.typography.fontSize,\r\n        color: theme.palette.text.primary,\r\n      },\r\n      polar: {\r\n        radialaxis: {\r\n          visible: true,\r\n          range: [0, 1],\r\n        },\r\n      },\r\n      showlegend: false,\r\n    }),\r\n    [height, width, theme]\r\n  );\r\n  return (\r\n    <Plot\r\n      data={data}\r\n      layout={layout}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Station_Map\",\r\n          height: 1080,\r\n          width: 1920,\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n        // '#Station':false\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = useMemo(()=>({\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    }),[height,width,theme,domain]);\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSpotifyIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 496 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1ed760\",\n    d: \"M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M406.6 231.1c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3zm-31 76.2c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm-26.9 65.6c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpotifyIcon);\nexport default __webpack_public_path__ + \"static/media/Spotify_icon.951b26aaf9259b0b439d3c7daa30dbaf.svg\";\nexport { ForwardRef as ReactComponent };","import { isArray } from \"lodash\";\r\n\r\nexport const metricList = [\r\n  { key: \"track_danceability\", label: \"Danceability\", radar: true },\r\n  { key: \"track_speechiness\", label: \"Speechiness\", radar: true },\r\n  { key: \"track_acousticness\", label: \"Acousticness\", radar: true },\r\n  { key: \"track_instrumentalness\", label: \"Instrumentalness\", radar: true },\r\n  { key: \"track_liveness\", label: \"Liveness\", radar: true },\r\n  { key: \"track_energy\", label: \"Energy\" },\r\n  { key: \"track_valence\", label: \"Valence\" },\r\n  { key: \"track_year_released\", label: \"Track Year Released\" },\r\n  { key: \"track_popularity\", label: \"Track Popularity\" },\r\n  { key: \"track_tempo\", label: \"Tempo\" },\r\n];\r\n\r\nexport const metricRadarList = metricList.filter((d) => d.radar);\r\n\r\nexport const rankMetricList = [\r\n  { key: \"artist_genres\", label: \"Artist Genres\", isArray: true },\r\n  { key: \"artist_country\", label: \"Artist Country\" },\r\n  { key: \"track_key\", label: \"Track Key\", isArray: true },\r\n];\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Link,\r\n  Paper,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from \"@mui/icons-material/Map\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport FemaleIcon from \"@mui/icons-material/Female\";\r\nimport MaleIcon from \"@mui/icons-material/Male\";\r\nimport TransgenderIcon from \"@mui/icons-material/Transgender\";\r\nimport { useSpring, animated, easings } from \"@react-spring/web\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { useState, useRef, useEffect, useMemo } from \"react\";\r\nimport { format } from \"d3\";\r\nimport \"./index.css\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n// import {Helmet} from \"react-helmet\";\r\nimport RadarChart from \"../RadarChart\";\r\nimport Map from \"../Map\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport spotifyIcon from \"../../assets/Spotify_icon.svg\";\r\nimport wikiIcon from \"../../assets/wikilogo.png\";\r\nimport musicbrainzIcon from \"../../assets/musicbrainlogo.png\";\r\nimport youtubeIcon from \"../../assets/youtubelogo.png\";\r\nimport geniusIcon from \"../../assets/geniuslogo.png\";\r\nimport { metricRadarList } from \"../../Providers/Database/ulti\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n  const { expand, ...other } = props;\r\n  return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\n\r\nfunction genderIcon(g) {\r\n  switch (g) {\r\n    case \"male\":\r\n      return { avatar: <MaleIcon style={{ marginRight: -12 }} />, label: \"\" };\r\n    case \"female\":\r\n      return { avatar: <FemaleIcon style={{ marginRight: -12 }} />, label: \"\" };\r\n    default:\r\n      return { label: g };\r\n  }\r\n}\r\n\r\nfunction DetailCard({ data, onSelect, meanradar }) {\r\n  const timeStation = moment(data.time_station).format(\"LLL\");\r\n  const duration = moment.utc(data.track_duration * 1000).format(\"HH:mm:ss\");\r\n  const stream_title = data.stream_title ?? \"N/A\";\r\n  const analyticData = useMemo(() => [data], [data]);\r\n  const analyticAxis = useMemo(() => metricRadarList, []);\r\n\r\n  return (\r\n    <Stack spacing={1}>\r\n      <PaperCustom>\r\n        <Typography\r\n          component=\"div\"\r\n          variant=\"h2\"\r\n          onClick={() => onSelect({ station: [data.station] }, data)}\r\n        >\r\n          {data.station}\r\n        </Typography>\r\n        {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n        {/*    Form: <Chip label={data.station_form} size={'small'}/>*/}\r\n        {/*</Typography>*/}\r\n        <table style={{ width: \"100%\" }}>\r\n          <colgroup>\r\n            <col style={{ width: 130 }} />\r\n            <col />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <td>Form</td>\r\n              <td>\r\n                <Stack\r\n                  direction={\"row\"}\r\n                  spacing={1}\r\n                  flexWrap\r\n                  sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                >\r\n                  <Chip label={data.station_form} size={\"small\"} />\r\n                  {data.station_frequency && (\r\n                    <>\r\n                      {data.station_frequency.map((d) => (\r\n                        <Chip label={d} key={d} size={\"small\"} />\r\n                      ))}\r\n                    </>\r\n                  )}{\" \"}\r\n                </Stack>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Station URL</td>\r\n              <td>\r\n                <Link\r\n                  href={data.station_url}\r\n                  target={\"_blank\"}\r\n                  color={\"secondary\"}\r\n                >\r\n                  {data.station_url}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Location</td>\r\n              <td>\r\n                <Link\r\n                  target={\"_blank\"}\r\n                  color={\"secondary\"}\r\n                  href={`https://maps.google.com/?q=${data.lat},${data.long}`}\r\n                >\r\n                  <MapIcon />\r\n                  {data.city}, {data.country}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Radio Garden URL</td>\r\n              <td>\r\n                <Link href={data.url} target={\"_blank\"} color={\"secondary\"}>\r\n                  {data.url}\r\n                </Link>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Formats</td>\r\n              <td>\r\n                {data.station_format && (\r\n                  <Stack\r\n                    direction={\"row\"}\r\n                    spacing={1}\r\n                    flexWrap\r\n                    sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                  >\r\n                    {data.station_format.split(\",\").map((d) => (\r\n                      <Chip label={d} key={d} size={\"small\"} />\r\n                    ))}\r\n                  </Stack>\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Genres</td>\r\n              <td>\r\n                {data.station_genre && (\r\n                  <Stack\r\n                    direction={\"row\"}\r\n                    spacing={1}\r\n                    flexWrap\r\n                    sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n                  >\r\n                    {data.station_genre.map((d) => (\r\n                      <Chip label={d} key={d} size={\"small\"} />\r\n                    ))}\r\n                  </Stack>\r\n                )}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Description</td>\r\n              <td>{data.station_description}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </PaperCustom>\r\n\r\n      <PaperCustom>\r\n        <table style={{ width: \"100%\" }}>\r\n          <colgroup>\r\n            <col style={{ width: 130 }} />\r\n            <col />\r\n          </colgroup>\r\n          <tbody>\r\n            <tr>\r\n              <td>Stream name</td>\r\n              <td>{stream_title}</td>\r\n            </tr>\r\n          </tbody>\r\n          {/*<tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>*/}\r\n        </table>\r\n      </PaperCustom>\r\n      {data.artist_info && (\r\n        <PaperCustom>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Box sx={{ flex: \"1 0 auto\", display: \"flex\" }}>\r\n                <Avatar\r\n                  aria-label=\"recipe\"\r\n                  src={data.artist_info.artist_image_url}\r\n                  sx={{ mr: 1 }}\r\n                >\r\n                  {data.artist_info.artist_name[0]}\r\n                </Avatar>\r\n                <div>\r\n                  <Typography variant=\"h4\" color={\"text.primary\"}>\r\n                    {data.artist_info.artist_name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\">\r\n                    {data.artist_info.artist_type}\r\n                  </Typography>\r\n                </div>\r\n              </Box>\r\n              <Typography\r\n                component=\"div\"\r\n                variant=\"subtitle1\"\r\n                color=\"text.secondary\"\r\n              >\r\n                {data.artist_info.artist_description}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <table style={{ width: \"100%\" }}>\r\n                <colgroup>\r\n                  <col style={{ width: 130 }} />\r\n                  <col />\r\n                </colgroup>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Popularity</td>\r\n                    <td>\r\n                      <Chip\r\n                        icon={<Favorite />}\r\n                        sx={{ marginRight: 1 }}\r\n                        label={data.artist_info.artist_popularity}\r\n                        size={\"small\"}\r\n                      />\r\n                      ({format(\",\")(data.artist_info.artist_followers)}{\" \"}\r\n                      followers)\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>From</td>\r\n                    <td>{data.artist_info.artist_country ?? \"N/A\"}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Genres</td>\r\n                    <td>\r\n                      {data.artist_info.artist_genres &&\r\n                        data.artist_info.artist_genres.map((t) => (\r\n                          <Chip key={t} label={t} size={\"small\"} />\r\n                        ))}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Instruments</td>\r\n                    <td>\r\n                      {data.artist_info.artist_instruments.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                  {data.artist_info.artist_members &&\r\n                  data.artist_info.artist_members.length ? (\r\n                    <tr>\r\n                      <td>Members</td>\r\n                      <td>\r\n                        {data.artist_info.artist_members.map(\r\n                          ({\r\n                            _id,\r\n                            artist_name,\r\n                            artist_image_url,\r\n                            artist_genders,\r\n                            artist_sexualorientations,\r\n                            artist_ethnicities,\r\n                            artist_voicetypes,\r\n                          }) => (\r\n                            <Chip\r\n                              avatar={\r\n                                <Avatar\r\n                                  alt={artist_name}\r\n                                  src={artist_image_url}\r\n                                />\r\n                              }\r\n                              key={_id}\r\n                              label={\r\n                                <>\r\n                                  <strong>{artist_name}</strong>\r\n                                  {artist_genders && (\r\n                                    <Chip\r\n                                      title={`Gender: ${artist_genders}`}\r\n                                      color={\"error\"}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(artist_genders)}\r\n                                    />\r\n                                  )}\r\n                                  {artist_sexualorientations && (\r\n                                    <Chip\r\n                                      title={`Sexual Orientations: ${artist_sexualorientations}`}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(artist_sexualorientations)}\r\n                                    />\r\n                                  )}\r\n                                  {artist_ethnicities && (\r\n                                    <Chip\r\n                                      title={`Ethnicities: ${artist_ethnicities}`}\r\n                                      size={\"small\"}\r\n                                      {...genderIcon(artist_ethnicities)}\r\n                                    />\r\n                                  )}\r\n                                  {artist_voicetypes &&\r\n                                  artist_voicetypes.length ? (\r\n                                    <Chip\r\n                                      title={\"Voice types\"}\r\n                                      label={artist_voicetypes.join(\", \")}\r\n                                      size={\"small\"}\r\n                                    />\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </>\r\n                              }\r\n                              variant={\"outlined\"}\r\n                            />\r\n                          )\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <tr>\r\n                    <td>Website URL</td>\r\n                    <td>\r\n                      <Link\r\n                        href={data.artist_info.artist_website}\r\n                        target={\"_blank\"}\r\n                        color={\"secondary\"}\r\n                      >\r\n                        {data.artist_info.artist_website}\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Identifiers</td>\r\n                    <td>\r\n                      <IconButton\r\n                        href={`https://open.spotify.com/artist/${data.artist_info.artist_id}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={spotifyIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                      {data.artist_info.artist_qid && (\r\n                        <IconButton\r\n                          href={`https://wikidata.org/wiki/${data.artist_info.artist_qid}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img src={wikiIcon} width={30} loading=\"lazy\" />\r\n                        </IconButton>\r\n                      )}\r\n                      {data.artist_info.artist_YouTubeID && (\r\n                        <IconButton\r\n                          href={`https://www.youtube.com/channel/${data.artist_info.artist_YouTubeID}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img src={youtubeIcon} width={30} loading=\"lazy\" />\r\n                        </IconButton>\r\n                      )}\r\n                      {data.artist_info.artist_MusicBrainzID && (\r\n                        <IconButton\r\n                          href={`https://musicbrainz.org/artist/${data.artist_info.artist_MusicBrainzID}`}\r\n                          target={\"_blank\"}\r\n                        >\r\n                          <img\r\n                            src={musicbrainzIcon}\r\n                            width={30}\r\n                            loading=\"lazy\"\r\n                          />\r\n                        </IconButton>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                {/*<tr><td>Stream URL</td><td><Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link></td></tr>*/}\r\n              </table>\r\n            </Grid>\r\n          </Grid>\r\n        </PaperCustom>\r\n      )}\r\n      <PaperCustom elevation={3}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12}>\r\n            <Typography color=\"text.secondary\" gutterBottom>\r\n              {\" \"}\r\n              {timeStation}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              onClick={\r\n                data.track_name\r\n                  ? () => onSelect({ track_name: [data.track_name] })\r\n                  : null\r\n              }\r\n            >\r\n              {data.track_name}\r\n            </Typography>\r\n            <Typography\r\n              component=\"div\"\r\n              variant=\"subtitle1\"\r\n              color=\"text.secondary\"\r\n            >\r\n              {data.track_description}\r\n            </Typography>\r\n            <table style={{ width: \"100%\" }}>\r\n              <colgroup>\r\n                <col style={{ width: 130 }} />\r\n                <col />\r\n              </colgroup>\r\n              <tbody>\r\n                {data.track_form && (\r\n                  <tr>\r\n                    <td>Form</td>\r\n                    <td>{data.track_form}</td>\r\n                  </tr>\r\n                )}\r\n                {data.track_composers && data.track_composers.length ? (\r\n                  <tr>\r\n                    <td>Composers</td>\r\n                    <td>\r\n                      {data.track_composers.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {data.track_lyricists && data.track_lyricists.length ? (\r\n                  <tr>\r\n                    <td>Lyricists</td>\r\n                    <td>\r\n                      {data.track_lyricists.map((t) => (\r\n                        <Chip key={t} label={t} size={\"small\"} />\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {data.track_language && (\r\n                  <tr>\r\n                    <td>Language</td>\r\n                    <td>{data.track_language}</td>\r\n                  </tr>\r\n                )}\r\n                {data.track_year_released && (\r\n                  <tr>\r\n                    <td>Year released</td>\r\n                    <td>{data.track_year_released}</td>\r\n                  </tr>\r\n                )}\r\n                {data.track_duration && (\r\n                  <tr>\r\n                    <td>Duration</td>\r\n                    <td>{duration}</td>\r\n                  </tr>\r\n                )}\r\n                {data.track_popularity && (\r\n                  <tr>\r\n                    <td>Popularity</td>\r\n                    <td>\r\n                      <Chip\r\n                        icon={<Favorite />}\r\n                        label={data.track_popularity}\r\n                        size={\"small\"}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n                <tr>\r\n                  <td>Key </td>\r\n                  <td>\r\n                    {data.track_key}, {data.track_mode}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Beats per Measure</td>\r\n                  <td>{data.track_beatsperbar}</td>\r\n                </tr>\r\n                {data.track_genre && (\r\n                  <tr>\r\n                    <td>Genre</td>\r\n                    <td>{data.track_genre}</td>\r\n                  </tr>\r\n                )}\r\n                {data.track_loudness && (\r\n                  <tr>\r\n                    <td>Loudness</td>\r\n                    <td>{data.track_loudness} dB</td>\r\n                  </tr>\r\n                )}\r\n                <tr>\r\n                  <td>Platform</td>\r\n                  <td>\r\n                    {data.track_id && (\r\n                      <IconButton\r\n                        href={`https://open.spotify.com/track/${data.track_id}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={spotifyIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.track_qid && (\r\n                      <IconButton\r\n                        href={`https://wikidata.org/wiki/${data.track_qid}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={wikiIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.track_geniusID && (\r\n                      <IconButton\r\n                        href={`https://genius.com/${data.track_geniusID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={geniusIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.track_YouTubeID && (\r\n                      <IconButton\r\n                        href={`https://www.youtube.com/watch?v=${data.track_YouTubeID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={youtubeIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                    {data.track_MusicBrainzID && (\r\n                      <IconButton\r\n                        href={`https://musicbrainz.org/work/${data.track_MusicBrainzID}`}\r\n                        target={\"_blank\"}\r\n                      >\r\n                        <img src={musicbrainzIcon} width={30} loading=\"lazy\" />\r\n                      </IconButton>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {data.track_instrumentation && data.track_instrumentation.length ? (\r\n              <Stack\r\n                direction={\"row\"}\r\n                spacing={1}\r\n                flexWrap\r\n                sx={{ width: \"100%\", flexWrap: \"wrap\" }}\r\n              >\r\n                <Typography>Instruments: </Typography>\r\n                {data.track_instrumentation.map((t) => (\r\n                  <Chip key={t} label={t} size={\"small\"} />\r\n                ))}\r\n              </Stack>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Grid container>\r\n              <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n              <Typography\r\n                variant={\"h5\"}\r\n                component={\"div\"}\r\n                sx={{ margin: \"auto\" }}\r\n              >\r\n                Metrics\r\n              </Typography>\r\n              <Divider sx={{ mt: 2, mb: 2, flexGrow: 1 }} />\r\n            </Grid>\r\n            <AutoSizer style={{ height: 300, width: \"100%\" }}>\r\n              {({ height, width }) => {\r\n                return (\r\n                  <RadarChart\r\n                    inputData={analyticData}\r\n                    meanradar={meanradar}\r\n                    axisInfo={analyticAxis}\r\n                    height={height - 40}\r\n                    width={width}\r\n                  />\r\n                );\r\n              }}\r\n            </AutoSizer>\r\n          </Grid>\r\n          {/*<Grid item xs={6}>*/}\r\n          {/*    <Grid container>*/}\r\n          {/*        <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>*/}\r\n          {/*        <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>*/}\r\n          {/*            Lyrics {data.track_language ? `(${data.track_language})` : \"\"}*/}\r\n          {/*        </Typography>*/}\r\n          {/*        <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>*/}\r\n          {/*    </Grid>*/}\r\n          {/*</Grid>*/}\r\n        </Grid>\r\n      </PaperCustom>\r\n    </Stack>\r\n  );\r\n}\r\nexport default DetailCard;\r\n\r\nfunction CollapsibleComp({ header, banner, defaultValue, ...props }) {\r\n  const [open, setopen] = useState(defaultValue);\r\n  const runningText = useSpring({\r\n    reset: open,\r\n    cancel: open,\r\n    config: { duration: 20000 },\r\n    loop: !open,\r\n    from: { transform: \"translateX(100%)\" },\r\n    to: { transform: \"translateX(-100%)\" },\r\n  });\r\n  return (\r\n    <Card elevation={10} sx={{ mt: 1 }}>\r\n      <CardActions disableSpacing>\r\n        <Typography variant={\"h5\"}>{header}</Typography>\r\n        {banner && !open && (\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              overflow: \"hidden\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            <Typography variant={\"subtitle2\"}>\r\n              <animated.div style={runningText} className={\"textbanner\"}>\r\n                {banner}\r\n              </animated.div>\r\n              {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n            </Typography>\r\n          </div>\r\n        )}\r\n        <ExpandMore expand={open} onClick={() => setopen(!open)} />\r\n      </CardActions>\r\n      <Collapse in={open} unmountOnExit={true} {...props} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Card, CardContent, Unstable_Grid2 as Grid } from \"@mui/material\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport DetailCard from \"../DetailCard\";\r\n\r\nexport default function ({ currentDetail, onSelect, meanradar, sx = {} }) {\r\n  return (\r\n    <>\r\n      {/*<Card sx={{...sx,width:'100%', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n      {/*    <CardContent sx={{height: '100%', position: 'relative'}}>*/}\r\n\r\n      <Grid\r\n        container\r\n        style={{ height: \"100%\", width: \"100%\", padding: 10, overflow: \"auto\" }}\r\n        m={0}\r\n        flexDirection={\"column\"}\r\n        flexWrap={\"nowrap\"}\r\n        sx={{\r\n          bgcolor: (theme) => theme.palette.background.paper,\r\n          color: (theme) => theme.palette.primary.contrastText,\r\n        }}\r\n      >\r\n        {currentDetail ? (\r\n          <DetailCard\r\n            data={currentDetail}\r\n            onSelect={onSelect}\r\n            meanradar={meanradar}\r\n          />\r\n        ) : (\r\n          <>Select from Event List</>\r\n        )}\r\n      </Grid>\r\n      {/*</CardContent>*/}\r\n      {/*</Card>*/}\r\n    </>\r\n  );\r\n}\r\n","import Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events}) {\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n    return <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n        {({ height, width }) => {\r\n            return <Map height={height} width={width}\r\n                        locs={eventlocs} highlight={currentDetail}/>\r\n        }}\r\n    </AutoSizer>\r\n}","import {Box, Button, Typography} from \"@mui/material\";\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Dialog from \"../Dialog\";\r\nimport {useState} from \"react\";\r\nimport FilterPanel from \"../FilterPanel\";\r\n\r\n\r\nexport default function () {\r\n    const [isOpen,setIsOpen] = useState();\r\n    return <><Button\r\n        size={\"small\"}\r\n        sx={theme=>({ position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n            borderColor: alpha(theme.palette.common.white, 0.5),\r\n            borderStyle:'solid',\r\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n            textTransform:'none',\r\n        '&:hover': {\r\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n        },\r\n        width: '100%',\r\n            paddingLeft:theme.spacing(1),\r\n            paddingRight:theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            minWidth: 250,\r\n            width: 'auto',\r\n        }})}\r\n        startIcon={<SearchIcon/>}\r\n        variant={\"contained\"}\r\n        onClick={()=>setIsOpen(true)}\r\n    >\r\n        <Typography variant={\"subtitle1\"} >Search...</Typography>\r\n        {/*<SearchIconWrapper>*/}\r\n        {/*    <SearchIcon />*/}\r\n        {/*</SearchIconWrapper>*/}\r\n        {/*<StyledInputBase*/}\r\n        {/*    placeholder=\"Search…\"*/}\r\n        {/*    inputProps={{ 'aria-label': 'search' }}*/}\r\n        {/*/>*/}\r\n    </Button>\r\n        <Dialog isOpen={isOpen} id={\"searchFilter\"}\r\n                title={\"Search\"}\r\n                message={<FilterPanel/>}\r\n                handleClose={()=>setIsOpen(false)}\r\n                fullWidth={true}\r\n                maxWidth={\"sm\"}\r\n                scroll={\"paper\"}\r\n        >\r\n\r\n        </Dialog>\r\n        </>\r\n}","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport {useSpring, animated, easings} from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport PaperCustom from \"../PaperCustom\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const {expand, ...other} = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({theme, expand}) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard({data, onSelect}) {\r\n    return <Stack spacing={1}>\r\n        <PaperCustom>\r\n            <Grid container spacing={1}>\r\n        <Grid item xs={6}>\r\n            <Typography variant=\"h4\" component=\"div\"\r\n                        onClick={data.track_name ? () => onSelect({track_name: [data.track_name]}) : null}>\r\n                {data.track_name}\r\n            </Typography>\r\n            {data.year_released && <Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n            {data.track_name_genre && <Chip label={data.track_name_genre} size={'small'}/>}\r\n        </Grid>\r\n                {data.artist_info && <Grid item>\r\n                    <Box sx={{flex: '1 0 auto', display: 'flex'}}>\r\n                        <Avatar aria-label=\"recipe\"\r\n                                src={data.artist_info.artist_image_url}\r\n                                sx={{mr: 1}}>{data.artist_info.artist_name[0]}</Avatar>\r\n                        <div>\r\n                            <Typography variant=\"h5\" color={'text.primary'}>{data.artist_info.artist_name}</Typography>\r\n                            <Typography variant=\"subtitle2\">from {data.artist_info.artist_country ?? \"N/A\"}</Typography>\r\n                        </div>\r\n                    </Box>\r\n                    {data.artist_info.artist_genres && (data.artist_info.artist_genres.map(t => <Chip key={t} label={t}\r\n                                                                                          size={'small'}/>))}\r\n                </Grid>}\r\n            </Grid>\r\n        </PaperCustom>\r\n        <PaperCustom>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                    <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                    <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <iframe loading=\"lazy\"\r\n                            src={`https://open.spotify.com/embed/track/${data.track_id}`}\r\n                            width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                            data-mce-fragment=\"1\"></iframe>\r\n                </Grid>\r\n        {(data.spotify_uri || data.track_YouTubeID) && <>\r\n            {data.spotify_uri && <Grid item xs={12}>\r\n                <iframe loading=\"lazy\"\r\n                        src={data.spotify_uri.replace('com/track', 'com/embed/track')}\r\n                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                        data-mce-fragment=\"1\"></iframe>\r\n            </Grid>}\r\n            {data.track_YouTubeID && <Grid item xs={12}>\r\n                <iframe width={'100%'} height={'auto'}\r\n                        loading=\"lazy\"\r\n                        src={`https://www.youtube-nocookie.com/embed/${data.track_YouTubeID}`}\r\n                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                        allowFullScreen\r\n                />\r\n            </Grid>}\r\n        </>}\r\n            </Grid>\r\n        </PaperCustom>\r\n    </Stack>\r\n\r\n\r\n}\r\n\r\nexport default DetailCard","import {\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport ListenCard from \"../ListenCard\";\r\n\r\nexport default function ({currentDetail,onSelect,sx={}}) {\r\n\r\n    return (<>\r\n            <Grid container style={{height:'100%', width:'100%',padding:10,overflow:'auto'}}\r\n                  m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                  sx={{bgcolor:theme=>theme.palette.background.paper, color: theme=> theme.palette.primary.contrastText}}>\r\n                {currentDetail ?\r\n                    <ListenCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                        List</>}\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import {IconButton, Menu, MenuItem} from \"@mui/material\";\r\nimport {Language as LanguageIcon} from \"@mui/icons-material\";\r\nimport allLocales from \"../../config/locales\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'language' })}\r\n        onClick={handleClick}\r\n    >\r\n        <LanguageIcon/> <span style={{fontSize:'small',paddingLeft:5,textTransform:\"uppercase\"}}>{locale}</span>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"language-menu\"\r\n        aria-labelledby=\"demo-positioned-button\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            allLocales.map(l=><MenuItem\r\n                key={l.locale}\r\n                selected={l.locale === locale}\r\n                onClick={()=>setLocale(l.locale)}\r\n            >\r\n                <LanguageIcon style={{paddingRight:5}}/> {intl.formatMessage({ id: l.locale })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {FormatSize} from \"@mui/icons-material\";\r\nimport {Box, IconButton, Menu} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\nimport FontsizeControl from \"../FontsizeControl\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DECREASE_FONT_SIZE, INCREASE_FONT_SIZE} from \"../../reducer/actions/setting\";\r\n\r\n\r\nexport default function ({intl}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const { setLocale, locale = 'en' } = useLocale();\r\n    const open = Boolean(anchorEl);\r\n    const dispatch = useDispatch();\r\n    const changeFontSize = (isIncrease)=>{\r\n        if (isIncrease)\r\n            dispatch({ type: INCREASE_FONT_SIZE});\r\n        else\r\n            dispatch({ type: DECREASE_FONT_SIZE})\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return <>\r\n        <IconButton title={intl.formatMessage({id: 'Font size'})}\r\n                    onClick={handleClick}>\r\n            <FormatSize/>\r\n        </IconButton>\r\n        <Menu\r\n            id=\"font-size-menu\"\r\n            aria-labelledby=\"demo-positioned-button\"\r\n            anchorEl={anchorEl}\r\n            open={open}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n            }}\r\n        >\r\n            <Box sx={{paddingLeft:2,paddingRight:2}}>\r\n                <FontsizeControl title={intl.formatMessage({id: 'Font size'})} onChange={changeFontSize}/>\r\n            </Box>\r\n        </Menu>\r\n    </>\r\n}","import {Checkbox, IconButton, ListItemIcon, Menu, MenuItem} from \"@mui/material\";\r\nimport {Check, SpaceDashboard as SpaceDashboardIcon} from \"@mui/icons-material\";\r\nimport {useState} from \"react\";\r\nimport {useLocale} from \"base-shell/lib/providers/Locale\";\r\n\r\nexport default function ({intl,layoutItems,onChange}) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return <><IconButton\r\n        title={intl.formatMessage({ id: 'Layout' })}\r\n        onClick={handleClick}\r\n    >\r\n        <SpaceDashboardIcon/>\r\n    </IconButton>\r\n    <Menu\r\n        id=\"layout-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n        transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'left',\r\n        }}\r\n    >\r\n        {\r\n            Object.keys(layoutItems).map(k=><MenuItem\r\n                key={k}\r\n                onClick={()=>onChange(k,layoutItems[k],!layoutItems[k].val)}\r\n            >\r\n                <ListItemIcon>\r\n                    <Checkbox checked={layoutItems[k].val} />\r\n                </ListItemIcon>{intl.formatMessage({ id: layoutItems[k].key })}\r\n            </MenuItem>)\r\n        }\r\n    </Menu>\r\n        </>\r\n}","import {Box, IconButton, Menu, MenuItem, Typography} from \"@mui/material\";\r\nimport {\r\n    Brightness4 as Brightness4Icon,\r\n    BrightnessHigh as BrightnessHighIcon,\r\n    FormatSize,\r\n    Help as HelpIcon, Language, Menu as MenuIcon\r\n} from \"@mui/icons-material\";\r\nimport SpaceDashboardIcon from \"@mui/icons-material/SpaceDashboard\";\r\nimport {useTheme as useAppTheme} from \"material-ui-shell/lib/providers/Theme\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useIntl} from \"react-intl\";\r\nimport LanguageMenu from \"./LanguageMenu\";\r\nimport FontSizeMenu from \"./FontSizeMenu\";\r\nimport LayoutMenu from \"./LayoutMenu\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ({layoutItems,layoutItemsOnChange=()=>{}}){\r\n    const intl = useIntl();\r\n    const dispatch = useDispatch();\r\n    const { toggleThisTheme, isDarkMode } = useAppTheme()\r\n    const [anchorElNav, setAnchorElNav] = useState(null);\r\n    const [anchorElUser, setAnchorElUser] = useState(null);\r\n\r\n    const handleOpenNavMenu = (event) => {\r\n        setAnchorElNav(event.currentTarget);\r\n    };\r\n    const handleOpenUserMenu = (event) => {\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseNavMenu = () => {\r\n        setAnchorElNav(null);\r\n    };\r\n\r\n    const handleCloseUserMenu = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    return <>\r\n        <img src={require('../../assets/logo.png')} loading=\"lazy\" style={{height:'auto',width:150}}></img>\r\n        <span style={{marginRight:5}}>v{process.env.REACT_APP_DATA_APP_VERSION}</span>\r\n        <IconButton title={\"About us\"} size={\"small\"} sx={{transform:\"translate(-10px,10px)\"}}\r\n        onClick={()=>dispatch({ type: SET_MENU, opened: true })}>\r\n            <HelpIcon fontSize=\"inherit\"/>\r\n        </IconButton>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                    display: { xs: 'block', md: 'none' },\r\n                }}\r\n            >\r\n\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <IconButton\r\n                            title={\"Toggle theme\"}\r\n                            onClick={() => {\r\n                                toggleThisTheme('isDarkMode')\r\n                            }}\r\n                        >\r\n                            {isDarkMode ? (\r\n                                <BrightnessHighIcon/>\r\n                            ) : (\r\n                                <Brightness4Icon/>\r\n                            )}\r\n                        </IconButton>\r\n                        {isDarkMode ? (\r\n                            <>Light Mode</>\r\n                        ) : (\r\n                            <>Dark Mode</>\r\n                        )}\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n                        Layout\r\n                    </Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <FontSizeMenu intl={intl}/>\r\n                        Font size\r\n                    </Typography>\r\n                </MenuItem><MenuItem onClick={handleCloseNavMenu}>\r\n                    <Typography textAlign=\"center\">\r\n                        <LanguageMenu intl={intl}/>\r\n                    </Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Box>\r\n        <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <IconButton\r\n                title={\"Toggle theme\"}\r\n                onClick={() => {\r\n                    toggleThisTheme('isDarkMode')\r\n                }}\r\n            >\r\n                {isDarkMode ? (\r\n                    <BrightnessHighIcon/>\r\n                ) : (\r\n                    <Brightness4Icon/>\r\n                )}\r\n            </IconButton>\r\n            {/*layoutItems*/}\r\n            <LayoutMenu intl={intl} layoutItems={layoutItems} onChange={layoutItemsOnChange}/>\r\n            <FontSizeMenu intl={intl}/>\r\n            <LanguageMenu intl={intl}/>\r\n        </Box>\r\n    </>\r\n}","import LegendPanel from \"../LegendPanel\";\r\nimport React from \"react\";\r\nimport {Grid} from \"@mui/material\";\r\n\r\nexport default function ({countries}) {\r\n    return <Grid sx={{position:'relative',height:'100%'}}>\r\n        <LegendPanel countries={countries} fullHeight={true}/>\r\n    </Grid>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nexport default function ({ data, name }) {\r\n  const theme = useTheme();\r\n  const [_data, set_Data] = useState([]);\r\n  useEffect(() => {\r\n    set_Data([\r\n      {\r\n        x: data,\r\n        type: \"histogram\",\r\n        marker: {\r\n          color: \"rgba(100,250,100,0.7)\",\r\n          line: {\r\n            color: \"rgba(100,250,100,1)\",\r\n            width: 1,\r\n          },\r\n        },\r\n      },\r\n    ]);\r\n  }, [data]);\r\n  return (\r\n    <Plot\r\n      data={_data}\r\n      layout={{\r\n        xaxis: { title: name },\r\n        yaxis: { showline: false, showticklabels: false, zeroline: false },\r\n        font: {\r\n          family: theme.typography.fontFamily,\r\n          size: theme.typography.fontSize,\r\n          color: theme.palette.text.primary,\r\n        },\r\n        margin: { t: 10, r: 10, l: 10, b: 40 },\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor: \"rgba(0,0,0,0)\", //theme.palette.background.paper,\r\n      }}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Histogram\",\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nexport default function ({\r\n  data,\r\n  xname,\r\n  yname,\r\n  height,\r\n  width,\r\n  onSelected,\r\n  onSelect,\r\n  onHover,\r\n  hovered,\r\n}) {\r\n  const theme = useTheme();\r\n  const [_data, set_Data] = useState([]);\r\n  useEffect(() => {\r\n    const trace = [\r\n      {\r\n        x: data.x,\r\n        y: data.y,\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n          color: data.color ?? undefined,\r\n          size: 5,\r\n        },\r\n      },\r\n    ];\r\n    if (hovered)\r\n      trace.push({\r\n        x: hovered.x,\r\n        y: hovered.y,\r\n        type: \"scatter\",\r\n        mode: \"markers\",\r\n        marker: {\r\n          color: \"rgba(0,0,0,0)\",\r\n          size: 8,\r\n          line: {\r\n            color: \"white\", // Màu viền\r\n            width: 2, // Độ rộng viền\r\n          },\r\n        },\r\n        hoverinfo: \"skip\",\r\n      });\r\n    set_Data(trace);\r\n  }, [data, hovered]);\r\n  const handleSelected = (event) => {\r\n    const points = event.points;\r\n    const selected = {};\r\n    points.forEach((point) => (selected[point.data._id] = true));\r\n\r\n    onSelected(selected);\r\n  };\r\n  return (\r\n    <Plot\r\n      data={_data}\r\n      layout={{\r\n        xaxis: { title: xname },\r\n        yaxis: { title: yname },\r\n        font: {\r\n          family: theme.typography.fontFamily,\r\n          size: theme.typography.fontSize,\r\n          color: theme.palette.text.primary,\r\n        },\r\n        autoscale: false,\r\n        height: height,\r\n        width: width,\r\n        margin: { t: 10, r: 10 },\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor: \"rgba(0,0,0,0)\", //theme.palette.background.paper,\r\n        showlegend: false,\r\n      }}\r\n      style={{ width: \"100%\", height: \"100%\" }}\r\n      config={{\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          format: \"svg\", //one of png, svg, jpeg, webp 'svg'\r\n          filename: \"Histogram\",\r\n          scale: 1, // # Multiply title/legend/axis/canvas sizes by this factor\r\n        },\r\n        showEditInChartStudio: true,\r\n        plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n      }}\r\n      onSelected={handleSelected}\r\n      onClick={(event) => {\r\n        if (event.points && event.points.length > 0) {\r\n          const point = event.points[0];\r\n          onSelect(data.data[point.pointIndex]);\r\n        }\r\n      }}\r\n      onHover={(event) => {\r\n        if (event.points && event.points.length > 0) {\r\n          const pointIndex = event.points[0].pointIndex;\r\n          onHover(data.data[pointIndex]);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { Grid, MenuItem, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport Scatterplot from \"../Scatterplot\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nfunction Scatterwrapper({\r\n  data,\r\n  selectList,\r\n  onSelect,\r\n  onHover,\r\n  hovered,\r\n  getColor,\r\n}) {\r\n  const [axis, setAxis] = useState({\r\n    x: selectList[0].key,\r\n    y: selectList[1].key,\r\n  });\r\n  const [scatterdata, setScatterdata] = useState({ x: [], y: [], data: [] });\r\n  const [highlight, sethighlight] = useState({ x: [], y: [], data: [] });\r\n  const selectListMap = useMemo(() => {\r\n    const m = {};\r\n    selectList.forEach((d) => {\r\n      m[d.key] = d.label;\r\n    });\r\n    return m;\r\n  }, [selectList]);\r\n  useEffect(() => {\r\n    const scatterdata = { x: [], y: [], data: [], color: [] };\r\n    data.forEach((d) => {\r\n      scatterdata.x.push(d[axis.x]);\r\n      scatterdata.y.push(d[axis.y]);\r\n      scatterdata.data.push(d);\r\n      scatterdata.color.push(getColor(d));\r\n    });\r\n    debugger;\r\n    setScatterdata(scatterdata);\r\n  }, [axis, data, getColor]);\r\n  useEffect(() => {\r\n    if (hovered)\r\n      sethighlight({\r\n        x: [hovered[axis.x]],\r\n        y: [hovered[axis.y]],\r\n        data: [hovered],\r\n      });\r\n    else sethighlight({ x: [], y: [], data: [] });\r\n  }, [axis, hovered]);\r\n  return (\r\n    <Grid container direction={\"column\"} sx={{ m: 1 }}>\r\n      <Grid container item spacing={1}>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            id=\"viz-selection-scatterx\"\r\n            select\r\n            label=\"X axis\"\r\n            value={axis.x}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setAxis({ ...axis, x: event.target.value });\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`x-s-${key}`} value={key}>\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            id=\"viz-selection-scatterx\"\r\n            select\r\n            label=\"Y axis\"\r\n            value={axis.y}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(event) => {\r\n              setAxis({ ...axis, y: event.target.value });\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`y-s-${key}`} value={key}>\r\n                {label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ position: \"relative\" }}>\r\n        <AutoSizer style={{ height: \"100%\", width: \"100%\" }} disableHeight>\r\n          {({ height, width }) => {\r\n            return (\r\n              <Scatterplot\r\n                data={scatterdata}\r\n                xname={selectListMap[axis.x]}\r\n                yname={selectListMap[axis.y]}\r\n                width={width}\r\n                height={width}\r\n                onSelect={onSelect}\r\n                onHover={onHover}\r\n                hovered={highlight}\r\n              />\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default Scatterwrapper;\r\n","import {\r\n  Grid,\r\n  MenuItem,\r\n  InputLabel,\r\n  Select,\r\n  OutlinedInput,\r\n  Checkbox,\r\n  ListItemText,\r\n  FormControl,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { PCA } from \"ml-pca\";\r\nimport Scatterplot from \"../Scatterplot\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nfunction PCAplot({ data, selectList, onSelect, onHover, hovered, getColor }) {\r\n  const [axis, setAxis] = useState(selectList.map((d) => d.key));\r\n  const [scatterdata, setScatterdata] = useState({ x: [], y: [] });\r\n  const [highlight, sethighlight] = useState({ x: [], y: [], data: [] });\r\n  const [pcaob, setpcaob] = useState();\r\n  const selectListMap = useMemo(() => {\r\n    const m = {};\r\n    selectList.forEach((d) => {\r\n      m[d.key] = d;\r\n    });\r\n    return m;\r\n  }, [selectList]);\r\n  useEffect(() => {\r\n    const dataMatrix = [];\r\n    const dataValid = [];\r\n    try {\r\n      data.forEach((d) => {\r\n        let valid = true;\r\n        const m = [];\r\n        axis.forEach((key) => {\r\n          if (isNaN(d[key])) valid = false;\r\n          else m.push(d[key]);\r\n        });\r\n        if (valid) {\r\n          dataMatrix.push(m);\r\n          dataValid.push(d);\r\n        }\r\n      });\r\n\r\n      const pca = new PCA(dataMatrix);\r\n      const result = pca.predict(dataMatrix);\r\n      // PCA 2 comp\r\n      const principalComponent1 = result.data.map((row) => row[0]);\r\n      const principalComponent2 = result.data.map((row) => row[1]);\r\n      const colors = dataValid.map((row) => getColor(row));\r\n      const explain = pca.getExplainedVariance();\r\n      const scatterdata = {\r\n        x: principalComponent1,\r\n        y: principalComponent2,\r\n        color: colors,\r\n        data: dataValid,\r\n        xname: `PC1 (${Math.round(explain[0] * 1000) / 10}%)`,\r\n        yname: `PC2 (${Math.round(explain[1] * 1000) / 10}%)`,\r\n      };\r\n      setpcaob(pca);\r\n      setScatterdata(scatterdata);\r\n    } catch (e) {\r\n      setScatterdata({ x: [], y: [], xname: \"PC1\", yname: \"PC2\" });\r\n      setpcaob(null);\r\n    }\r\n  }, [data, axis]);\r\n  useEffect(() => {\r\n    if (hovered && pcaob)\r\n      try {\r\n        debugger;\r\n        const m = [];\r\n        let valid = true;\r\n        axis.forEach((key) => {\r\n          if (isNaN(hovered[key])) valid = false;\r\n          else m.push(hovered[key]);\r\n        });\r\n        if (valid) {\r\n          const p = pcaob.predict([m]);\r\n          sethighlight({\r\n            x: [p.data[0][0]],\r\n            y: [p.data[0][1]],\r\n            data: [hovered],\r\n          });\r\n        } else {\r\n          throw Error(\"Hover point invalid\");\r\n        }\r\n      } catch (e) {\r\n        sethighlight({ x: [], y: [], data: [] });\r\n      }\r\n    else sethighlight({ x: [], y: [], data: [] });\r\n  }, [axis, hovered, pcaob]);\r\n  return (\r\n    <Grid\r\n      container\r\n      direction={\"column\"}\r\n      sx={{ position: \"relative\", width: \"100%\" }}\r\n    >\r\n      <Grid item>\r\n        <FormControl sx={{ m: 1, mb: 0, maxWidth: 300 }}>\r\n          <InputLabel id=\"demo-multiple-checkbox-label\">Tag</InputLabel>\r\n\r\n          <Select\r\n            id=\"viz-selection-pca\"\r\n            multiple\r\n            value={axis}\r\n            input={<OutlinedInput label=\"PCA axis\" size=\"small\" />}\r\n            renderValue={(selected) =>\r\n              selected.map((d) => selectListMap[d]?.label).join(\", \")\r\n            }\r\n            onChange={(event) => {\r\n              const {\r\n                target: { value },\r\n              } = event;\r\n              setAxis(typeof value === \"string\" ? value.split(\",\") : value);\r\n            }}\r\n          >\r\n            {selectList.map(({ key, label }) => (\r\n              <MenuItem key={`pca-s-${key}`} value={key}>\r\n                <Checkbox checked={axis.indexOf(key) > -1} />\r\n                <ListItemText primary={label} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12} sx={{ position: \"relative\" }}>\r\n        <AutoSizer style={{ height: \"100%\", width: \"100%\" }} disableHeight>\r\n          {({ height, width }) => {\r\n            return (\r\n              <Scatterplot\r\n                data={scatterdata}\r\n                xname={scatterdata.xname}\r\n                yname={scatterdata.yname}\r\n                width={width}\r\n                height={width}\r\n                onSelect={onSelect}\r\n                onHover={onHover}\r\n                hovered={highlight}\r\n              />\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default PCAplot;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { Card, Stack, Typography, Unstable_Grid2 as Grid } from \"@mui/material\";\r\nimport { scaleLinear, extent } from \"d3\";\r\nexport default function Barchart({ data, fullHeight }) {\r\n  const widthScale = useMemo(() => {\r\n    return scaleLinear()\r\n      .range([0.1, 1])\r\n      .domain(\r\n        extent(data, (d) => {\r\n          return d?.count;\r\n        })\r\n      );\r\n  }, [data]);\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item sx={{ maxWidth: 300, textAlign: \"right\" }}>\r\n        <Stack\r\n          m={1}\r\n          sx={{\r\n            maxHeight: fullHeight ? null : \"30vh\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {data.map((d) => (\r\n            <Typography key={d[\"title\"]} variant={\"subtitle2\"}>\r\n              {d[\"title\"]}\r\n            </Typography>\r\n          ))}\r\n        </Stack>\r\n      </Grid>\r\n      <Grid item flexGrow={2}>\r\n        <Stack\r\n          m={1}\r\n          sx={{\r\n            maxHeight: fullHeight ? null : \"30vh\",\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          {data.map((d) => (\r\n            <Typography key={d[\"title\"]} variant={\"subtitle2\"}>\r\n              <div\r\n                style={{\r\n                  width: `${80 * (widthScale(d.count) ?? 1)}%`,\r\n                  height: 10,\r\n                  backgroundColor: d.color,\r\n                  display: \"inline-block\",\r\n                  marginRight: 5,\r\n                }}\r\n              ></div>\r\n              {d.count}\r\n            </Typography>\r\n          ))}\r\n        </Stack>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import SongListDetail from \"../SongListDetail\";\r\nimport React, { useCallback, useEffect, useState, useMemo } from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n  Stack,\r\n  Typography,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport Histogram from \"./Histogram\";\r\nimport { metricList, rankMetricList } from \"../../Providers/Database/ulti\";\r\nimport Scatterwrapper from \"./Scatterwrapper\";\r\nimport PCAplot from \"./PCAplot\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport { colorArr } from \"../Earth\";\r\nimport { scaleOrdinal, maxIndex, rollup } from \"d3\";\r\nimport { isArray } from \"lodash\";\r\nimport Barchart from \"./Barchart\";\r\n\r\nconst TOP = 10;\r\nfunction VizPanel({ countries, data, source, onChangeSource, onSelect }) {\r\n  const [histindata, sethisindata] = useState([]);\r\n  const [rankdata, setrankdata] = useState([]);\r\n  const [colorKey, setColorKey] = useState(rankMetricList[0].key);\r\n  const [hovered, sethovered] = useState(null);\r\n  useEffect(() => {\r\n    const histindata = metricList.map(({ key, label }) => ({\r\n      key,\r\n      label,\r\n      data: data.map((d) => d[key]),\r\n    }));\r\n    sethisindata(histindata);\r\n  }, [data]);\r\n  const onHover = useCallback((data) => {\r\n    sethovered(data);\r\n  }, []);\r\n\r\n  const [rankMap, setrankMap] = useState({\r\n    data: {},\r\n    colorsCategory: () => {},\r\n    getColor: () => {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    const countMap = {};\r\n    data.forEach((d) => {\r\n      if (isArray(d[colorKey])) {\r\n        d[colorKey].forEach((e) => (countMap[e] = (countMap[e] ?? 0) + 1));\r\n      } else if (d[colorKey] && d[colorKey] !== null) {\r\n        countMap[d[colorKey]] = (countMap[d[colorKey]] ?? 0) + 1;\r\n      }\r\n    });\r\n    let rankData = [];\r\n    Object.keys(countMap).forEach((k) => {\r\n      rankData.push({ title: k, count: countMap[k] });\r\n    });\r\n    rankData.sort((a, b) => b.count - a.count);\r\n    rankData = rankData.slice(0, TOP);\r\n    const colorsCategory = (function (otherColor = \"#ececec\") {\r\n      const scale = scaleOrdinal(colorArr);\r\n      let master = (val) => {\r\n        if (!val || val === \"\" || val.trim === \"\") return \"#444444\";\r\n        const domain = scale.domain();\r\n        if (domain.find((d) => d === val) || domain.length < TOP)\r\n          return scale(val);\r\n        else return otherColor;\r\n      };\r\n      master.domain = scale.domain;\r\n      master.range = scale.range;\r\n      return master;\r\n    })();\r\n    rankData.forEach((d) => (d.color = colorsCategory(d.title)));\r\n    const r = {};\r\n    rankdata.forEach((element) => {\r\n      r[element[\"title\"]] = element;\r\n    });\r\n    setrankMap({\r\n      data: r,\r\n      colorsCategory,\r\n      getColor: (d) => {\r\n        if (isArray(d[colorKey])) {\r\n          const i = maxIndex(d[colorKey], (e) => r[e]?.count);\r\n          return colorsCategory(d[colorKey][i]);\r\n        } else {\r\n          return colorsCategory(d[colorKey]);\r\n        }\r\n      },\r\n    });\r\n    setrankdata(rankData);\r\n  }, [colorKey, data]);\r\n  return (\r\n    <Grid container sx={{ position: \"relative\", height: \"100%\" }} spacing={1}>\r\n      <Grid item xs={3}>\r\n        <SongListDetail countries={countries} />\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <Grid container spacing={{ xs: 2, md: 3 }} sx={{ pt: 2 }}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"viz-selection-source\"\r\n              select\r\n              label=\"Viz source\"\r\n              value={source}\r\n              variant=\"standard\"\r\n              fullWidth\r\n              onChange={(event) => {\r\n                onChangeSource(event.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value=\"event\">Event list</MenuItem>\r\n              <MenuItem value=\"selected\">Selected list</MenuItem>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Divider>Track histogram</Divider>\r\n          </Grid>\r\n          <Grid item xs={12} container justifyContent=\"center\" spacing={1}>\r\n            {histindata.map(({ key, label, data }) => (\r\n              <Grid key={key} item style={{ height: 120, width: 300 }}>\r\n                <Histogram name={label} data={data} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card\r\n              sx={{\r\n                pointerEvents: \"all\",\r\n                overflowY: \"auto\",\r\n                backgroundColor: (theme) =>\r\n                  semicolor(theme.palette.background.paper),\r\n              }}\r\n            >\r\n              <Stack\r\n                direction={\"collumn\"}\r\n                spacing={2}\r\n                gap={2}\r\n                sx={{ m: 1, p: 0 }}\r\n                justifyContent={\"center\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Typography variant={\"h3\"}>Top 10 </Typography>\r\n                <TextField\r\n                  size=\"small\"\r\n                  select\r\n                  value={colorKey}\r\n                  onChange={(event) => {\r\n                    setColorKey(event.target.value);\r\n                  }}\r\n                >\r\n                  {rankMetricList.map(({ key, label }) => (\r\n                    <MenuItem key={key} value={key}>\r\n                      {label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Stack>\r\n              <Barchart data={rankdata} />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Scatterwrapper\r\n              data={data}\r\n              selectList={metricList}\r\n              onSelect={onSelect}\r\n              onHover={onHover}\r\n              hovered={hovered}\r\n              getColor={rankMap.getColor}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <PCAplot\r\n              data={data}\r\n              selectList={metricList}\r\n              onSelect={onSelect}\r\n              onHover={onHover}\r\n              hovered={hovered}\r\n              getColor={rankMap.getColor}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VizPanel;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\nimport Page from \"../../containers/Page/Page\";\r\nimport { useDatabase } from \"../../Providers/Database\";\r\nimport {\r\n  Backdrop,\r\n  Box,\r\n  Unstable_Grid2 as Grid,\r\n  LinearProgress,\r\n  Paper,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  Stack,\r\n  IconButton,\r\n  Collapse,\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable/index\";\r\nimport {\r\n  Responsive as ResponsiveGridLayout,\r\n  WidthProvider,\r\n} from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setFilter,\r\n  setFilters,\r\n  selectFilters,\r\n} from \"../../reducer/streamfilters\";\r\nimport { semicolor } from \"../../containers/LayoutContainer/theme\";\r\nimport { useQuestions } from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport { SET_MENU } from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from \"@mui/icons-material/Minimize\";\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport * as FlexLayout from \"flexlayout-react\";\r\nimport \"./layout.css\";\r\nimport {\r\n  AddCircle,\r\n  Brightness4 as Brightness4Icon,\r\n  BrightnessHigh as BrightnessHighIcon,\r\n} from \"@mui/icons-material\";\r\nimport EventMap from \"../../components/EventMap\";\r\nimport Search from \"../../components/Search\";\r\nimport MediaDetail from \"../../components/MediaDetail\";\r\nimport AppHeader from \"../../components/AppHeader\";\r\nimport { actionCreators } from \"../../reducer/actions/selectedList\";\r\nimport {\r\n  fields,\r\n  fieldsWithoutSelected,\r\n} from \"../../components/EventTable/fields\";\r\nimport SongListDetail from \"../../components/SongListDetail\";\r\nimport { useLog } from \"../../Providers/Firebase\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport VizPanel from \"components/VizPanel\";\r\nimport { metricRadarList } from \"../../Providers/Database/ulti\";\r\nimport { mean as d3mean } from \"d3\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nconst LandingPage = () => {\r\n  // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n  const dispatch = useDispatch();\r\n  const intl = useIntl();\r\n  // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n  const filters = useSelector(selectFilters);\r\n  // const { appConfig } = useConfig()\r\n  const {\r\n    getList,\r\n    isLoading,\r\n    getEvents,\r\n    requestEvents,\r\n    requestDetail,\r\n    getDetail,\r\n    setFuncCollection,\r\n    requestVizdata,\r\n  } = useDatabase();\r\n  const [zoomLoc, setZoomLoc] = useState();\r\n  const [isFullView, setIsFullView] = useState(true);\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n  const [layoutItems, setLayoutItems] = useState({\r\n    Earth: { key: \"Earth View\", val: true, disable: true },\r\n    eventList: { key: \"Event List\", val: true },\r\n    eventDetail: { key: \"Event Details\", val: true },\r\n    eventMap: { key: \"Event List Map\", val: true },\r\n    mediaDetail: { key: \"Listen\", val: true },\r\n    eventSelectedList: { key: \"Selected Events\", val: true },\r\n    eventListDetail: { key: \"Event List Visualization\", val: true },\r\n  });\r\n  const toolbarRef = useRef(null);\r\n  const layoutRef = useRef(null);\r\n  const currentDetail = getDetail();\r\n  const eventTotalData = useSelector((state) => state.seletedList.currentList);\r\n  const eventSelectedData = useSelector((state) =>\r\n    Array.from(state.seletedList.items.values())\r\n  );\r\n  const { setlocation, logEvents } = useLog();\r\n  const query = useQuery();\r\n  const location = useLocation();\r\n  const [vizsource, setVizSource] = useState(\"event\");\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setlocation(position.coords);\r\n          setZoomLoc({\r\n            lng: position.coords.longitude,\r\n            lat: position.coords.latitude,\r\n          });\r\n        },\r\n        () => {}\r\n      );\r\n    }\r\n    dispatch({ type: SET_MENU, opened: true });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentDetail)\r\n      setZoomLoc({ lng: currentDetail.long, lat: currentDetail.lat });\r\n  }, [currentDetail]);\r\n\r\n  const isLoadingInit = isLoading(\"rawData\");\r\n  const isLoadingEvent = isLoading(\"events\");\r\n  const isLoadingLocs = isLoading(\"locs\");\r\n  const [firstLoad, setFirstLoad] = useState(true);\r\n  useEffect(() => {\r\n    if (!isLoadingInit) {\r\n      if (firstLoad) {\r\n        setFirstLoad(false);\r\n        if (!(query && query.get(\"selected\"))) requestEvents(filters, 1000);\r\n      } else {\r\n        requestEvents(filters, 1000);\r\n      }\r\n    }\r\n  }, [isLoadingInit, filters, firstLoad]);\r\n  const onSelectStream = useCallback(\r\n    (data) => {\r\n      debugger;\r\n      requestDetail(data);\r\n    },\r\n    [getEvents]\r\n  );\r\n\r\n  const onSelect = useCallback((value, extra) => {\r\n    if (extra) setZoomLoc({ lng: extra.long, lat: extra.lat });\r\n    if (Object.keys(value)[0]) {\r\n      logEvents(\"click_earth\", { ...value });\r\n    }\r\n    dispatch(setFilters({ value }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    requestVizdata(\r\n      (vizsource ? eventTotalData : eventSelectedData).map((d) => d._id)\r\n    );\r\n  }, [vizsource, vizsource ? eventTotalData : eventSelectedData]);\r\n\r\n  const meanRadar = useMemo(() => {\r\n    const total = getList(\"vizdata\");\r\n    const meanradar = {};\r\n    metricRadarList.forEach(({ key }) => {\r\n      meanradar[key] = d3mean(total, (d) => d[key]);\r\n    });\r\n    return meanradar;\r\n  }, [getList(\"vizdata\")]);\r\n\r\n  // const onTogleWin = useCallback((key)=>{\r\n  //     setLayoutItems({...layoutItems,[key]:!layoutItems[key]});\r\n  // },[layoutItems])\r\n\r\n  // const generateLayout = (k)=>{\r\n  //     switch (k){\r\n  //         case 'eventList':\r\n  //             return <EventTable data={getEvents()}\r\n  //                                isLoadingData={isLoadingEvent}\r\n  //                                onSelectRow={onSelectStream}\r\n  //                                highlightId={currentDetail}\r\n  //                                onTogleWin={()=>onTogleWin(\"eventList\")}\r\n  //             />\r\n  //         case 'eventDetail':\r\n  //             return <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n  //                                 events={getEvents()}\r\n  //                                 locs={getList('locs')}\r\n  //                                 sx={{height:'100%',position:'relative'}}\r\n  //                                 onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n  //             />\r\n  //         default:\r\n  //             return ''\r\n  //     }\r\n  // }\r\n\r\n  const [layouts, setLayouts] = useState(() =>\r\n    FlexLayout.Model.fromJson({\r\n      global: {\r\n        // \"splitterSize\": 1,\r\n        // \"splitterExtra\": 4,\r\n        tabEnableFloat: true,\r\n        tabSetMinWidth: 100,\r\n        tabSetMinHeight: 100,\r\n        borderMinSize: 100,\r\n      },\r\n      borders: [\r\n        {\r\n          type: \"border\",\r\n          location: \"top\",\r\n          size: 400,\r\n          active: true,\r\n          children: [],\r\n        },\r\n        {\r\n          type: \"border\",\r\n          location: \"left\",\r\n          size: windowDimensions.width * 0.4,\r\n          children: [\r\n            {\r\n              type: \"tab\",\r\n              name: \"Earth View\",\r\n              enableClose: false,\r\n              component: \"Earth\",\r\n            },\r\n          ],\r\n          selected: 0,\r\n        },\r\n      ],\r\n      layout: {\r\n        type: \"row\",\r\n        weight: 100,\r\n        children: [\r\n          {\r\n            type: \"row\",\r\n            children: [\r\n              {\r\n                type: \"row\",\r\n                children: [\r\n                  {\r\n                    type: \"tabset\",\r\n                    weight: 50,\r\n                    children: [\r\n                      {\r\n                        type: \"tab\",\r\n                        name: \"Event List\",\r\n                        component: \"eventList\",\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    type: \"tabset\",\r\n                    weight: 50,\r\n                    children: [\r\n                      {\r\n                        type: \"tab\",\r\n                        name: \"Selected Events\",\r\n                        component: \"eventSelectedList\",\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n              {\r\n                type: \"tabset\",\r\n                weight: 50,\r\n                children: [\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event Detail\",\r\n                    component: \"eventDetail\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Listen\",\r\n                    component: \"mediaDetail\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event List Map\",\r\n                    component: \"eventMap\",\r\n                  },\r\n                  {\r\n                    type: \"tab\",\r\n                    name: \"Event List Visualization\",\r\n                    component: \"eventListDetail\",\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actionCreators.newList(getEvents()));\r\n  }, [getEvents()]);\r\n\r\n  const getSwitchView = useCallback(\r\n    (newval) => {\r\n      if (newval !== undefined) setIsFullView(newval);\r\n      return isFullView;\r\n    },\r\n    [isFullView]\r\n  );\r\n  const factory = (node) => {\r\n    let component = node.getComponent();\r\n    switch (component) {\r\n      case \"eventList\":\r\n        return (\r\n          <EventTable\r\n            id=\"eventListTable\"\r\n            data={eventTotalData ?? []}\r\n            columns={fields}\r\n            isLoadingData={isLoadingEvent}\r\n            onSelectRow={onSelectStream}\r\n            highlightId={currentDetail}\r\n            totalData={eventTotalData}\r\n            selectedData={eventSelectedData}\r\n            onSendToList={(l) => dispatch(actionCreators.addsToBasket(l))}\r\n            onRemoveFromList={(l) => dispatch(actionCreators.removeItems(l))}\r\n            // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n            mainurl={location}\r\n          />\r\n        );\r\n      case \"eventListDetail\":\r\n        return (\r\n          <VizPanel\r\n            countries={\r\n              isFullView ? getList(\"countries_full\") : getList(\"countries\")\r\n            }\r\n            data={getList(\"vizdata\")}\r\n            source={vizsource}\r\n            onChangeSource={(source) => {\r\n              setVizSource(source);\r\n              // requestVizdata(\r\n              //   (source ? eventTotalData : eventSelectedData).map((d) => d._id)\r\n              // )\r\n            }}\r\n            onSelect={onSelectStream}\r\n          />\r\n        );\r\n      case \"eventSelectedList\":\r\n        return (\r\n          <EventTable\r\n            id=\"eventSelectedListTable\"\r\n            data={eventSelectedData}\r\n            columns={fieldsWithoutSelected}\r\n            isLoadingData={isLoadingEvent}\r\n            onSelectRow={onSelectStream}\r\n            highlightId={currentDetail}\r\n            totalData={eventTotalData}\r\n            selectedData={eventSelectedData}\r\n            disableAdding={true}\r\n            onSendToList={(l) => dispatch(actionCreators.addsToBasket(l))}\r\n            onRemoveFromList={(l) => dispatch(actionCreators.removeItems(l))}\r\n            // onTogleWin={()=>onTogleWin(\"eventList\")}\r\n            mainurl={location}\r\n          />\r\n        );\r\n      case \"eventMap\":\r\n        return (\r\n          <EventMap\r\n            currentDetail={currentDetail}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n          />\r\n        );\r\n      case \"eventDetail\":\r\n        return (\r\n          <EventDetail\r\n            currentDetail={currentDetail}\r\n            onSelect={onSelect}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n            sx={{ height: \"100%\", position: \"relative\" }}\r\n            meanradar={meanRadar}\r\n            // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n          />\r\n        );\r\n      case \"mediaDetail\":\r\n        return (\r\n          <MediaDetail\r\n            currentDetail={currentDetail}\r\n            onSelect={onSelect}\r\n            events={getEvents()}\r\n            locs={getList(\"locs\")}\r\n            sx={{ height: \"100%\", position: \"relative\" }}\r\n            // onTogleWin={()=>onTogleWin(\"eventDetail\")}\r\n          />\r\n        );\r\n      case \"Earth\":\r\n        return (\r\n          <AutoSizer style={{ height: \"100%\", width: \"100%\" }}>\r\n            {({ height, width }) => {\r\n              return (\r\n                <Earth3D\r\n                  locs={isFullView ? getList(\"locs_full\") : getList(\"locs\")}\r\n                  countries={\r\n                    isFullView\r\n                      ? getList(\"countries_full\")\r\n                      : getList(\"countries\")\r\n                  }\r\n                  onSelect={onSelect}\r\n                  onSelectLegend={setFuncCollection}\r\n                  width={width}\r\n                  height={height}\r\n                  toolbarRef={toolbarRef}\r\n                  zoomLoc={zoomLoc}\r\n                  getSwitchView={getSwitchView}\r\n                />\r\n              );\r\n            }}\r\n          </AutoSizer>\r\n        );\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n  // const onRenderTabSet = (tabSetNode, renderValues) =>{\r\n  //     // debugger\r\n  //     if (!Object.keys(layoutItems).reduce((pre,k)=>pre && (layoutItems[k].val),true)) {\r\n  //         renderValues.stickyButtons.push(<AddCircle\r\n  //             color={'primary'}\r\n  //             title= \"Add\"\r\n  //             key= \"Add button\"\r\n  //             className={\"flexlayout__tab_toolbar_button\"}\r\n  //             style={{width: \"1.1em\", height: \"1.1em\"}}\r\n  //         />)\r\n  //         // renderValues.stickyButtons.push(React.createElement(\"img\", {\r\n  //         //     src: \"images/add.svg\",\r\n  //         //     alt: \"Add\",\r\n  //         //     key: \"Add button\",\r\n  //         //     title: \"Add Tab (using onRenderTabSet callback, see Demo)\",\r\n  //         //     style: {width: \"1.1em\", height: \"1.1em\"},\r\n  //         //     className: \"flexlayout__tab_toolbar_button\",\r\n  //         //     // onClick: function () { return _this.onAddFromTabSetButton(node); }\r\n  //         // }));\r\n  //     }\r\n  // }\r\n  const layoutItemsOnChange = useCallback(\r\n    (key, item, isOn) => {\r\n      debugger;\r\n      if (layoutRef.current) {\r\n        if (isOn)\r\n          layoutRef.current.addTabToActiveTabSet({\r\n            name: item.key,\r\n            component: key,\r\n          });\r\n        else {\r\n          // layouts\r\n          // find id\r\n          const current = Object.keys(layouts._idMap).find(\r\n            (k) => layouts._idMap[k]._attributes.component === key\r\n          );\r\n          if (current) layouts.doAction(FlexLayout.Actions.deleteTab(current));\r\n        }\r\n        layoutItems[key].val = isOn;\r\n        setLayoutItems({ ...layoutItems });\r\n      }\r\n    },\r\n    [layoutRef, layouts]\r\n  );\r\n  return (\r\n    <Page\r\n      appBarLeftContent={\r\n        <AppHeader\r\n          layoutItems={layoutItems}\r\n          layoutItemsOnChange={layoutItemsOnChange}\r\n        />\r\n      }\r\n      appBarContent={\r\n        <>\r\n          <Search />\r\n          <div ref={toolbarRef}></div>\r\n          <UndoRedo />\r\n        </>\r\n      }\r\n    >\r\n      {/*<div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>*/}\r\n      {/*    <AutoSizer style={{ height: 'calc(100vh - 64px)', width: '100%' }} >*/}\r\n      {/*        {({ height, width }) => {*/}\r\n      {/*            return <Earth3D locs={getList('locs')}*/}\r\n      {/*                            countries={getList('countries')}*/}\r\n      {/*                            onSelect={onSelect}*/}\r\n      {/*                            onSelectLegend={setFuncCollection}*/}\r\n      {/*                            width={width} height={height}*/}\r\n      {/*                            toolbarRef={toolbarRef}*/}\r\n      {/*                            zoomLoc={zoomLoc}*/}\r\n      {/*            />*/}\r\n      {/*        }}*/}\r\n      {/*    </AutoSizer>*/}\r\n      {/*</div>*/}\r\n      <div\r\n        style={{\r\n          height: \"100%\",\r\n          position: \"relative\",\r\n          pointerEvents: \"all\",\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        <FlexLayout.Layout\r\n          model={layouts}\r\n          ref={layoutRef}\r\n          factory={factory}\r\n          tabEnableRenderOnDemand={false}\r\n          // onRenderTabSet={onRenderTabSet}\r\n          popoutURL=\"#/popout\"\r\n          realtimeResize={false}\r\n          onModelChange={(m) => {\r\n            // check tab\r\n            Object.keys(layoutItems).forEach(\r\n              (k) => (layoutItems[k].val = false)\r\n            );\r\n            // m._root._children.forEach(m=>m._children.forEach(m=> {\r\n            //     if (m._attributes.component&&layoutItems[m._attributes.component])\r\n            //         layoutItems[m._attributes.component].val = true\r\n            //     else\r\n            //          m._children.forEach(m => layoutItems[m._attributes.component]?(layoutItems[m._attributes.component].val = true):'')\r\n            // }));\r\n            // m._borders._borders.forEach(m=>m._children.forEach(m=>layoutItems[m._attributes.component].val=true));\r\n            Object.values(m._idMap).forEach((m) => {\r\n              if (\r\n                m._attributes.component &&\r\n                layoutItems[m._attributes.component]\r\n              )\r\n                layoutItems[m._attributes.component].val = true;\r\n            });\r\n            setLayoutItems(layoutItems);\r\n            setLayouts(m);\r\n          }}\r\n        />\r\n\r\n        {/*<AutoSizer style={{ minHeight: '100%', width: '100%', position:'relative' }} >*/}\r\n        {/*    {({ height, width }) => {*/}\r\n        {/*        return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}*/}\r\n        {/*                      layouts={layouts}*/}\r\n        {/*                     onBreakpointChange={onBreakpointChange}*/}\r\n        {/*                     onLayoutChange={onLayoutChange}*/}\r\n        {/*                      preventCollision={true}*/}\r\n        {/*                      compactType={null}*/}\r\n        {/*                      breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}*/}\r\n        {/*                     margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}*/}\r\n        {/*                         width={width}*/}\r\n        {/*                         rowHeight={(height-20)/10 -10}*/}\r\n        {/*                         height={height}*/}\r\n        {/*                      style={{position:'relative',height:height, pointerEvents:'all'}} >*/}\r\n        {/*            {*/}\r\n        {/*                Object.keys(layoutItems).map(k=>layoutItems[k]?<div key={k} style={{pointerEvents:'all'}}>*/}\r\n        {/*                    {generateLayout(k)}*/}\r\n        {/*                </div>:'')*/}\r\n        {/*            }*/}\r\n        {/*</ResponsiveGridLayout>}}*/}\r\n        {/*</AutoSizer>*/}\r\n      </div>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={isLoadingInit || isLoadingLocs}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            width: \"50%\",\r\n            flexDirection: \"column\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <LinearProgress\r\n              variant=\"determinate\"\r\n              value={isLoadingInit ? 40 : isLoadingLocs ? 90 : 100}\r\n            />\r\n          </Box>\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <h2>\r\n              {isLoadingInit\r\n                ? \"Read data....\"\r\n                : isLoadingLocs\r\n                ? \"Process data...\"\r\n                : \"Done!\"}\r\n            </h2>\r\n          </Box>\r\n        </Box>\r\n      </Backdrop>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import {useLocation} from \"react-router-dom\";\r\nimport {useDatabase} from \"../Database\";\r\nimport {useMemo} from \"react\";\r\n\r\nexport default function useQuery() {\r\n    const { search } = useLocation();\r\n    const {requestDetail, getDataFromShortenLink} = useDatabase();\r\n    return useMemo(() => {\r\n        const queryObject = new URLSearchParams(window.location.href.split('?')[1]);\r\n        if (queryObject.get(\"selected\")) {\r\n            getDataFromShortenLink(queryObject.get(\"selected\"));\r\n\r\n            return queryObject;\r\n        }\r\n        if (queryObject.get(\"id\")) {\r\n            requestDetail({_id: queryObject.get(\"id\")});\r\n            return queryObject;\r\n        }\r\n    }, [search]);\r\n    \r\n}"],"names":["Transition","React","props","ref","_jsx","Slide","_objectSpread","direction","BootstrapDialogTitle","children","onClose","other","_objectWithoutProperties","_excluded","_jsxs","DialogTitle","sx","m","p","IconButton","onClick","position","right","top","color","theme","palette","grey","CloseIcon","_ref","_ref$isProcessing","isProcessing","_ref$isOpen","isOpen","_ref$message","id","message","_ref$title","title","_ref$action","action","_ref$haveButton","haveButton","_ref$handleAction","handleAction","_ref$handleClose","handleClose","rest","_excluded2","intl","useIntl","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","TransitionComponent","DialogContent","DialogContentText","DialogActions","Button","formatMessage","defaultMessage","disabled","pageTitle","_ref$appBarLeftConten","appBarLeftContent","onBackClick","isLoading","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","isRTL","useAppTheme","isOnline","useOnline","_ref3","useConfig","appConfig","menu","_ref3$appBarLeadingCo","width","appBarLeadingContent","headerTitle","String","style","display","flexDirection","height","overflow","AppBar","undefined","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","t","mode","background","default","primary","dark","margin","padding","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","_ref$onDownloadSearch","onDownloadSearchList","_ref$onDownloadSelect","onDownloadSelectedList","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","Boolean","_Fragment","target","size","startIcon","SaveIcon","event","currentTarget","endIcon","KeyboardArrowDownIcon","Menu","MenuItem","href","process","ShareButton","getUrl","_useState","useState","_useState2","dialogOpen","setDialogOpen","_useState3","_useState4","url","setUrl","_useState5","_useState6","setIsProcessing","Fragment","then","d","catch","e","QuestionDialog","maxWidth","Stack","TextField","label","InputProps","readOnly","value","navigator","clipboard","writeText","_ref$id","columns","data","totalData","selectedData","disableAdding","isLoadingData","onSelectRow","highlightId","onSendToList","onRemoveFromList","mainurl","rowSelection","setRowSelection","rowVirtualizerInstanceRef","useRef","setIsLoading","sorting","setSorting","_useDatabase","useDatabase","getDownloadData","getShortenLink","event_export_list","getList","useEffect","_rowVirtualizerInstan","_rowVirtualizerInstan2","current","scrollToIndex","call","error","console","log","handleExportRows","rows","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","concat","Date","toDateString","useBom","useKeysAsHeaders","headers","Object","keys","ExportToCsv","generateCsv","handleUrl","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","stop","MaterialReactTable","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowSelection","enableRowVirtualization","muiTablePaperProps","initialState","density","onSortingChange","onRowSelectionChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","opacity","_id","muiSelectCheckboxProps","muiTableBodyCellProps","whiteSpace","enableColumnResizing","enableFullScreenToggle","defaultColumn","minSize","maxSize","layoutMode","positionToolbarAlertBanner","renderTopToolbarCustomActions","_ref4","table","Box","gap","flexWrap","DownloadOption","renderBottomToolbar","_ref5","handleSelected","getSelectedRowModel","flatRows","map","handleRemoveSelected","length","flexGrow","MRT_ToolbarAlertBanner","stackAlertBanner","Tooltip","AddEventIcon","RemoveEventIcon","UndoRedo","canUndo","canRedo","onUndo","onRedo","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","styled","Paper","spacing","borderRadius","shortest","RadarChart","inputData","axisInfo","meanradar","highlight","setData","item","type","r","theta","fill","name","forEach","k","ki","_d$k$key","key","push","line","dash","_meanradar$k$key","layout","useMemo","paper_bgcolor","plot_bgcolor","autoscale","l","b","font","family","typography","fontFamily","fontSize","text","polar","radialaxis","visible","range","showlegend","Plot","config","displaylogo","toImageButtonOptions","format","scale","showEditInChartStudio","plotlyServerURL","countriesScale","scaleLinear","zoomi","domain","d3range","Map","locs","center","lon","lat","zoom","setDomain","_botColor","extent","count","long","ticks","tsize","tickS","i","mapbox","x","y","marker","hoverinfo","_toConsumableArray","longd","latd","Math","min","_highlight","find","city_id","paper","mapboxTick","legend","showticksuffix","xanchor","orientation","metricList","radar","metricRadarList","filter","rankMetricList","isArray","expand","ExpandMoreIcon","transform","genderIcon","g","avatar","MaleIcon","FemaleIcon","_ref2","_data$stream_title","_data$artist_info$art","onSelect","timeStation","moment","time_station","track_duration","stream_title","analyticData","analyticAxis","PaperCustom","component","station","Chip","station_form","station_frequency","Link","station_url","MapIcon","city","country","station_format","split","station_genre","station_description","artist_info","Grid","container","xs","Avatar","src","artist_image_url","mr","artist_name","artist_type","artist_description","icon","Favorite","artist_popularity","artist_followers","artist_country","artist_genres","artist_instruments","artist_members","artist_genders","artist_sexualorientations","artist_ethnicities","artist_voicetypes","alt","join","artist_website","artist_id","spotifyIcon","loading","artist_qid","wikiIcon","artist_YouTubeID","youtubeIcon","artist_MusicBrainzID","musicbrainzIcon","elevation","gutterBottom","track_name","track_description","track_form","track_composers","track_lyricists","track_language","track_year_released","track_popularity","track_key","track_mode","track_beatsperbar","track_genre","track_loudness","track_id","track_qid","track_geniusID","geniusIcon","track_YouTubeID","track_MusicBrainzID","track_instrumentation","Divider","mt","mb","AutoSizer","currentDetail","bgcolor","contrastText","DetailCard","events","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","setIsOpen","_defineProperty","shape","borderColor","alpha","common","white","borderStyle","textTransform","paddingLeft","paddingRight","up","minWidth","SearchIcon","FilterPanel","fullWidth","scroll","year_released","track_name_genre","frameBorder","spotify_uri","replace","allow","allowFullScreen","ListenCard","_useLocale","useLocale","setLocale","_useLocale$locale","locale","LanguageIcon","anchorOrigin","vertical","horizontal","transformOrigin","allLocales","selected","dispatch","useDispatch","FormatSize","FontsizeControl","onChange","isIncrease","INCREASE_FONT_SIZE","DECREASE_FONT_SIZE","layoutItems","SpaceDashboardIcon","val","ListItemIcon","Checkbox","checked","_ref$layoutItemsOnCha","layoutItemsOnChange","_useAppTheme","toggleThisTheme","isDarkMode","anchorElNav","setAnchorElNav","handleCloseNavMenu","require","SET_MENU","opened","HelpIcon","md","MenuIcon","keepMounted","textAlign","BrightnessHighIcon","Brightness4Icon","LayoutMenu","FontSizeMenu","LanguageMenu","countries","LegendPanel","fullHeight","_data","set_Data","xaxis","yaxis","showline","showticklabels","zeroline","xname","yname","onSelected","onHover","hovered","_data$color","trace","points","point","pointIndex","selectList","getColor","axis","setAxis","scatterdata","setScatterdata","sethighlight","selectListMap","select","disableHeight","Scatterplot","_useState7","_useState8","pcaob","setpcaob","dataMatrix","dataValid","valid","isNaN","pca","PCA","result","predict","principalComponent1","principalComponent2","colors","explain","getExplainedVariance","round","Error","FormControl","InputLabel","Select","multiple","input","OutlinedInput","renderValue","_selectListMap$d","indexOf","ListItemText","Barchart","widthScale","overflowY","_widthScale","source","onChangeSource","histindata","sethisindata","rankdata","setrankdata","colorKey","setColorKey","sethovered","_useState9","colorsCategory","_useState10","rankMap","setrankMap","countMap","_countMap$e","_countMap$d$colorKey","rankData","sort","a","slice","otherColor","arguments","scaleOrdinal","colorArr","master","trim","element","maxIndex","_r$e","SongListDetail","pt","Histogram","Card","pointerEvents","semicolor","Scatterwrapper","PCAplot","filters","useSelector","selectFilters","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","requestVizdata","zoomLoc","setZoomLoc","isFullView","setIsFullView","_window","window","innerWidth","innerHeight","getWindowDimensions","windowDimensions","Earth","disable","eventList","eventDetail","eventMap","mediaDetail","eventSelectedList","eventListDetail","setLayoutItems","toolbarRef","layoutRef","eventTotalData","seletedList","currentList","eventSelectedData","Array","from","items","values","_useLog","useLog","setlocation","logEvents","query","search","useLocation","getDataFromShortenLink","queryObject","URLSearchParams","location","get","useQuery","vizsource","setVizSource","geolocation","getCurrentPosition","coords","lng","longitude","latitude","isLoadingInit","isLoadingEvent","isLoadingLocs","_useState11","_useState12","firstLoad","setFirstLoad","onSelectStream","extra","setFilters","meanRadar","total","d3mean","_useState13","FlexLayout","fromJson","global","tabEnableFloat","tabSetMinWidth","tabSetMinHeight","borderMinSize","borders","active","enableClose","weight","_useState14","layouts","setLayouts","actionCreators","newList","getSwitchView","newval","isOn","addTabToActiveTabSet","_idMap","_attributes","doAction","deleteTab","Page","AppHeader","Search","model","factory","node","getComponent","EventTable","fields","addsToBasket","removeItems","VizPanel","fieldsWithoutSelected","EventMap","EventDetail","MediaDetail","Earth3D","onSelectLegend","tabEnableRenderOnDemand","popoutURL","realtimeResize","onModelChange","Backdrop","drawer"],"sourceRoot":""}