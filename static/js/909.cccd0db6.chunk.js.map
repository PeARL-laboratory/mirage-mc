{"version":3,"file":"static/js/909.cccd0db6.chunk.js","mappings":"yWAGMA,G,SAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,EAAIC,GAAa,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAgBpCP,EAAWF,EAAGE,WACdC,EAAQH,EAAGG,QACXC,EAASJ,EAAGI,SAClBF,EAASQ,OAAOP,EAAMC,GAChBC,EAAOH,EAASS,WAAWC,YACjCC,EAAcR,EAAMJ,GAQpB,wBAAAM,EAAAO,OAAA,GAAAf,EAAA,KACH,gBA9BkBgB,EAAAC,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,MAgCbL,EAAgB,SAACR,EAAMc,GACzB,IAAMC,EAAWC,OAAOC,SAASC,cAAc,KAC/CH,EAASI,MAAQ,gBACjBJ,EAASK,SAAWN,EAEpBC,EAASM,KAAOrB,EAEhBiB,SAASK,KAAKC,YAAYR,GAC1BA,EAASS,QACTP,SAASK,KAAKG,YAAYV,GAE1BA,EAASW,QACb,EACA,I,WCrCaC,EAAM,GACNC,EAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAEpOC,EAAgBC,EAAAA,MAAiBC,MAAM,CAAC,IAAK,KAC7CC,EAAaF,EAAAA,MAAiBC,MAAM,CAAC,GAAI,KACzCE,EAAiBH,EAAAA,MAAiBC,MAAM,CAAC,GAAI,IAK7CG,GAAUC,EAAAA,EAAAA,aAAW,SAAA7C,EAA8E8C,GAAS,IAArFC,EAAI/C,EAAJ+C,KAAKC,EAAShD,EAATgD,UAAUC,EAAKjD,EAALiD,MAAMC,EAAMlD,EAANkD,OAAOC,EAAQnD,EAARmD,SAASC,EAAcpD,EAAdoD,eAAgBC,EAAOrD,EAAPqD,QAASC,EAAUtD,EAAVsD,WACjFC,GAAUC,EAAAA,EAAAA,UACVC,GAAYD,EAAAA,EAAAA,UAClBE,GAAgCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAQF,EAAA,GACfG,GAD4BH,EAAA,IACUD,EAAAA,EAAAA,aAAUK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA2CR,EAAAA,EAAAA,UAAS,GAAES,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA/CE,EAAcD,EAAA,GAACE,EAAiBF,EAAA,GACvCG,GAAqCZ,EAAAA,EAAAA,UAAS,CAAC,CAAEa,KAAM,kBAAmBC,IAAK,kBAAmBC,SAAU,KAAM,CAAEF,IAAK,YAAaC,IAAK,WAAYC,SAAU,KAAM,CAAEF,IAAK,WAAYC,KAAM,YAAaC,SAAU,KAAM,CAAEF,IAAK,WAAYC,KAAM,YAAaC,SAAU,OAAOC,GAAAd,EAAAA,EAAAA,GAAAU,EAAA,GAA7QK,EAAWD,EAAA,GAACE,EAAcF,EAAA,GACjCG,GAA+BnB,EAAAA,EAAAA,UAAS,IAAGoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAApCE,EAAQD,EAAA,GAACE,EAAWF,EAAA,GAC3BG,GAAqCvB,EAAAA,EAAAA,UAAS,CAAC,GAAEwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA9BE,GAADD,EAAA,GAAeA,EAAA,IAE3BE,GAAiBC,EAAAA,EAAAA,UAAQ,WAC3B,OAAO,WAA+B,IAAtBC,EAAUhE,UAAAiE,OAAA,QAAAC,IAAAlE,UAAA,GAAAA,UAAA,GAAC,UACjBmE,EAAQlD,EAAAA,IAAgBF,GAC1BqD,EAAS,SAACC,GACV,IAAMA,GAAa,KAANA,GAAuB,KAAXA,EAAIC,KACzB,MAAO,QACX,IAAMC,EAASJ,EAAMI,SACrB,OAAIA,EAAOC,MAAK,SAAAC,GAAC,OAAEA,IAAIJ,CAAG,KAAKE,EAAON,OAAOnD,EAClCqD,EAAME,GAENL,CACf,EAGA,OAFAI,EAAOG,OAASJ,EAAMI,OACtBH,EAAOlD,MAAQiD,EAAMjD,MACdkD,CACX,CAdO,EAeX,GAAE,IAEF,SAASM,EAAUC,GAAoB,IAAlBnD,EAAImD,EAAJnD,KAAKC,EAASkD,EAATlD,UAChBmD,EAAc,CAAC,EACf1D,EAAQD,EAAAA,IAAUO,GAAM,SAAAiD,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGI,KAAK,IAE3C7D,EAAcuD,OAAOrD,GACrBC,EAAWoD,OAAOrD,GAElBE,EAAemD,OAAOtD,EAAAA,IAAUQ,GAAW,SAAAgD,GAEvC,OADAG,EAAYH,EAAEK,OAASL,EACf,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGI,KACd,KAGAf,EAAeS,OAAO,IAAIrD,MAAMH,GAChCU,EAAUsD,SAAQ,SAAAN,GAAC,OAAEX,EAAeW,EAAEK,MAAM,IAE5C,IAAIE,EAAQ,EAWZ,OAVIvD,EAAUwC,OAAO,GACrB,CAAC,EAAE,EAAE,EAAE,EAAE,GAAGc,SAAQ,SAAAE,GACX5B,EAAY2B,KACb3B,EAAY2B,GAAS,CAAC/B,IAAI,EAAEC,IAAI,EAAEC,SAAS,IAC/CE,EAAY2B,GAAO/B,IAAMxB,EAAUwD,GAAGhC,IACtCI,EAAY2B,GAAO9B,IAAMzB,EAAUwD,GAAGC,KACtCF,GACJ,IAGO,CAAC3B,YAAAA,EAAYuB,YAAAA,EACxB,EACAO,EAAAA,EAAAA,YAAU,WACN,IAAAC,EAAkCV,EAAW,CAAClD,KAAAA,EAAKC,UAAAA,IAA5C4B,EAAW+B,EAAX/B,YAAYuB,EAAWQ,EAAXR,YACnBf,EAAee,GACftB,EAAeD,GACVvB,GACDiB,EAAkB,EAC1B,GAAG,CAACvB,EAAKC,IAET,IAAA4D,GAAyBjD,EAAAA,EAAAA,UAAS,MAAKkD,GAAAhD,EAAAA,EAAAA,GAAA+C,EAAA,GAAhCE,EAAKD,EAAA,GAACE,GAAQF,EAAA,IACrBH,EAAAA,EAAAA,YAAU,WACN,GAAInD,EAAQyD,SACJ3C,EAAiBO,EAAYY,OAAQ,CAErC,IAAMyB,EAAWC,YAAW,WACxB3D,EAAQyD,QAAQG,YAAYvC,EAAYP,GAAiB,KACzDC,EAAkBD,EAAiB,EACvC,GAAG,KAEH,OADA0C,GAASE,GACF,WACHG,cAAcH,EAClB,CACJ,CAER,GAAE,CAAC5C,EAAeO,IAClB,IAAMyC,IAAWC,EAAAA,EAAAA,cAAY,WACrBR,GACAM,cAAcN,GAClBxC,EAAkBM,EAAYY,OAClC,GAAE,CAACsB,IAEHS,IAAiC5D,EAAAA,EAAAA,UAAS,MAAK6D,IAAA3D,EAAAA,EAAAA,GAAA0D,GAAA,GAAxCE,GAASD,GAAA,GAACE,GAAYF,GAAA,GACvBG,IAASL,EAAAA,EAAAA,cAAY,SAAC7C,EAAID,GAC5B,GAAIjB,EAAQyD,QAAS,CACjBK,KACA9D,EAAQyD,QAAQG,YAAY,CAAE3C,IAAAA,EAAKC,IAAAA,EAAKC,SAAU,KAAO,KACzDO,EAAY,CAAC,CAACR,IAAAA,EAAID,IAAAA,KACdiD,IACAL,cAAcK,IAClB,IAAIR,EAAWC,YAAW,WACtBjC,EAAY,GAChB,GAAG,KACHyC,GAAaT,EACjB,CACJ,GAAE,CAAC5C,EAAegD,GAASI,MAC3Bf,EAAAA,EAAAA,YAAU,WAGN,OAFIrD,GACAsE,GAAOtE,EAAQoB,IAAIpB,EAAQmB,KACxB,WACCiD,IACAL,cAAcK,GACtB,CACJ,GAAE,CAACpE,IAEH,IAAMuE,IAAcN,EAAAA,EAAAA,cAAY,WAC5BvH,EAAcwD,EAAQyD,QAAQ,YAClC,GAAE,CAACvD,EAAUF,IAWb,OATAmD,EAAAA,EAAAA,YAAU,WAENtD,EAAe,iBAAgB,SAAC4C,GAC5B7C,EAAS,CAAC0E,QAAQ,CAAC7B,EAAS,SAC5B2B,GAAO3B,EAAES,KAAKT,EAAExB,IACpB,GACJ,GAAE,CAACmD,GAAOxE,KAGF2E,EAAAA,EAAAA,MAAA,OACJjG,MAAO,CACHkG,WAAY,UACZC,SAAU,YACZC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OAAKpF,IAAKW,EACL5B,MAAO,CAGR,EAEFoG,UACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACFlF,MAAOA,EAEPC,OAAQA,EACRJ,IAAKS,EACL6E,cAAeC,EACfC,gBAAgB,EAChBC,UAAWvD,EACXwD,UAAW,iBAAI,SAAS,EACxBC,eAAgB,IAChBC,cAAe,EACfC,qBAAsB,EACtBC,iBAAkB,IAElBC,WAAY7F,EACZ8F,UAAUxB,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIA,EAAExB,GAAG,GAAC,IACjCuE,UAAUzB,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIA,EAAES,IAAI,GAAC,IAClCuC,eAAe1B,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAG/B,GAAcA,EAAqB,UAAI+B,EAAS,MAAI,IAAK,GAAI,GAAC,CAAC/B,IAC9FgF,WAAW3B,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIA,EAAS,KAAC,GAAC,IAEvCkD,WAAW5B,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAK/B,GAAcA,EAAqB,UAAI+B,EAAS,MAAI,EAAEtD,EAAY,OAADsD,QAAC,IAADA,OAAC,EAADA,EAAGI,MAAM,GAAC,CAACnC,IAEzGkF,eAAgB,EAEhBC,YAAY9B,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,IAAAqD,EAAA,OAAY,QAAZA,EAAKrD,EAAEsD,aAAK,IAAAD,EAAAA,EAAE,OAAO,GAAE,CAACpF,IACjDsF,gBAAiB,EAEjBC,iBAAkBzG,EAClB0G,kBAAkB,QAClBC,gBAAgBpC,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIA,EAAES,IAAI,GAAC,IACxCkD,gBAAgBrC,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIA,EAAExB,GAAG,GAAC,IACvCoF,aAAatC,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIzD,EAAcyD,EAAE6D,UAAU,GAAC,IACzDC,iBAAkB,EAClBC,aAAazC,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIX,EAAeW,EAAEgE,OAAO,GAAGlG,GAAU,GAAC,IACpEmG,cAAc3C,EAAAA,EAAAA,cAAY,SAAAtB,GAAC,OAAIX,EAAeW,EAAEgE,OAAO,GAAGlG,GAAU,GAAC,IACrEoG,aAAa,EACbC,YAAa7C,EAAAA,EAAAA,cAAY,SAAC8C,GACtBlG,EADiCkG,EAClBA,EAAIJ,OAAO,QAEXvE,EACnB,GAAE,IACF4E,UAAU/C,EAAAA,EAAAA,cAAY,SAAAtB,GAAM,MAAM,oGAANsE,OAEjB9H,EAAAA,IAAOwD,EAAEgE,QAAO,SAAAO,GAAC,OAAG,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGnE,KAAK,IAAC,yIAAAkE,OAI1BtE,EAAEgE,OAAOQ,QAAQC,MAAK,SAACC,EAAGC,GAAC,OAAM,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGvE,QAAS,OAADsE,QAAC,IAADA,OAAC,EAADA,EAAGtE,MAAK,IAAEwE,KAAI,SAAA5E,GAAC,cAAAsE,OAAa,OAADtE,QAAC,IAADA,OAAC,EAADA,EAAGI,MAAK,cAAAkE,OAAatE,EAAEK,MAAK,YAASwE,KAAK,aAAY,4EAGxI,GAAE,IACHC,WAAY,SAAC9E,GAAK,IAAD+E,EACPC,EAAO,GACbhF,EAAEgE,OAAO1D,SAAQ,SAAAN,GAEbgF,EAAKC,KAAKjF,EAAEgF,KAChB,IACA7H,EAAS,CAAC6H,KAAAA,EAAKnD,QAAQ,CAAY,QAAZkD,EAAC/E,EAAEgE,OAAO,UAAE,IAAAe,OAAA,EAAXA,EAAalD,UACzC,EAEAqD,aAAc7D,OAGrB/D,IAAY4E,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACC,UAAW9H,EAAW0D,QAAQiB,UAC/CC,EAAAA,EAAAA,KAACmD,EAAAA,EAAU,CAACC,QAAS1D,GAAYK,UAACC,EAAAA,EAAAA,KAACqD,EAAAA,EAAQ,UA4BvD,IAEA,G,4FC1PaC,EAAS,CAClB,CACIC,YAAa,OACbC,OAAQ,QAEZ,CACID,YAAa,UACbC,OAAQ,WAEZ,CACID,YAAa,UACbC,OAAQ,WAEZ,CACID,YAAa,gBACbC,OAAQ,iBAEZ,CACID,YAAa,gBACbC,OAAQ,SACRC,SAAQ,GAEZ,CACIF,YAAa,cACbC,OAAQ,OACRC,SAAQ,IAYHC,EAAeJ,EAAOK,QAAO,SAAAC,GAAC,OAAGA,EAAEC,aAAa,G,yhBCG7D,EAtCyBC,EAAAA,YAAiB,SACtCC,EACAnJ,GAEA,IAAQmF,EAA6BgE,EAA7BhE,SAAUiE,EAAmBD,EAAnBC,KAASC,GAAKC,EAAAA,EAAAA,GAAKH,EAAKI,GAIpCC,EAAYC,MAAMC,QAAQvE,GAAYA,EAASzC,OAAS,EACxDiH,GAAajJ,EAAAA,EAAAA,QAAO,MAC1B,OACI0E,EAAAA,EAAAA,KAAA,OAAKpF,IAAKA,EAAKoJ,KAAMA,EAAKjE,UACtBC,EAAAA,EAAAA,KAAA,OAAAwE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASP,GAAK,IAAErJ,IAAK2J,EAAWxE,UACxBC,EAAAA,EAAAA,KAACyE,EAAAA,aAAY,CACTC,YAAaH,EACbI,MAAO5E,EACP7B,MAAOkG,EAAUrE,SAXzB,SAAHjI,GAA2B,IAAtBiM,EAAKjM,EAALiM,MAAWa,EAAI9M,EAAT+M,KAChB,OAAOC,EAAAA,EAAAA,eAACF,GAAIJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKT,GAAK,IAAEgB,IAAKhB,EAAMiB,KACvC,QA6BJ,I,oBCzBMC,GAAuBC,EAAAA,EAAAA,KAEvBC,EAAoB,SAACC,EAASC,GAChC,OAAOJ,EAAqBG,EAASC,GAAO/C,MAAM,EAJhC,GAKtB,EAGe,SAASgD,IACpB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MACjBnK,GAAyCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CoK,EAAalK,EAAA,GAACmK,EAAgBnK,EAAA,GACrCoK,GAA2CC,EAAAA,EAAAA,MAApCC,EAASF,EAATE,UAAUC,EAAcH,EAAdG,eAAeC,EAAOJ,EAAPI,QAa1B5C,EAAS4C,EAAQ,UAMvB,OAJA1H,EAAAA,EAAAA,YAAU,WACNqH,GAAgBrB,EAAAA,EAAAA,GAAC,CAAC,EAAGlB,GACzB,GAAE,CAACA,KAEItD,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CAACC,QAAS,EAAGC,QAAS,EAAEtG,SAChC2D,EAAAA,EAAahB,KAAI,SAAAkB,GAAC,IAAA9L,EAAAwO,EAAA,OAAEtG,EAAAA,EAAAA,KAACuG,EAAe,CAEjCC,UAAQ,EACRC,KAAK,QACLC,UAAW,EACXd,cAAeT,EACfwB,iBAAkBA,EAClBC,UAAQ,EACRxB,QAAmF,QAA5EtN,EAAG8L,EAAEH,QAAQyC,EAAQ,UAAD9D,OAAWwB,EAAEL,cAAeqC,EAAchC,EAAEL,oBAAY,IAAAzL,EAAAA,EAAG,GACtF+O,UAASjD,EAAEH,SAAQuC,EAAU,UAAD5D,OAAWwB,EAAEL,cACzCuD,eAAgB,SAAChJ,GAAC,OAAKA,CAAC,EACxBiJ,MAA6B,QAAxBT,EAAEf,EAAQ3B,EAAEL,oBAAY,IAAA+C,EAAAA,EAAE,GAC/BU,SAAU,SAACC,EAAOF,GACdrB,GAASwB,EAAAA,EAAAA,IAAU,CAACnC,IAAInB,EAAEL,YAAYwD,MAAAA,IAC1C,EACAI,cAAevD,EAAEH,QAAS,SAACwD,EAAOG,GAC1BA,GAA+B,KAAhBA,GACfnB,EAAerC,EAAEL,YAAY6D,EACrC,OAAG7J,EACH8J,YAAa,SAACC,GAAM,OAChBtH,EAAAA,EAAAA,KAACuH,EAAAA,GAAS/C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF8C,GAAM,IACVE,MAAO5D,EAAEJ,SACX,GAtBDI,EAAEL,YAwBT,KAcV,CAEA,SAASgD,EAAevI,GAAoC,IAADyJ,EAAAzJ,EAAhCmJ,cAAAA,OAAa,IAAAM,EAAC,WAAK,EAACA,EAAI1D,GAAKG,EAAAA,EAAAA,GAAAlG,EAAAmG,GACpDuD,EAA0B5D,EAAAA,SAAe,IAAG6D,GAAAhM,EAAAA,EAAAA,GAAA+L,EAAA,GAArCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtB,OAAO3H,EAAAA,EAAAA,KAAC8H,EAAAA,GAAYtD,EAAAA,EAAAA,GAAA,CAChBuD,WAAYH,EACZT,cAAe,SAACF,EAAMe,EAASC,GAC3BJ,EAASG,GACTb,EAAcF,EAAMe,EAASC,EACjC,EACAC,OAAQ,WAAKL,EAAS,GAAG,GACrB9D,GAEZ,C,wECpFuBoE,EAAAA,GAAAA,OAAc5N,MAAM,CAAC,GAAI,IAEjC,SAAS+K,KACpB,IAAAQ,GAAoCC,EAAAA,EAAAA,MAA7BqC,EAAiBtC,EAAjBsC,kBACDtN,GAAYoL,EADcJ,EAAPI,SACC,aACpBzL,GAAiB2C,EAAAA,EAAAA,UAAQ,WAC3B,OAAO+K,EAAAA,GAAAA,OAAc5N,MAAM,CAAC,GAAI,IAAIqD,QAAOyK,EAAAA,GAAAA,KAAOvN,GAAW,SAAAgD,GACzD,OAAQ,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGI,KACd,IACJ,GAAE,CAACpD,IACGqC,GAAiBC,EAAAA,EAAAA,UAAQ,WAC3B,OAAO,WAA+B,IAAtBC,EAAUhE,UAAAiE,OAAA,QAAAC,IAAAlE,UAAA,GAAAA,UAAA,GAAC,UACjBmE,GAAQ8K,EAAAA,GAAAA,KAAalO,GAAAA,IACvBqD,EAAS,SAACC,GACV,IAAMA,GAAa,KAANA,GAAuB,KAAXA,EAAIC,KACzB,MAAO,QACX,IAAMC,EAASJ,EAAMI,SACrB,OAAIA,EAAOC,MAAK,SAAAC,GAAC,OAAEA,IAAIJ,CAAG,KAAKE,EAAON,OAAOnD,GAAAA,GAClCqD,EAAME,GAENL,CACf,EAGA,OAFAI,EAAOG,OAASJ,EAAMI,OACtBH,EAAOlD,MAAQiD,EAAMjD,MACdkD,CACX,CAdO,EAeX,GAAE,IAEF,OAAOuC,EAAAA,EAAAA,KAACuI,EAAAA,EAAI,CAAAxI,UACJC,EAAAA,EAAAA,KAACmG,EAAAA,EAAK,CACFqC,EAAG,EACH7O,MAAO,CACH8O,UAAU,OACVC,UAAU,QACZ3I,UAEFC,EAAAA,EAAAA,KAAC2I,EAAAA,EAAI,CAACC,GAAI,CAACC,cAAc,MAAOH,UAAU,OAAQI,gBAAiB,SAACC,GAAK,OAAKC,EAAAA,EAAAA,GAAUD,EAAME,QAAQpJ,WAAWqJ,MAAM,GAAEnJ,UACrHH,EAAAA,EAAAA,MAACuG,EAAAA,EAAK,CAACyC,GAAI,CAACJ,EAAE,EAAEW,EAAE,GAAGpJ,SAAA,EACjBC,EAAAA,EAAAA,KAACoJ,EAAAA,EAAU,CAAArJ,SAAC,4BAERjF,EAAU4H,KAAI,SAAA5E,GAAC,IAAAuL,EAAA,OAAEzJ,EAAAA,EAAAA,MAACwJ,EAAAA,EAAU,CAAkBE,QAAS,YAAalG,QAAS,WACzEgF,EAAkB,gBAAlBA,CAAmCtK,EACvC,EAAEiC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKrG,MAAO,CAACoB,MAAM,IAA2B,QAAzBsO,EAAE5O,EAAeqD,EAAEI,cAAM,IAAAmL,EAAAA,EAAE,GAAGrO,OAAO,GAAI8N,gBAAgB3L,EAAeW,EAAS,OAAIyL,QAAQ,eAAgBC,YAAY,KAAW1L,EAAS,QAHpIA,EAAS,MAI9B,YAMzC,C,mDC5De,SAAS2L,GAAe3R,GAAoB,IAAlBqG,EAAKrG,EAALqG,MAAM6I,EAAQlP,EAARkP,SAC3C,OAAMpH,EAAAA,EAAAA,MAACuG,EAAAA,EAAK,CAACuD,UAAW,MAAOC,WAAY,SAAUC,eAAgB,gBAAgB7J,SAAA,CAChF5B,GACDyB,EAAAA,EAAAA,MAACiK,GAAAA,EAAW,CAACpD,KAAK,QAAQ6C,QAAQ,WAAW,aAAW,wBAAyBV,GAAI,CAACxH,MAAM,SAASrB,SAAA,EACrGC,EAAAA,EAAAA,KAAC8J,GAAAA,EAAM,CAAElB,GAAI,CAACxH,MAAM,SAAUgC,QAAS,kBAAI4D,GAAS,EAAK,EAACjH,UACtDC,EAAAA,EAAAA,KAAC+J,GAAAA,EAAO,OAEZ/J,EAAAA,EAAAA,KAAC8J,GAAAA,EAAM,CAAElB,GAAI,CAACxH,MAAM,SAAUgC,QAAS,kBAAI4D,GAAS,EAAM,EAACjH,UACvDC,EAAAA,EAAAA,KAACgK,GAAAA,EAAU,WAIvB,CCoBA,IAyJA,GAzJqB,SAACjG,GACpB,IACEkG,EASElG,EATFkG,KACAC,EAQEnG,EARFmG,aACAC,EAOEpG,EAPFoG,OACAC,EAMErG,EANFqG,YACAC,EAKEtG,EALFsG,aACAC,EAIEvG,EAJFuG,YACMC,EAGJxG,EAHFyG,KACAC,EAEE1G,EAFF0G,UACAC,EACE3G,EADF2G,eAGMC,EACNP,EADMO,WAAYC,EAClBR,EADkBQ,UAA2BC,GAC7CT,EAD6BU,eAC7BV,EAD6CS,wBAEvCE,EAAuEV,EAAvEU,QAASC,EAA8DX,EAA9DW,WAAYC,EAAkDZ,EAAlDY,MAAiBC,GAAiCb,EAA3Cc,SAA2Cd,EAAjCa,iBACtCV,GADuEH,EAAhBe,YACrCb,EAAlBC,MACAa,GADkBd,EAAZe,QAC+ChB,EAArDe,kBAAkBE,EAAmCjB,EAAnCiB,eAAgBC,EAAmBlB,EAAnBkB,eAEpCC,EAAcC,EAAAA,EAAWhJ,KAAI,SAACiJ,GAClC,MAAO,CACL5E,WAAOxJ,EACPqO,SAAS,EACTC,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI2G,EAAExB,SACxC/G,QAAS,WACP8G,EAAayB,EAAExB,OACjB,EACA4B,UAAU/L,EAAAA,EAAAA,KAACgM,EAAAA,EAAY,IAE3B,IAEMC,EAAezB,EAAK0B,gBAEpBC,EAAaC,EAAAA,EAAU1J,KAAI,SAAC2J,GAChC,MAAO,CACLtF,WAAOxJ,EACPqO,SAAS,EACTC,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAIqH,EAAErH,KACxC5B,QAAS,WACP4H,EAAWqB,EAAErH,GACf,EACA+G,UAAU/L,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,CAAC3S,MAAO,CAAEyH,MAAOiL,EAAEjL,SAE3C,IAcA,MAAO,CACL,CACE2F,MAAO,KACP3D,QAAS,WACP,EAEFyI,YAAa5B,EAAK6B,cAAc,CAC9B9G,GAAI,SACJuH,eAAgB,WAElBR,UAAU/L,EAAAA,EAAAA,KAACwM,EAAAA,EAAS,IACpBC,0BAA0B,EAC1BC,YAAa,CACX,CACEb,aAAa7L,EAAAA,EAAAA,KAACsF,EAAW,KAE3B,CACEuG,aAAa7L,EAAAA,EAAAA,KAAC2M,GAAW,OAI/B,CACE5F,MAAO,IACP6E,QAASK,EACTJ,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI,SACtC+G,UAAU/L,EAAAA,EAAAA,KAAC4M,EAAAA,EAAQ,KAErB,CACE7F,MAAO,KACP6E,SAAS,EACTC,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI,UACtC+G,UAAU/L,EAAAA,EAAAA,KAAC6M,EAAAA,EAAY,IACvBzJ,QAAQqH,GAEV,CAAEqC,SAAS,GACX,CACEjB,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI,aACtCyH,0BAA0B,EAC1BV,UAAU/L,EAAAA,EAAAA,KAAC+M,EAAAA,EAAY,IACvBL,YAAa,CACX,CACEb,aAAa7L,EAAAA,EAAAA,KAACyJ,GAAe,CAACtL,MAAO8L,EAAK6B,cAAc,CAAC9G,GAAI,cAC/BgC,SAAU0D,IACxCqB,UAAU/L,EAAAA,EAAAA,KAACgN,EAAAA,EAAU,KAEvB,CACEnB,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI,UACtCiI,cAAehD,EAAK6B,cAAc,CAAE9G,GAAI+F,IACxC0B,0BAA0B,EAC1BV,UAAU/L,EAAAA,EAAAA,KAACsM,EAAAA,EAAS,IACpBI,YAAaP,GAEf,CACEN,YAAa5B,EAAK6B,cAAc,CAAE9G,GAAI,aACtCiI,cAAehD,EAAK6B,cAAc,CAAE9G,GAAImF,IACxCsC,0BAA0B,EAC1BV,UAAU/L,EAAAA,EAAAA,KAACgM,EAAAA,EAAY,IACvBU,YAAajB,GAEf,CACEG,UAAShB,EACTxH,QAAS,WACPuH,EAAW,yBACb,EACAkB,YAAa5B,EAAK6B,cAAc,CAC9B9G,GAAI,mBAEN+G,SAAUlB,GACR7K,EAAAA,EAAAA,KAACkN,EAAAA,EAAY,KAEblN,EAAAA,EAAAA,KAACmN,EAAAA,EAAgB,KAGrB,CACE/J,QAAS,WACP8H,EAAgB,QAClB,EACAW,YAAY,GAADzJ,OAAK6I,EAAQ,MAAQ,MAAK,SACrCc,SAAUd,GAAQjL,EAAAA,EAAAA,KAACoN,EAAAA,EAAO,KAAMpN,EAAAA,EAAAA,KAACqN,EAAAA,EAAO,OAI9C,CACEtG,MAAO,KACP6E,QAASP,IAAqBE,EAC9BnI,QAAS,WACPoI,EAAe8B,QACjB,EACAzB,YAAa5B,EAAK6B,cAAc,CAC9B9G,GAAI,UACJuH,eAAgB,YAElBR,UAAU/L,EAAAA,EAAAA,KAACuN,EAAAA,EAAM,KAGvB,E,YCrGA,GAtEa,SAACxJ,GACZ,IAAMkG,GAAOuD,EAAAA,EAAAA,KACPC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXpD,GAAOqD,EAAAA,EAAAA,MACPzD,GAAc0D,EAAAA,EAAAA,WACdxD,GAAcyD,EAAAA,EAAAA,MACpBjW,EAA2DsS,GAAe,CAAC,EAAnEO,EAAU7S,EAAV6S,WAAYqD,EAAUlW,EAAVkW,WAAYnD,EAAsB/S,EAAtB+S,uBACxBoD,GAAcC,EAAAA,EAAAA,aAAdD,UACRE,GAAqCC,EAAAA,EAAAA,aAA7BC,EAASF,EAATE,UAASC,EAAAH,EAAEhE,OAAAA,OAAM,IAAAmE,EAAG,KAAIA,EAC1BjE,GAAekE,EAAAA,EAAAA,YACf7I,GAAWC,EAAAA,EAAAA,MAQX6I,EAAYC,IAAYjK,EAAAA,EAAAA,GAAC,CAC7ByF,KAAAA,EACAE,OAAAA,EACAD,aAAcmE,EACdjE,YAAAA,EACAC,aAAAA,EACA4D,UAAAA,EACA3D,YAAAA,EACAE,KAAAA,EACAC,UAAU,WAAK/E,EAAS,CAAEb,KAAM6J,GAAAA,GAAUC,QAAQ,GAAQ,EAC1DjE,eAjBqB,SAACkE,GAEpBlJ,EADEkJ,EACO,CAAE/J,KAAMgK,GAAAA,IAER,CAAEhK,KAAMiK,GAAAA,IACrB,GAaK/K,IACFJ,QAAO,SAACoL,GACT,OAAwB,IAAjBA,EAAKnD,OACd,IAGMoD,EAAQrB,EAAWA,EAASsB,SAAW,IAW7C,OACEjP,EAAAA,EAAAA,KAAA,OACErG,MAAO,CACL4P,QAAS,OACT2F,cAAe,SACflU,OAAQ,QAER+E,UAEFC,EAAAA,EAAAA,KAACmP,IAAS,CAACxV,MAAO,CAAEyV,KAAM,GAAIrP,UAE5BC,EAAAA,EAAAA,KAACqP,IAAkB,CAEjBC,cAtBa,SAACrI,EAAO+H,QACbzR,IAAVyR,GACFrE,EAAW,oBAAoB,QAEnBpN,IAAVyR,GAAuBA,IAAUO,OAAOP,IAC1CvB,EAASuB,EAEb,EAgBQQ,YAAaxB,EACbrJ,MAAO6J,EACPQ,MAAOA,GAJFnE,EAAyBR,EAAaY,UASrD,C,4FCzDO,SAASjC,EAAUyG,GACtB,IAAMrO,GAAQsO,EAAAA,EAAAA,KAAQD,GAEtB,OADArO,EAAMuO,QAAU,GACTvO,EAAMwO,UACjB,CANA,IAtBuB,SAAC5K,EAAI6K,EAAIC,EAAY7E,EAAOE,GAC/C,GAAI0E,EACA,IAAK,IAAIvR,EAAI,EAAGA,EAAIuR,EAAGvS,OAAQgB,IAC3B,GAAIuR,EAAGvR,GAAO,KAAM0G,EAAI,CACpB,IAAM+K,EAAUF,EAAGvR,GAAW,OACxB0R,EAAoB,MAAXD,GAAkBA,aAAmBE,SAAUF,EAAQD,EAAa,OAAS,QAAQ3E,GAAmB4E,EACjH9G,EAAoB,MAAV+G,EAAiBA,EAAO/G,QAAU,CAAC,EACnD,OAAOiH,EAAAA,EAAAA,IAAW1L,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACbwL,GAAM,IACT/G,SAAOzE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOyE,GAAO,IAAEkH,KAAML,EAAa,OAAS,UACnDpG,UAAWuB,EAAQ,MAAQ,QAEnC,CAIR,OAAOiF,EAAAA,EAAAA,GAAY,CACfjH,QAAS,CAAEkH,KAAML,EAAa,OAAS,SACvCpG,UAAWuB,EAAQ,MAAQ,OAEnC,C","sources":["components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","components/ListboxComponent/index.js","components/FilterPanel/index.js","components/LegendPanel/index.js","components/FontsizeControl/index.js","config/menuItems.js","components/Menu/MenuContent.js","containers/LayoutContainer/theme.js"],"sourcesContent":["import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\n\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend, zoomLoc, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n    useEffect(()=>{\r\n        debugger\r\n        onSelectLegend('selectCountry',(d)=>{\r\n            onSelect({country:[d['title']]});\r\n            zoomTo(d.long,d.lat);\r\n        })\r\n    },[zoomTo,onSelect])\r\n\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n            //      marginTop:'-20vh',\r\n            // height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                // height={height*1.2}\r\n                height={height}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n                showAtmosphere={true}\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {toolbarRef&&<Portal container={toolbarRef.current}>\r\n            <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>\r\n        </Portal>}\r\n        {/*{legendHolderRef&&<Portal container={legendHolderRef.current}>*/}\r\n        {/*    <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*        <Stack sx={{m:1,p:0}}>*/}\r\n        {/*            <Typography>Top Stations by Country</Typography>*/}\r\n        {/*            {*/}\r\n        {/*                countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {*/}\r\n        {/*                    onSelect({country:[d['title']]});*/}\r\n        {/*                    zoomTo(d.long,d.lat);*/}\r\n        {/*                }}>*/}\r\n        {/*                    <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}*/}\r\n        {/*                </Typography>)*/}\r\n        {/*            }*/}\r\n        {/*            /!*{colorsCategory.domain().map(d => <Typography key={d} variant={'subtitle2'} onClick={()=> {*!/*/}\r\n        {/*            /!*    onSelect({country:[d]});*!/*/}\r\n        {/*            /!*    if (contriesMap[d])*!/*/}\r\n        {/*            /!*        zoomTo(contriesMap[d].long,contriesMap[d].lat);*!/*/}\r\n        {/*            /!*}}>*!/*/}\r\n        {/*            /!*    <div style={{width:50*countriesScale(contriesMap[d]?.count),height:10, backgroundColor:colorsCategory(d), display:'inline-block', marginRight:5}}></div>{d}*!/*/}\r\n        {/*            /!*</Typography>)}*!/*/}\r\n        {/*            /!*<Typography variant={'subtitle2'} >*!/*/}\r\n        {/*            /!*    <div style={{width:10,height:10, backgroundColor:colorsCategory('Other'), display:'inline-block', marginRight:5}}></div>---Other---*!/*/}\r\n        {/*            /!*</Typography>*!/*/}\r\n        {/*        </Stack>*/}\r\n        {/*    </Card>*/}\r\n        {/*</Portal>}*/}\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    }\r\n    // ,\r\n    // {\r\n    //     accessorKey: 'time_station',\r\n    //     header: 'Time',\r\n    //     type:'time',\r\n    //     filterDisable:true,\r\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    // }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\n\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,searchByStream,getList} = useDatabase();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    const fields = getList('fields');\r\n\r\n    useEffect(()=>{\r\n        setFilterOptions({...fields});\r\n    },[fields])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n        {/*<TimeRangePicker*/}\r\n        {/*    fromVal={(filters[\"time_station\"]?.from)??null}*/}\r\n        {/*    toVal={(filters[\"time_station\"]?.to)??null}*/}\r\n        {/*    onChange={(key,value) => {*/}\r\n        {/*        const val = {...(filters[\"time_station\"] ?? {})};*/}\r\n        {/*        if (value)*/}\r\n        {/*            val[key] = value;*/}\r\n        {/*        else*/}\r\n        {/*            delete val[key];*/}\r\n        {/*        dispatch(setFilter({key:\"time_station\",value:val}));*/}\r\n        {/*    }}*/}\r\n        {/*/>*/}\r\n    </Stack>\r\n}\r\n\r\nfunction CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport {\r\n    Card,\r\n    Stack,\r\n    Typography,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {scaleLinear, scaleOrdinal, extent} from \"d3\";\r\nimport {colorArr, TOP} from \"../Earth\";\r\n\r\n\r\nconst countriesScale = scaleLinear().range([0.1,1]);\r\n\r\nexport default function FilterPanel() {\r\n    const {getFuncCollection,getList} = useDatabase();\r\n    const countries = getList('countries');\r\n    const countriesScale = useMemo(()=>{\r\n        return scaleLinear().range([0.1,1]).domain(extent(countries, d => {\r\n            return d?.count\r\n        }))\r\n    },[countries]);\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    return <Grid >\r\n            <Stack\r\n                m={1}\r\n                style={{\r\n                    maxHeight:'30vh',\r\n                    overflowY:'auto'\r\n                }}\r\n            >\r\n                <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n                    <Stack sx={{m:1,p:0}}>\r\n                        <Typography>Top Stations by Country</Typography>\r\n                        {\r\n                            countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {\r\n                                getFuncCollection('selectCountry')(d)\r\n                            }}>\r\n                                <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}\r\n                            </Typography>)\r\n                        }\r\n                    </Stack>\r\n                </Card>\r\n            </Stack>\r\n        </Grid>\r\n}","import {ButtonGroup, Button, Stack} from \"@mui/material\";\r\nimport {Add as AddIcon, Remove as RemoveIcon} from '@mui/icons-material';\r\n\r\nexport default function FontsizeControl({title,onChange}) {\r\n    return<Stack direction={\"row\"} alignItems={'center'} justifyContent={'space-between'}>\r\n        {title}\r\n        <ButtonGroup size=\"small\" variant=\"outlined\" aria-label=\"outlined button group\"  sx={{color:\"unset\"}}>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(true)}>\r\n            <AddIcon/>\r\n        </Button>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(false)}>\r\n            <RemoveIcon/>\r\n        </Button>\r\n    </ButtonGroup>\r\n    </Stack>\r\n}","import React from 'react'\nimport {\n  AccountBox as AccountBoxIcon,\n  ChatBubble,\n  ChromeReaderMode,\n  Dashboard as DashboardIcon,\n  ExitToApp as ExitToAppIcon,\n  FilterList,\n  FormatTextdirectionRToL as RTLIcon,\n  FormatTextdirectionLToR as LTRIcon,\n  GetApp,\n  InfoOutlined,\n  Language as LanguageIcon,\n  Lock as LockIcon,\n  MenuOpen as MenuOpenIcon,\n  QuestionAnswer,\n  SettingsApplications as SettingsIcon,\n  Style as StyleIcon,\n  Tab,\n  ViewList,\n  Web,\n  FilterAlt,\n  Home as HomeIcon,\n    Map as MapIcon,\n    FileUpload,\n  FormatSize\n} from '@mui/icons-material';\n\nimport allLocales from './locales'\nimport allThemes from './themes'\n// import FilterPanel from \"../components/FilterPanel/index_static\";\nimport FilterPanel from \"../components/FilterPanel\";\nimport LegendPanel from \"../components/LegendPanel\";\nimport FontsizeControl from \"../components/FontsizeControl\";\n\nconst getMenuItems = (props) => {\n  const {\n    intl,\n    updateLocale,\n    locale,\n    menuContext,\n    themeContext,\n    a2HSContext,\n    auth: authData,\n    openAbout,\n    changeFontSize,\n  } = props\n\n  const { toggleThis, isDesktop, isAuthMenuOpen, isMiniSwitchVisibility } =\n    menuContext\n  const { themeID, setThemeID, isRTL, fontSize, toggleThisTheme, setFontSize } = themeContext\n  const { auth, setAuth } = authData\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\n\n  const localeItems = allLocales.map((l) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: l.locale }),\n      onClick: () => {\n        updateLocale(l.locale)\n      },\n      leftIcon: <LanguageIcon />,\n    }\n  })\n\n  const isAuthorised = auth.isAuthenticated\n\n  const themeItems = allThemes.map((t) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: t.id }),\n      onClick: () => {\n        setThemeID(t.id)\n      },\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\n    }\n  })\n\n  // if (isAuthMenuOpen || !isAuthorised) {\n  //   return [\n  //     {\n  //       value: '/my_account',\n  //       primaryText: intl.formatMessage({\n  //         id: 'my_account',\n  //         defaultMessage: 'My Account',\n  //       }),\n  //       leftIcon: <AccountBoxIcon />,\n  //     },\n  //   ]\n  // }\n  return [\n    {\n      value: null,\n      onClick: () => {\n        // deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'search',\n        defaultMessage: 'Search',\n      }),\n      leftIcon: <FilterAlt />,\n      primaryTogglesNestedList: true,\n      nestedItems: [\n        {\n          primaryText: <FilterPanel/>\n        },\n        {\n          primaryText: <LegendPanel/>\n        }\n      ]\n    },\n    {\n      value: '/',\n      visible: isAuthorised,\n      primaryText: intl.formatMessage({ id: 'home' }),\n      leftIcon: <HomeIcon />,\n    },\n    {\n      value: null,\n      visible: true,\n      primaryText: intl.formatMessage({ id: 'about' }),\n      leftIcon: <InfoOutlined />,\n      onClick:openAbout\n    },\n    { divider: true },\n    {\n      primaryText: intl.formatMessage({ id: 'settings' }),\n      primaryTogglesNestedList: true,\n      leftIcon: <SettingsIcon />,\n      nestedItems: [\n        {\n          primaryText: <FontsizeControl title={intl.formatMessage({id: 'Font size'})}\n                                        onChange={changeFontSize}/>,\n          leftIcon: <FormatSize/>,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'theme' }),\n          secondaryText: intl.formatMessage({ id: themeID }),\n          primaryTogglesNestedList: true,\n          leftIcon: <StyleIcon />,\n          nestedItems: themeItems,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'language' }),\n          secondaryText: intl.formatMessage({ id: locale }),\n          primaryTogglesNestedList: true,\n          leftIcon: <LanguageIcon />,\n          nestedItems: localeItems,\n        },\n        {\n          visible: isDesktop ? true : false,\n          onClick: () => {\n            toggleThis('isMiniSwitchVisibility')\n          },\n          primaryText: intl.formatMessage({\n            id: 'menu_mini_mode',\n          }),\n          leftIcon: isMiniSwitchVisibility ? (\n            <MenuOpenIcon />\n          ) : (\n            <ChromeReaderMode />\n          ),\n        },\n        {\n          onClick: () => {\n            toggleThisTheme('isRTL')\n          },\n          primaryText: `${isRTL ? 'LTR' : 'RTL'} mode`,\n          leftIcon: isRTL ? <LTRIcon /> : <RTLIcon />,\n        },\n      ],\n    },\n    {\n      value: null,\n      visible: isAppInstallable && !isAppInstalled,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'install',\n        defaultMessage: 'Install',\n      }),\n      leftIcon: <GetApp />,\n    },\n  ]\n}\nexport default getMenuItems\n","import React, {useCallback} from 'react'\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\nimport SelectableMenuList from 'material-ui-shell/lib/containers/SelectableMenuList'\nimport { useAddToHomeScreen } from 'base-shell/lib/providers/AddToHomeScreen'\nimport { useAuth } from 'base-shell/lib/providers/Auth'\nimport { useConfig } from 'base-shell/lib/providers/Config'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\nimport { useLocale } from 'base-shell/lib/providers/Locale'\nimport { useMenu } from 'material-ui-shell/lib/providers/Menu'\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\nimport getMenuItems from '../../config/menuItems'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DECREASE_FONT_SIZE, INCREASE_FONT_SIZE, SET_FONT_SIZE, SET_MENU} from \"../../reducer/actions/setting\";\n// import FilterPanel from \"../FilterPanel\";\n\nconst Menu = (props) => {\n  const intl = useIntl()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const auth = useAuth()\n  const menuContext = useMenu()\n  const a2HSContext = useAddToHomeScreen()\n  const { toggleThis, isMiniMode, isMiniSwitchVisibility } = menuContext || {}\n  const { appConfig } = useConfig()\n  const { setLocale, locale = 'en' } = useLocale()\n  const themeContext = useAppTheme();\n  const dispatch = useDispatch();\n  const changeFontSize = (isIncrease)=>{\n    if (isIncrease)\n      dispatch({ type: INCREASE_FONT_SIZE});\n    else\n      dispatch({ type: DECREASE_FONT_SIZE})\n  }\n\n  const menuItems = getMenuItems({\n    intl,\n    locale,\n    updateLocale: setLocale,\n    menuContext,\n    themeContext,\n    appConfig,\n    a2HSContext,\n    auth,\n    openAbout:()=>{dispatch({ type: SET_MENU, opened: true });},\n    changeFontSize,\n    ...props,\n  }).filter((item) => {\n    return item.visible !== false\n  })\n\n\n  const index = location ? location.pathname : '/'\n\n  const handleChange = (event, index) => {\n    if (index !== undefined) {\n      toggleThis('isMobileMenuOpen', false)\n    }\n    if (index !== undefined && index !== Object(index)) {\n      navigate(index)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        /*  direction: isRTL ? 'rtl' : 'ltr' */\n      }}\n    >\n      <Scrollbar style={{ flex: 1 }}>\n        {/*<FilterPanel/>*/}\n        <SelectableMenuList\n          key={isMiniSwitchVisibility + themeContext.isRTL}\n          onIndexChange={handleChange}\n          useMinified={isMiniMode}\n          items={menuItems}\n          index={index}\n        />\n      </Scrollbar>\n    </div>\n  )\n}\n\nexport default Menu\n","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}"],"names":["exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","width","height","onSelect","onSelectLegend","zoomLoc","toolbarRef","globeEl","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","title","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","_jsxs","background","position","children","_jsx","Globe","globeImageUrl","earthNight","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","Portal","container","IconButton","onClick","SaveIcon","fields","accessorKey","header","dynamic","filterSearch","filter","f","filterDisable","React","props","role","other","_objectWithoutProperties","_excluded","itemCount","Array","isArray","viewboxRef","_objectSpread","ViewportList","viewportRef","items","Type","type","_createElement","key","id","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","state","FilterPanel","filters","useSelector","selectFilters","dispatch","useDispatch","filterOptions","setFilterOptions","_useDatabase","useDatabase","isLoading","searchByStream","getList","Stack","spacing","padding","_filters$f$accessorKe","CusAutocomplete","multiple","size","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","value","onChange","event","setFilter","onInputChange","newInputValue","renderInput","params","TextField","label","_ref2$onInputChange","_React$useState","_React$useState2","input","setInput","Autocomplete","inputValue","newValue","reason","onBlur","scaleLinear","getFuncCollection","extent","scaleOrdinal","Grid","m","maxHeight","overflowY","Card","sx","pointerEvents","backgroundColor","theme","semicolor","palette","paper","p","Typography","_countriesScale","variant","display","marginRight","FontsizeControl","direction","alignItems","justifyContent","ButtonGroup","Button","AddIcon","RemoveIcon","intl","updateLocale","locale","menuContext","themeContext","a2HSContext","authData","auth","openAbout","changeFontSize","toggleThis","isDesktop","isMiniSwitchVisibility","isAuthMenuOpen","themeID","setThemeID","isRTL","toggleThisTheme","fontSize","setFontSize","isAppInstallable","setAuth","isAppInstalled","deferredPrompt","localeItems","allLocales","l","visible","primaryText","formatMessage","leftIcon","LanguageIcon","isAuthorised","isAuthenticated","themeItems","allThemes","t","StyleIcon","defaultMessage","FilterAlt","primaryTogglesNestedList","nestedItems","LegendPanel","HomeIcon","InfoOutlined","divider","SettingsIcon","FormatSize","secondaryText","MenuOpenIcon","ChromeReaderMode","LTRIcon","RTLIcon","prompt","GetApp","useIntl","navigate","useNavigate","location","useLocation","useAuth","useMenu","useAddToHomeScreen","isMiniMode","appConfig","useConfig","_useLocale","useLocale","setLocale","_useLocale$locale","useAppTheme","menuItems","getMenuItems","SET_MENU","opened","isIncrease","INCREASE_FONT_SIZE","DECREASE_FONT_SIZE","item","index","pathname","flexDirection","Scrollbar","flex","SelectableMenuList","onIndexChange","Object","useMinified","_color","d3color","opacity","toString","ts","isDarkMode","_source","source","Function","createTheme","mode"],"sourceRoot":""}