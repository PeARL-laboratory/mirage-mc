{"version":3,"file":"static/js/574.bf7c8268.chunk.js","mappings":"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","sources":["Providers/Database/Context.js","Providers/Database/Provider.js","Providers/Database/index.js","containers/LayoutContainer/theme.js","containers/LayoutContainer/LayoutContainer_replace.js","containers/DatabaseContainer/DatabaseContainer.js","containers/LayoutContainer/LayoutContainer.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const Context = React.createContext(null)\r\n\r\nexport default Context","import React, {useCallback, useEffect, useReducer} from 'react'\r\nimport Context from './Context'\r\nimport {groups as d3groups, group as d3group, mean as d3mean, csv as d3csv} from \"d3\"\r\nimport {uniq} from 'lodash';\r\nimport RG_stations_listed from \"./data/Jan_24_2023/stations_listed.csv\"\r\nimport RG_locations_listed from \"./data/Jan_24_2023/locations_listed.csv\"\r\nimport RG_metadata from \"./data/Jan_24_2023/metadata.csv\"\r\nimport RG_streamDetail from \"./data/Jan_24_2023/streamDetail.csv\"\r\n\r\nfunction reducer(state, action) {\r\n    const { type, path, isLoading=false,error = false,\r\n        hasError = false, value } = action;\r\n    switch (type) {\r\n        case \"LOADING_CHANGED\":\r\n            return { ...state, [path]: { ...state[path], isLoading } };\r\n        case \"VALUE_CHANGE\":\r\n            return {\r\n                ...state,\r\n                [path]: { ...state[path], value, isLoading, error, hasError },\r\n            };\r\n        case \"INIT\":\r\n            return {...state,isInit:value}\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nfunction handleData({stationData, locationData, metaData}) {\r\n    const groupByLocation = d3groups(stationData, d => d[\"city_id\"]);\r\n    // route\r\n    console.time('---group meta---')\r\n    const byLocName = d3group(locationData, d=>d['city_id']);\r\n    const metabyLocName = d3group(metaData,d=>d['city_id']);\r\n    console.timeEnd('---group meta---')\r\n\r\n    const locs = groupByLocation.map(d => {\r\n        const meta = metabyLocName.get(d[0])??[];\r\n        const locinfo = (byLocName.get(d[0])??[])[0]??{};\r\n        return {\r\n            ...locinfo,\r\n            \"title\": `${locinfo.city} - ${locinfo.country}`,\r\n            count: d[1].length,\r\n            values: d[1],\r\n            // genre: d3groups(meta,d=>d.station_genre).map(d=>{d.title=d[0];d.count=d[1].length;return d}),\r\n            city: [[locinfo.city,meta]].map(d=>{d.title=d[0];d.count=d[1].length;return d}),\r\n        }\r\n    });\r\n    locs.sort((a, b) => b.count - a.count);\r\n\r\n\r\n    const countries = d3groups(stationData, d => d[\"country\"]).map(d => {\r\n        return {\r\n            \"title\": d[0],\r\n            long: d3mean(d[1], e => e.long),\r\n            lat: d3mean(d[1], e => e.lat),\r\n            count: d[1].length,\r\n            values: d[1]\r\n        }\r\n    }).sort((a, b) => b.count - a.count);\r\n\r\n    return {locs, countries};\r\n}\r\nconst init = {rawData: {value:{stationData:[],\r\n            locationData:[],\r\n            metaData:[], streamDetail:[]}},\r\n    locs:{},\r\n    countries:{},\r\n    events: {},\r\n    loading:false,\r\n    error:false,\r\n    isInit:false\r\n}\r\nlet isfirst = 0;\r\nconst Provider = ({  children }) => {\r\n    const [state, dispatch] = useReducer(reducer, init);\r\n\r\n    useEffect(() => {\r\n        if (!isfirst) {\r\n            isfirst = 1;\r\n            try {\r\n                console.time('Load and process data');\r\n                console.time('-Load data-');\r\n                dispatch({type: 'LOADING_CHANGED', path: 'rawData', isLoading: true});\r\n                dispatch({type: 'LOADING_CHANGED', path: 'locs', isLoading: true});\r\n                dispatch({type: 'LOADING_CHANGED', path: 'countries', isLoading: true});\r\n                // load data\r\n                Promise.all([\r\n                    d3csv(RG_stations_listed),\r\n                    d3csv(RG_locations_listed),\r\n                    d3csv(RG_metadata),\r\n                    d3csv(RG_streamDetail),\r\n                ]).then(([stationData, locationData, metaData, streamDetail]) => {\r\n                    console.timeEnd('-Load data-');\r\n                    console.time('-Correct data-');\r\n                    const locationDataMap = {};\r\n                    locationData.forEach(d => {\r\n                        d.lat = (+d.longitude);\r\n                        d.long = (+d.latitude);\r\n                        delete d.longitude;\r\n                        delete d.latitude;\r\n                        locationDataMap[d['city_id']] = d;\r\n                    });\r\n                    let stationDataMap = {};\r\n                    stationData.forEach(d => {\r\n                        d.lat = locationDataMap[d['city_id']].lat;\r\n                        d.long = locationDataMap[d['city_id']].long;\r\n                        d.country = locationDataMap[d['city_id']].country;\r\n                        d.city = locationDataMap[d['city_id']].city;\r\n                        stationDataMap[d['station_id']] = d;\r\n                    });\r\n\r\n                    metaData.forEach((d) => {\r\n                        d.station_genre = stationDataMap[d['station_id']].station_genre;\r\n                        d.city = locationDataMap[d['city_id']].city;\r\n                        d.country = locationDataMap[d['city_id']].country;\r\n                        d.station = stationDataMap[d['station_id']].station;\r\n                        d.stream_artist = streamDetail[d['stream_detail_id']].stream_artist;\r\n                        d.stream_title = streamDetail[d['stream_detail_id']].stream_title;\r\n                        // d.stream_song = streamDetail[d['stream_detail_id']].stream_song;\r\n                        // d.time_station = streamDetail[d['stream_detail_id']].time_station;\r\n                    })\r\n\r\n                    const rawData = {stationData, locationData, metaData, streamDetail,stationDataMap,locationDataMap};\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'rawData', value: rawData, isLoading: false,});\r\n                    console.timeEnd('-Correct data-');\r\n                    console.time('-filterdata-');\r\n                    const {locs, countries} = handleData(rawData);\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'locs', value: locs, isLoading: false});\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'countries', value: countries, isLoading: false});\r\n                    dispatch({type: 'VALUE_CHANGE', path: 'events', value: metaData, isLoading: false});\r\n                    console.timeEnd('-filterdata-');\r\n                    console.timeEnd('Load and process data');\r\n                });\r\n            } catch (error) {\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'rawData',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'locs',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n                dispatch({\r\n                    type: \"ERROR\",\r\n                    path: 'countries',\r\n                    isLoading: false,\r\n                    error,\r\n                    hasError: true,\r\n                });\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const getListError = useCallback(\r\n        (path) => {\r\n            return state[path] ? state[path].error : false;\r\n        },\r\n        [state]\r\n    );\r\n    const getList = useCallback(\r\n        (path) => {\r\n            return state[path] && state[path].value ? state[path].value : [];\r\n        },\r\n        [state]\r\n    );\r\n\r\n    // get list of field\r\n    const getDistinctField = useCallback(\r\n        (field) => {\r\n            switch (field) {\r\n                case 'City':\r\n                    return state.rawData && state.rawData.value.locationData ? state.rawData.value.locationData.map(d=>d.city) : [];\r\n                case 'Country':\r\n                    return state.countries && state.countries.value ? state.countries.value.map(d=>d.title) : [];\r\n                case 'Genre':\r\n                    return state.rawData && state.rawData.value.metaData ? uniq(state.rawData.value.metaData.map(d=>d.station_genre)) : [];\r\n                case 'Artist':\r\n                    return state.rawData && state.rawData.value.streamDetail ? uniq(state.rawData.value.streamDetail.map(d=>d.stream_artist)) : [];\r\n                case 'Song':\r\n                    return state.rawData && state.rawData.value.streamDetail ? uniq(state.rawData.value.streamDetail.map(d=>d.stream_song)) : [];\r\n                default:\r\n                    return [];\r\n            }\r\n        },\r\n        [state]\r\n    );\r\n\r\n    const getEvents = useCallback(\r\n        (limit) => {\r\n            return (state.events && state.events.value ? state.events.value : []).slice(0,limit);\r\n        },\r\n        [state]\r\n    );\r\n    const getDetail = useCallback(\r\n        (stream_detail_id) => {\r\n            const r = (state.events && state.events.value ? state.events.value : []).find(d=>d.stream_detail_id===stream_detail_id);\r\n            if (r) {\r\n                return {\r\n                    ...r,\r\n                    station_description:state.rawData.value.stationDataMap[r['station_id']].station_description,\r\n                    station_url:state.rawData.value.stationDataMap[r['station_id']].station_url,\r\n                    lat:state.rawData.value.locationDataMap[r['city_id']].lat,\r\n                    long:state.rawData.value.locationDataMap[r['city_id']].long,\r\n                    url:state.rawData.value.stationDataMap[r['station_id']].url,\r\n                    stream_song:state.rawData.value.streamDetail[r['stream_detail_id']].stream_song,\r\n                }\r\n            }else\r\n                return null\r\n        },\r\n        [state]\r\n    );\r\n\r\n    const isLoading = useCallback(\r\n        (path) => {\r\n            return state[path] ? state[path].isLoading : false;\r\n        },\r\n        [state]\r\n    );\r\n    return (\r\n        <Context.Provider value={{\r\n            getList,\r\n            getEvents,\r\n            getDistinctField,\r\n            getDetail,\r\n            getListError,\r\n            isLoading\r\n        }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Provider;","import { useContext } from 'react'\r\nimport Context from './Context'\r\nexport { default as withDatabase } from './with.js'\r\nexport { default } from './Provider.js'\r\n\r\nexport function useDatabase() {\r\n    return useContext(Context)\r\n}","import { createTheme } from '@mui/material/styles'\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light'):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource","import { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { CssBaseline } from '@mui/material'\r\nimport PWAPrompt from 'react-ios-pwa-prompt'\r\nimport React from 'react'\r\nimport { useTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport UpdateContainer from 'material-ui-shell/lib/containers/UpdateContainer/UpdateContainer'\r\nimport QuestionDialogsProvider from 'material-ui-shell/lib/providers/Dialogs/Question/Provider'\r\nimport getThemeSource from './theme'\r\nimport { SnackbarProvider } from 'notistack'\r\nimport { ThemeProvider } from '@mui/material/styles'\r\nimport { useIntl } from 'react-intl'\r\nimport FilterProvider from 'material-ui-shell/lib/providers/Filter/Provider'\r\nimport VirtualListsProvider from 'material-ui-shell/lib/providers/VirtualLists/Provider'\r\nimport MenuProvider from 'material-ui-shell/lib/providers/Menu/Provider'\r\nimport AppThemeProvider from 'material-ui-shell/lib/providers/Theme/Provider'\r\nimport '@fontsource/roboto/300.css'\r\nimport '@fontsource/roboto/400.css'\r\nimport '@fontsource/roboto/500.css'\r\nimport '@fontsource/roboto/700.css'\r\n\r\nconst LayoutContent = ({ children }) => {\r\n    const intl = useIntl()\r\n    const { appConfig } = useConfig()\r\n    const { themeID, isDarkMode, isRTL } = useTheme()\r\n    const { theme: themeConfig, pwa, notistack } = appConfig || {}\r\n    const { useiOSPWAPrompt, iOSPWAPromptProps } = pwa || {}\r\n    const { themes = [] } = themeConfig || {}\r\n    const theme = getThemeSource(themeID, themes, isDarkMode, isRTL)\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <SnackbarProvider maxSnack={3} {...notistack}>\r\n                <UpdateContainer>\r\n                    <QuestionDialogsProvider>\r\n                        <FilterProvider>\r\n                            <VirtualListsProvider>{children}</VirtualListsProvider>\r\n                        </FilterProvider>\r\n                    </QuestionDialogsProvider>\r\n                </UpdateContainer>\r\n            </SnackbarProvider>\r\n            {useiOSPWAPrompt && (\r\n                <PWAPrompt\r\n                    //debug={true}\r\n                    promptOnVisit={1}\r\n                    timesToShow={3}\r\n                    copyTitle={intl.formatMessage({\r\n                        id: 'ios_prompt_title',\r\n                        defaultMessage: 'Add to Home Screen',\r\n                    })}\r\n                    copyClosePrompt={intl.formatMessage({\r\n                        id: 'ios_prompt_close',\r\n                        defaultMessage: 'Close',\r\n                    })}\r\n                    copyBody={intl.formatMessage({\r\n                        id: 'ios_prompt_body',\r\n                        defaultMessage:\r\n                            'This website has app functionality. Add it to your home screen to use it in fullscreen and while offline.',\r\n                    })}\r\n                    copyShareButtonLabel={intl.formatMessage({\r\n                        id: 'ios_prompt_share_button',\r\n                        defaultMessage: \"1) Press the 'Share' button\",\r\n                    })}\r\n                    copyAddHomeButtonLabel={intl.formatMessage({\r\n                        id: 'ios_prompt_add_to_home_button',\r\n                        defaultMessage: \"2) Press 'Add to Home Screen'\",\r\n                    })}\r\n                    permanentlyHideOnDismiss={false}\r\n                    {...iOSPWAPromptProps}\r\n                />\r\n            )}\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default function ({ children }) {\r\n    const { appConfig } = useConfig()\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <MenuProvider appConfig={appConfig}>\r\n                <AppThemeProvider appConfig={appConfig}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                        }}\r\n                    >\r\n                        <LayoutContent>{children}</LayoutContent>\r\n                    </div>\r\n                </AppThemeProvider>\r\n            </MenuProvider>\r\n        </React.Fragment>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterMoment as DateAdapter } from \"@mui/x-date-pickers/AdapterMoment\";\r\nimport DataProvider from \"../../Providers/Database\"\r\n\r\nexport default function ({ children }) {\r\n    // const { appConfig } = useConfig();\r\n\r\n    // if (getApps().length === 0) {\r\n    //     initializeApp(\r\n    //         process.env.NODE_ENV !== \"production\" ? dev.initConfig : prod.initConfig\r\n    //     );\r\n    // }\r\n\r\n    return (\r\n        <DataProvider>\r\n            <LocalizationProvider dateAdapter={DateAdapter}>\r\n                {children}\r\n            </LocalizationProvider>\r\n        </DataProvider>\r\n    )\r\n}","import React,{useEffect} from 'react'\r\nimport LayoutContainer from './LayoutContainer_replace'//'material-ui-shell/lib/containers/LayoutContainer/LayoutContainer';\r\nimport Database from '../DatabaseContainer/DatabaseContainer'\r\n\r\nexport default function ({ children }) {\r\n    return (\r\n            <LayoutContainer>\r\n                <Database>\r\n                    {children}\r\n                </Database>\r\n            </LayoutContainer>\r\n    )\r\n}"],"names":["React","reducer","state","action","type","path","isLoading","error","hasError","value","isInit","Error","init","rawData","stationData","locationData","metaData","streamDetail","locs","countries","events","loading","isfirst","children","useReducer","dispatch","useEffect","console","time","Promise","all","d3csv","RG_stations_listed","RG_locations_listed","RG_metadata","RG_streamDetail","then","timeEnd","locationDataMap","forEach","d","lat","longitude","long","latitude","stationDataMap","country","city","station_genre","station","stream_artist","stream_title","groupByLocation","d3groups","byLocName","d3group","metabyLocName","map","meta","get","locinfo","count","length","values","title","sort","a","b","d3mean","e","handleData","getListError","useCallback","getList","getDistinctField","field","uniq","stream_song","getEvents","limit","slice","getDetail","stream_detail_id","r","find","station_description","station_url","url","useDatabase","useContext","Context","id","ts","isDarkMode","isRTL","i","_source","source","Function","palette","createTheme","mode","direction","LayoutContent","intl","useIntl","appConfig","useConfig","useTheme","themeID","themeConfig","theme","pwa","notistack","useiOSPWAPrompt","iOSPWAPromptProps","themes","getThemeSource","ThemeProvider","CssBaseline","SnackbarProvider","maxSnack","promptOnVisit","timesToShow","copyTitle","formatMessage","defaultMessage","copyClosePrompt","copyBody","copyShareButtonLabel","copyAddHomeButtonLabel","permanentlyHideOnDismiss","style","display","LocalizationProvider","dateAdapter","DateAdapter"],"sourceRoot":""}