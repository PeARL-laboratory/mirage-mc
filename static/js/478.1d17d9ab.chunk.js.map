{"version":3,"file":"static/js/478.1d17d9ab.chunk.js","mappings":"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","sources":["components/Earth/htm2image.js","components/Earth/index.js","components/EventTable/fields.js","containers/LayoutContainer/theme.js","containers/Page/Page.js","components/EventTable/index.js","containers/UndoRedo/index.js","components/DetailCard/index.js","components/Map/index.js","components/EventDetail/index.js","pages/LandingPage/LandingPage.js"],"sourcesContent":["import canvasToImage from 'canvas-to-image';\r\nimport {select} from 'd3';\r\n\r\nconst exportAsImage = async (el, imageFileName) => {\r\n    // htmlToImage.toPng(el,{ cacheBust: true, })\r\n    //     .then(function (dataUrl) {\r\n    //         debugger\r\n    //         downloadImage(dataUrl, imageFileName);\r\n    //     });\r\n    // htmlToImage.toPng(select(el).select('canvas').node())\r\n    //     .then(function (dataUrl) {\r\n    //         var img = new Image();\r\n    //         img.crossOrigin = \"Anonymous\";\r\n    //         img.src = dataUrl;\r\n    //         document.body.appendChild(img);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //         console.error('oops, something went wrong!', error);\r\n    //     });\r\n    const renderer = el.renderer();\r\n    const scene = el.scene();\r\n    const camera = el.camera();\r\n    renderer.render(scene,camera);\r\n    const blob = renderer.domElement.toDataURL();\r\n    downloadImage(blob, imageFileName)\r\n    // const canvas = select(el).select('canvas').node();\r\n    // var context = canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});\r\n    // const capturedImage = videocanvas.toDataURL();\r\n    // canvasToImage(canvas, {\r\n    //     name: 'myImage',\r\n    //     type: 'jpg',\r\n    //     quality: 0.7\r\n    // });\r\n};\r\n\r\nconst downloadImage = (blob, fileName) => {\r\n    const fakeLink = window.document.createElement(\"a\");\r\n    fakeLink.style = \"display:none;\";\r\n    fakeLink.download = fileName;\r\n\r\n    fakeLink.href = blob;\r\n\r\n    document.body.appendChild(fakeLink);\r\n    fakeLink.click();\r\n    document.body.removeChild(fakeLink);\r\n\r\n    fakeLink.remove();\r\n};\r\nexport default exportAsImage;\r\n","import React, {useState, useEffect, useRef, useCallback, useMemo, useLayoutEffect, forwardRef} from 'react';\r\nimport earthNight from '../../assets/earth-night.jpg'\r\nimport Globe from 'react-globe.gl'\r\nimport * as d3 from 'd3'\r\nimport './index.css'\r\nimport {Card, CardContent, IconButton, Portal, Stack, Typography} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport exportAsImage from \"./htm2image\";\r\n\r\n\r\nexport const TOP = 20;\r\nexport const colorArr = ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\r\n\r\nconst arcThickScale = d3.scaleLinear().range([0.01,0.7]);\r\nconst labelScale = d3.scaleLinear().range([0.3,0.4]);\r\nconst countriesScale = d3.scaleLinear().range([0.1,1]);\r\n\r\n\r\n\r\n\r\nconst Earth3D = forwardRef(({locs,countries,width,height,onSelect,onSelectLegend, zoomLoc, legendHolderRef, toolbarRef} , ref) => {\r\n    const globeEl = useRef();\r\n    const holderRef = useRef();\r\n    const [colorKey, setColorKey] = useState('country');\r\n    const [selectPoint, setSelectPoint] = useState();\r\n    const [currentSequnce,setCurrentSequnce] = useState(0);\r\n    const [MAP_CENTERs,setMAP_CENTERs] = useState([{ lat: -92.52824601944323, lng: 38.31079101844495, altitude: 1.8 },{ lat: 51.58421865, lng: 45.9571029, altitude: 1.8 },{ lat: 31.3037101, lng: -89.29276214, altitude: 1.8 },{ lat: 33.5842591, lng: -101.8804709, altitude: 1.8 }]);\r\n    const [ringData,setRingData] = useState([]);\r\n    const [contriesMap,setcontriesMap] = useState({});\r\n\r\n    const colorsCategory = useMemo(()=>{\r\n        return function(otherColor=\"#ececec\"){\r\n            const scale = d3.scaleOrdinal(colorArr);\r\n            let master = (val)=>{\r\n                if ((!val)||(val==='')||(val.trim===''))\r\n                    return 'black'\r\n                const domain = scale.domain();\r\n                if (domain.find(d=>d===val)|| (domain.length<TOP))\r\n                    return scale(val);\r\n                else\r\n                    return otherColor\r\n            };\r\n            master.domain = scale.domain;\r\n            master.range = scale.range;\r\n            return master;\r\n        }();\r\n    },[]);\r\n\r\n    function handleData({locs,countries}) {\r\n        const contriesMap = {};\r\n        const range = d3.extent(locs, d => d?.count);\r\n        \r\n        arcThickScale.domain(range);\r\n        labelScale.domain(range);\r\n\r\n        countriesScale.domain(d3.extent(countries, d => {\r\n            contriesMap[d.title] = d;\r\n            return d?.count\r\n        }));\r\n\r\n        //color\r\n        colorsCategory.domain([]).range(colorArr);\r\n        countries.forEach(d=>colorsCategory(d.title));\r\n\r\n        let order = 0;\r\n        if (countries.length>3)\r\n        [0,1,2,3,0].forEach(i=> {\r\n            if (!MAP_CENTERs[order])\r\n                MAP_CENTERs[order] = {lat:0,lng:0,altitude:1}\r\n            MAP_CENTERs[order].lat = countries[i].lat;\r\n            MAP_CENTERs[order].lng = countries[i].long;\r\n            order++\r\n        });\r\n\r\n        \r\n        return {MAP_CENTERs,contriesMap};\r\n    }\r\n    useEffect(() => {\r\n        const {MAP_CENTERs,contriesMap} = handleData({locs,countries})\r\n        setcontriesMap(contriesMap)\r\n        setMAP_CENTERs(MAP_CENTERs);\r\n        if (!zoomLoc)\r\n            setCurrentSequnce(0);\r\n    }, [locs,countries]);\r\n\r\n    const [timer,setTimer] = useState(null);\r\n    useEffect(()=>{\r\n        if (globeEl.current) {\r\n            if (currentSequnce < MAP_CENTERs.length) {\r\n\r\n                const interval = setTimeout(() => {\r\n                    globeEl.current.pointOfView(MAP_CENTERs[currentSequnce], 4000)\r\n                    setCurrentSequnce(currentSequnce + 1);\r\n                }, 4000);\r\n                setTimer(interval);\r\n                return () => {\r\n                    clearInterval(interval);\r\n                };\r\n            }\r\n        }\r\n    },[currentSequnce,MAP_CENTERs])\r\n    const stopPlay = useCallback(()=>{\r\n        if (timer)\r\n            clearInterval(timer);\r\n        setCurrentSequnce(MAP_CENTERs.length);\r\n    },[timer]);\r\n\r\n    const [timerRing,setTimerRing] = useState(null);\r\n    const zoomTo = useCallback((lng,lat)=>{\r\n        if (globeEl.current) {\r\n            stopPlay();\r\n            globeEl.current.pointOfView({ lat, lng, altitude: 1.2 }, 2000);\r\n            setRingData([{lng,lat}]);\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n            let interval = setTimeout(() => {\r\n                setRingData([])\r\n            }, 10000);\r\n            setTimerRing(interval);\r\n        }\r\n    },[currentSequnce,stopPlay,timerRing])\r\n    useEffect(()=>{\r\n        if (zoomLoc)\r\n            zoomTo(zoomLoc.lng,zoomLoc.lat);\r\n        return () => {\r\n            if (timerRing)\r\n                clearInterval(timerRing);\r\n        };\r\n    },[zoomLoc])\r\n\r\n    const onSaveImage = useCallback(() => {\r\n        debugger\r\n        exportAsImage(globeEl.current,'MIRAGE-mc');\r\n    },[holderRef,globeEl]);\r\n\r\n    useEffect(()=>{\r\n        onSelectLegend('selectCountry',(d)=>{\r\n            onSelect({country:[d['title']]});\r\n            zoomTo(d.long,d.lat);\r\n        })\r\n    },[zoomTo,onSelect])\r\n\r\n\r\n    return  <div\r\n        style={{\r\n            background: \"#000010\",\r\n            position: \"relative\"\r\n        }}\r\n    >\r\n        <div ref={holderRef}\r\n             style={{\r\n            // transform: \"translate(0, -20vh)\",\r\n                 marginTop:'-20vh',\r\n            height: '120vh'\r\n\r\n        }}>\r\n            <Globe\r\n                width={width}\r\n                height={height*1.2}\r\n                ref={globeEl}\r\n                globeImageUrl={earthNight}\r\n                showAtmosphere={true}\r\n                ringsData={ringData}\r\n                ringColor={()=>'#D39F49'}\r\n                ringResolution={1000}\r\n                ringMaxRadius={5}\r\n                ringPropagationSpeed={5}\r\n                ringRepeatPeriod={500}\r\n\r\n                labelsData={countries}\r\n                labelLat={useCallback(d => d.lat,[])}\r\n                labelLng={useCallback(d => d.long,[])}\r\n                labelAltitude={useCallback(d=>(selectPoint&&(selectPoint['country']===d['title']))?0.05:0.02,[selectPoint])}\r\n                labelText={useCallback(d => d['title'],[])}\r\n                // labelSize={d => (selectPoint&&(selectPoint===d))?0.8:arcThickScale(d?.count)/3}\r\n                labelSize={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?1:labelScale(d?.count),[selectPoint])}\r\n                // labelSize={useCallback(d => labelScale(arcThickScale(d?.count)),[])}\r\n                labelDotRadius={0}\r\n                // labelColor={useCallback(d => (selectPoint&&(selectPoint['country']===d['title']))?('#dd6700'):(d.color??'white'),[selectPoint])}\r\n                labelColor={useCallback(d => (d.color??'white'),[selectPoint])}\r\n                labelResolution={2}\r\n\r\n                hexBinPointsData={locs}\r\n                hexBinPointWeight=\"count\"\r\n                hexBinPointLng={useCallback(d => d.long,[])}\r\n                hexBinPointLat={useCallback(d => d.lat,[])}\r\n                hexAltitude={useCallback(d => arcThickScale(d.sumWeight),[])}\r\n                hexBinResolution={4}\r\n                hexTopColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexSideColor={useCallback(d => colorsCategory(d.points[0][colorKey]),[])}\r\n                hexBinMerge={false}\r\n                onHexHover ={useCallback((hex)=>{if (hex){\r\n                    setSelectPoint(hex.points[0])\r\n                }else\r\n                    setSelectPoint(undefined);\r\n                },[])}\r\n                hexLabel={useCallback(d => {return `<div class=\"overlay-holder\">\r\n            <div class=\"overlay-header\">\r\n                <span><b>${d3.sum(d.points,s=>s?.count)}</b> stations</span>\r\n            </div>\r\n            <div class=\"overlay-content\">\r\n            <table>\r\n                <tbody><tr>${d.points.slice().sort((a, b) => b?.count - a?.count).map(d => `<td>[${d?.count}]</td><td>${d.title}</td>`).join('</tr><tr>')}</tr></tbody>\r\n            </table>\r\n            </div>\r\n          </div>`},[])}\r\n                onHexClick={(d)=>{\r\n                    const city = [];\r\n                    d.points.forEach(d => {\r\n                        debugger\r\n                        city.push(d.city)\r\n                    })\r\n                    onSelect({city,country:[d.points[0]?.country]});\r\n                }\r\n                }\r\n                onGlobeClick={stopPlay}\r\n            />\r\n        </div>\r\n        {toolbarRef&&<Portal container={toolbarRef.current}>\r\n            <IconButton onClick={onSaveImage}><SaveIcon/></IconButton>\r\n        </Portal>}\r\n        {/*{legendHolderRef&&<Portal container={legendHolderRef.current}>*/}\r\n        {/*    <Card sx={{pointerEvents:'all', overflowY:'auto', backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>*/}\r\n        {/*        <Stack sx={{m:1,p:0}}>*/}\r\n        {/*            <Typography>Top Stations by Country</Typography>*/}\r\n        {/*            {*/}\r\n        {/*                countries.map(d=><Typography key={d['title']} variant={'subtitle2'} onClick={()=> {*/}\r\n        {/*                    onSelect({country:[d['title']]});*/}\r\n        {/*                    zoomTo(d.long,d.lat);*/}\r\n        {/*                }}>*/}\r\n        {/*                    <div style={{width:50*(countriesScale(d.count)??1),height:10, backgroundColor:colorsCategory(d['title']), display:'inline-block', marginRight:5}}></div>{d['title']}*/}\r\n        {/*                </Typography>)*/}\r\n        {/*            }*/}\r\n        {/*            /!*{colorsCategory.domain().map(d => <Typography key={d} variant={'subtitle2'} onClick={()=> {*!/*/}\r\n        {/*            /!*    onSelect({country:[d]});*!/*/}\r\n        {/*            /!*    if (contriesMap[d])*!/*/}\r\n        {/*            /!*        zoomTo(contriesMap[d].long,contriesMap[d].lat);*!/*/}\r\n        {/*            /!*}}>*!/*/}\r\n        {/*            /!*    <div style={{width:50*countriesScale(contriesMap[d]?.count),height:10, backgroundColor:colorsCategory(d), display:'inline-block', marginRight:5}}></div>{d}*!/*/}\r\n        {/*            /!*</Typography>)}*!/*/}\r\n        {/*            /!*<Typography variant={'subtitle2'} >*!/*/}\r\n        {/*            /!*    <div style={{width:10,height:10, backgroundColor:colorsCategory('Other'), display:'inline-block', marginRight:5}}></div>---Other---*!/*/}\r\n        {/*            /!*</Typography>*!/*/}\r\n        {/*        </Stack>*/}\r\n        {/*    </Card>*/}\r\n        {/*</Portal>}*/}\r\n    </div>;\r\n})\r\n\r\nexport default Earth3D;\r\n","import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    }\r\n    // ,\r\n    // {\r\n    //     accessorKey: 'time_station',\r\n    //     header: 'Time',\r\n    //     type:'time',\r\n    //     filterDisable:true,\r\n    //     accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    // }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import { createTheme } from '@mui/material/styles'\r\nimport {color as d3color} from \"d3\";\r\n\r\nconst getThemeSource = (id, ts, isDarkMode, isRTL, fontSize) => {\r\n    if (ts) {\r\n        for (let i = 0; i < ts.length; i++) {\r\n            if (ts[i]['id'] === id) {\r\n                const _source = ts[i]['source']\r\n                const source = _source != null ?(_source instanceof Function ?_source(isDarkMode ? 'dark' : 'light',fontSize):_source):_source;\r\n                const palette = source != null ? source.palette : {}\r\n                return createTheme({\r\n                    ...source,\r\n                    palette: { ...palette, mode: isDarkMode ? 'dark' : 'light' },\r\n                    direction: isRTL ? 'rtl' : 'ltr',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return createTheme({\r\n        palette: { mode: isDarkMode ? 'dark' : 'light' },\r\n        direction: isRTL ? 'rtl' : 'ltr',\r\n    })\r\n}\r\n\r\nexport default getThemeSource;\r\n\r\nexport function semicolor(_color){\r\n    const color = d3color(_color);\r\n    color.opacity = 0.5\r\n    return color.toString();\r\n}","import React, { useContext } from 'react'\r\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\r\nimport MenuContext from 'material-ui-shell/lib/providers/Menu/Context'\r\nimport { useTheme } from '@mui/material/styles'\r\nimport { useConfig } from 'base-shell/lib/providers/Config'\r\nimport { useOnline } from 'base-shell/lib/providers/Online'\r\n\r\nimport { useIntl } from 'react-intl'\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    LinearProgress,\r\n    Typography,\r\n} from '@mui/material'\r\nimport { ChevronLeft, Menu as MenuIcon } from '@mui/icons-material'\r\n\r\nexport default function ({\r\n                             children,\r\n                             pageTitle,\r\n                             onBackClick,\r\n                             isLoading,\r\n                             appBarContent = null,\r\n                             contentStyle,\r\n                             tabs = null,\r\n                         }) {\r\n    const { isRTL } = useAppTheme()\r\n    const isOnline = useOnline()\r\n    const theme = useTheme()\r\n    const { appConfig } = useConfig()\r\n    const { menu } = appConfig || {}\r\n    const { width = 240, appBarLeadingContent = null } = menu || {}\r\n\r\n    const { toggleThis, isDesktop, isMenuOpen } = useContext(MenuContext)\r\n    const intl = useIntl()\r\n    let headerTitle = ''\r\n\r\n    if (typeof pageTitle === 'string' || pageTitle instanceof String) {\r\n        headerTitle = pageTitle\r\n    }\r\n\r\n    const handleDrawerMenuClick = () => {\r\n        if (!isMenuOpen) {\r\n            toggleThis('isMiniMode', false)\r\n            toggleThis('isMenuOpen', true)\r\n            if (!isDesktop) {\r\n                toggleThis('isMobileMenuOpen')\r\n            }\r\n        } else {\r\n            toggleThis('isMobileMenuOpen')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100vh',\r\n                overflow: 'hidden',\r\n            }}\r\n        >\r\n            <AppBar\r\n                position={isDesktop ? 'absolute' : undefined}\r\n                sx={{\r\n                    width:\r\n                        isMenuOpen && isDesktop ? `calc(100% - ${width}px)` : undefined,\r\n                    zIndex: theme.zIndex['drawer'],\r\n                    transition: theme.transitions.create(['width', 'margin'], {\r\n                        easing: theme.transitions.easing.sharp,\r\n                        duration: theme.transitions.duration.leavingScreen,\r\n                    }),\r\n                    maxHeight: 64,\r\n                    marginLeft: isRTL ? 0 : -12,\r\n                    marginRight: isRTL ? 30 : 0,\r\n                    backgroundColor:'transparent',\r\n                    backgroundImage:'none',\r\n                    boxShadow:'none'\r\n                }}\r\n            >\r\n                <Toolbar>\r\n                    {(isMenuOpen && isDesktop) ||\r\n                        (!onBackClick && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"open drawer\"\r\n                                onClick={handleDrawerMenuClick}\r\n                                edge=\"start\"\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        ))}\r\n                    {/* james- check if this is dead code? */}\r\n                    {onBackClick && (\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={onBackClick}\r\n                        >\r\n                            <ChevronLeft />\r\n                        </IconButton>\r\n                    )}\r\n                    {!onBackClick && isMenuOpen && false && (\r\n                        <div style={{ marginRight: 32 }} />\r\n                    )}\r\n                    {appBarLeadingContent}\r\n                    {/* james- check if this is dead code? */}\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {headerTitle}\r\n                    </Typography>\r\n                    <div style={{ flex: '1 1 auto' }} />\r\n                    {appBarContent}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div\r\n                style={{\r\n                    alignItems: 'center',\r\n                    justifyContent: 'flex-end',\r\n                    //...theme.mixins.toolbar,\r\n                    minHeight: 64, //height of AppBar\r\n                }}\r\n            />\r\n\r\n            {isLoading && <LinearProgress />}\r\n            {!isOnline && (\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        width: '100%',\r\n                        height: 15,\r\n                        backgroundColor: theme.palette.secondary.main,\r\n                    }}\r\n                >\r\n                    <Typography variant=\"caption\" color=\"textSecondary\" noWrap>\r\n                        {intl.formatMessage({\r\n                            id: 'offline',\r\n                            defaultMessage: 'Offline',\r\n                        })}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            {tabs}\r\n            <div style={{ flex: 1, overflow: 'auto', ...contentStyle }}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport MaterialReactTable from 'material-react-table';\r\nimport Scrollbar from \"material-ui-shell/lib/components/Scrollbar\";\r\nimport {fields} from \"./fields\";\r\nimport {Box, Button} from \"@mui/material\";\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { ExportToCsv } from 'export-to-csv';\r\nimport {useDatabase} from \"../../Providers/Database\";\r\n\r\n\r\n\r\n\r\nconst EventTable = ({data,isLoadingData,onSelectRow,highlightId}) => {\r\n    const columns = fields;\r\n\r\n    //optionally access the underlying virtualizer instance\r\n    const rowVirtualizerInstanceRef = useRef(null);\r\n\r\n    // const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [sorting, setSorting] = useState([]);\r\n    const {getDownloadData} = useDatabase();\r\n\r\n    useEffect(() => {\r\n        //scroll to the top of the table when the sorting changes\r\n        rowVirtualizerInstanceRef.current?.scrollToIndex(0);\r\n    }, [sorting]);\r\n\r\n\r\n    const handleExportRows = (rows) => {\r\n        setIsLoading(true)\r\n        getDownloadData(rows.map((row) => row.original)).then((datadownload)=>{\r\n            const csvOptions = {\r\n                fieldSeparator: ',',\r\n                quoteStrings: '\"',\r\n                decimalSeparator: '.',\r\n                showLabels: true,\r\n                filename: `mirage-mc-${new Date().toDateString()}`,\r\n                useBom: true,\r\n                useKeysAsHeaders: true,\r\n                // headers: fields.map((c) => c.accessorKey),\r\n            };\r\n            const csvExporter = new ExportToCsv(csvOptions);\r\n            csvExporter.generateCsv(datadownload);\r\n            setIsLoading(false)\r\n        }).catch(e=>{\r\n            setIsLoading(false)\r\n        })\r\n    };\r\n    const handleExportData = () => {\r\n        setIsLoading(true)\r\n        // csvExporter.generateCsv(data);\r\n        const datadownload = getDownloadData();\r\n        const csvOptions = {\r\n            fieldSeparator: ',',\r\n            quoteStrings: '\"',\r\n            decimalSeparator: '.',\r\n            showLabels: true,\r\n            filename: 'mirage-mc-all',\r\n            useBom: true,\r\n            useKeysAsHeaders: true,\r\n            // headers: fields.map((c) => c.accessorKey),\r\n        };\r\n        const csvExporter = new ExportToCsv(csvOptions);\r\n        csvExporter.generateCsv(datadownload);\r\n        setIsLoading(false)\r\n    };\r\n    // console.log(data)\r\n    return (\r\n        <MaterialReactTable\r\n            columns={columns}\r\n            data={data} //10,000 rows\r\n            enableBottomToolbar={false}\r\n            enableGlobalFilterModes\r\n            enableDensityToggle={false}\r\n            enablePagination={false}\r\n            // enableRowNumbers\r\n            enableRowVirtualization\r\n            muiTablePaperProps={{sx:{display:'flex', flexDirection:\"column\", height:'100%'}}}\r\n            muiTableContainerProps={{ sx: { height:'100%', flexGrow:2 } }}\r\n            initialState={{ density: 'compact' }}\r\n            onSortingChange={setSorting}\r\n            state={{ isLoading:isLoadingData||isLoading, sorting }}\r\n            rowVirtualizerInstanceRef={rowVirtualizerInstanceRef} //optional\r\n            rowVirtualizerProps={{ overscan: 8 }} //optionally customize the virtualizer\r\n            muiTableBodyRowProps={({ row }) => ({\r\n                onClick: ()=>{onSelectRow(row.original)},\r\n                // sx: { cursor: 'pointer',opacity:highlightId?(highlightId.stream_detail_id=== row.original.stream_detail_id?1:0.7):1},\r\n                sx: { cursor: 'pointer',opacity:highlightId?(highlightId._id=== row.original._id?1:0.7):1},\r\n            })}\r\n            enableColumnResizing\r\n            defaultColumn={{\r\n                minSize: 20, //allow columns to get smaller than default\r\n                maxSize: 9001, //allow columns to get larger than default\r\n                size: 100, //make columns wider by default\r\n            }}\r\n            // muiTableBodyProps={{\r\n            //     sx: {\r\n            //         //stripe the rows, make odd rows a darker color\r\n            //         '& tr': {\r\n            //             backgroundColor: (theme)=> theme.mode == 'dark' ? 'rgba(0,0,0,0.58)' : 'rgba(255,255,255,0.76)',\r\n            //         },\r\n            //     },\r\n            // }}\r\n            renderTopToolbarCustomActions={({ table }) => (\r\n                <Box\r\n                    sx={{ display: 'flex', gap: '1rem', p: '0.5rem', flexWrap: 'no-wrap' }}\r\n                >\r\n                    <Button\r\n                        color=\"primary\"\r\n                        target={\"_blank\"}\r\n                        size={\"small\"}\r\n                        //export all data that is currently in the table (ignore pagination, sorting, filtering, etc.)\r\n                        // onClick={handleExportData}\r\n                        href={process.env.REACT_APP_DATA_DOWNLOAD}\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                    >\r\n                        Download All Data\r\n                    </Button>\r\n                    <Button\r\n                        disabled={table.getPrePaginationRowModel().rows.length === 0}\r\n                        //export all rows, including from the next page, (still respects filtering and sorting)\r\n                        onClick={() =>\r\n                            handleExportRows(table.getPrePaginationRowModel().rows)\r\n                        }\r\n                        startIcon={<FileDownloadIcon />}\r\n                        variant=\"contained\"\r\n                        size={\"small\"}\r\n                    >\r\n                        Export Current Data\r\n                    </Button>\r\n                    {/*<Button*/}\r\n                    {/*    disabled={table.getRowModel().rows.length === 0}*/}\r\n                    {/*    //export all rows as seen on the screen (respects pagination, sorting, filtering, etc.)*/}\r\n                    {/*    onClick={() => handleExportRows(table.getRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Page Rows*/}\r\n                    {/*</Button>*/}\r\n                    {/*<Button*/}\r\n                    {/*    disabled={*/}\r\n                    {/*        !table.getIsSomeRowsSelected() && !table.getIsAllRowsSelected()*/}\r\n                    {/*    }*/}\r\n                    {/*    //only export selected rows*/}\r\n                    {/*    onClick={() => handleExportRows(table.getSelectedRowModel().rows)}*/}\r\n                    {/*    startIcon={<FileDownloadIcon />}*/}\r\n                    {/*    variant=\"contained\"*/}\r\n                    {/*>*/}\r\n                    {/*    Export Selected Rows*/}\r\n                    {/*</Button>*/}\r\n                </Box>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\n//virtualizerInstanceRef was renamed to rowVirtualizerInstanceRef in v1.5.0\r\n//virtualizerProps was renamed to rowVirtualizerProps in v1.5.0\r\n\r\nexport default EventTable;","import React from 'react'\r\nimport {ActionCreators as UndoActionCreators} from 'redux-undo'\r\nimport { connect } from 'react-redux'\r\nimport {IconButton} from \"@mui/material\";\r\nimport UndoIcon from \"@mui/icons-material/Undo\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\n\r\nlet UndoRedo = ({ canUndo, canRedo, onUndo, onRedo }) => (\r\n    <>\r\n        <IconButton onClick={onUndo} disabled={!canUndo}><UndoIcon/></IconButton>\r\n        <IconButton onClick={onRedo} disabled={!canRedo}><RedoIcon/></IconButton>\r\n    </>\r\n)\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canUndo: state.streamFilters.past.length > 0,\r\n    canRedo: state.streamFilters.future.length > 0\r\n})\r\n\r\nconst mapDispatchToProps = ({\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})\r\n\r\nUndoRedo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(UndoRedo)\r\n\r\nexport default UndoRedo\r\n","import {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent, Chip,\r\n    Collapse,\r\n    Divider, Grid,\r\n    IconButton,\r\n    Link, Stack,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { useSpring, animated, easings  } from '@react-spring/web'\r\nimport {styled} from \"@mui/material/styles\";\r\nimport {useState, useRef, useEffect} from \"react\";\r\nimport \"./index.css\"\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <ExpandMoreIcon {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\n\r\nfunction DetailCard ({data,onSelect}){\r\n    const timeStation = moment(data.time_station).format('LLL');\r\n    const stream_name = data.stream_name??'N/A';\r\n    return <>\r\n            <Typography component=\"div\" variant=\"h2\" onClick={()=>onSelect({station:[data.station]},data)}>\r\n                {data.station} <Typography component={\"span\"} variant={\"subtitle1\"}>{data.broadcast_frequency??'0.0'} FM</Typography>\r\n            </Typography>\r\n            <Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">\r\n                {data.station_description}\r\n            </Typography>\r\n            <table style={{width:'100%'}}>\r\n                <colgroup><col style={{width:130}}/><col/></colgroup>\r\n                <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>\r\n                <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>\r\n                <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>\r\n            </table>\r\n            {/*<table style={{width:'100%'}}>*/}\r\n            {/*    <colgroup><col style={{width:130}}/><col/></colgroup>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*        <tbody>*/}\r\n            {/*        <tr><td>Station URL</td><td><Link href={data.station_url} target={'_blank'} color={'secondary'}>{data.station_url}</Link></td></tr>*/}\r\n            {/*        <tr><td>Location</td><td><Link target={'_blank'} color={'secondary'} href={`https://maps.google.com/?q=${data.lat},${data.long}`}><MapIcon/>{data.city}, {data.country}</Link></td></tr>*/}\r\n            {/*        <tr><td>Radio Garden URL</td><td><Link href={data.url} target={'_blank'} color={'secondary'}>{data.url}</Link></td></tr>*/}\r\n            {/*        </tbody>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr>*/}\r\n            {/*        <td colspan=\"2\">*/}\r\n            {/*            <Grid container>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Stream</Typography>*/}\r\n            {/*                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>*/}\r\n            {/*            </Grid>*/}\r\n            {/*        </td>*/}\r\n            {/*    </tr>*/}\r\n            {/*    <tr><td>Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Description</td><td>{data.stream_description}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <tr><td>Stream Name</td><td>{stream_name}</td></tr>*/}\r\n            {/*    <Collapse>*/}\r\n            {/*    </Collapse>*/}\r\n            {/*    <tr><td colspan=\"2\"><Divider sx={{mt:2,mb:2}}/></td></tr>*/}\r\n            {/*</table>*/}\r\n            {(data.stream_name||data.stream_genre||data.stream_url)&&<CollapsibleComp header={'Stream Info'} defaultValue={true}>\r\n                <CardContent>\r\n                    <Link href={data.stream_url} target={'_blank'} color={'secondary'}>{data.stream_url}</Link>\r\n                    <Typography variant={'h4'}>{stream_name}</Typography>\r\n                    <Typography color=\"text.secondary\" gutterBottom> {data.stream_description}</Typography>\r\n                    {data.stream_genre && <Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                        <Chip label={data.stream_genre} size={'small'}/></Stack>}\r\n                </CardContent>\r\n            </CollapsibleComp>}\r\n            {/*<CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" by \"{data.stream_artist}\" at {timeStation}</>}>*/}\r\n            <CollapsibleComp header={'Event'} banner={<>\"{data.stream_song}\" at {timeStation}</>}>\r\n                <CardContent>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                                <Typography color=\"text.secondary\" gutterBottom> {timeStation}</Typography>\r\n                        </Grid>\r\n                        <Grid item flexGrow={1}>\r\n                            <Typography variant=\"h4\" component=\"div\" onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}>\r\n                                {data.stream_song}\r\n                            </Typography>\r\n                            {data.year_released&&<Typography color=\"text.secondary\" gutterBottom> {data.year_released}</Typography>}\r\n                            {data.stream_song_genre&&<Chip label={data.stream_song_genre} size={'small'}/>}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Box sx={{ flex: '1 0 auto', display:'flex' }}>\r\n                                <Avatar aria-label=\"recipe\"\r\n                                        src={data.stream_artist_image_url}\r\n                                        sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>\r\n                                <div>\r\n                                    <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>\r\n                                    <Typography variant=\"subtitle2\">from {data.stream_artist_country??\"N/A\"}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                            {data.stream_artist_genre&&(data.stream_artist_genre.map(t=><Chip key={t} label={t} size={'small'}/>))}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {data.stream_instrument_list&&(<Stack direction={'row'} spacing={1} flexWrap sx={{width:'100%', flexWrap:'wrap'}}>\r\n                                <Typography>Instruments: </Typography>\r\n                                {data.stream_instrument_list.split(';').map(t => <Chip\r\n                                key={t} label={t} size={'small'}/>)}\r\n                            </Stack>)}\r\n                        </Grid>\r\n                        {data.stream_lyrics&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>\r\n                                    Lyrics {data.stream_lyrics_language ? `(${data.stream_lyrics_language})` : \"\"}\r\n                                </Typography>\r\n                                <Divider sx={{mt: 2, mb: 2, flexGrow: 1}}/>\r\n                            </Grid>\r\n                            {data.stream_lyrics}\r\n                            {/*<table style={{width:'100%'}}>*/}\r\n                            {/*    {data.stream_artist&&<tr onClick={() => onSelect({stream_artist: [data.stream_artist]})}>*/}\r\n                            {/*        <td>Artist</td>*/}\r\n                            {/*        <td style={{display: 'flex'}}><Avatar aria-label=\"recipe\"*/}\r\n                            {/*                                              src={data.stream_artist_image_url}*/}\r\n                            {/*                                              sx={{mr: 1}}>{data.stream_artist[0]}</Avatar>*/}\r\n                            {/*            <div>*/}\r\n                            {/*                <Typography variant=\"h5\" color={'text.primary'}>{data.stream_artist}</Typography>*/}\r\n                            {/*                <Typography variant=\"subtitle2\">N/A</Typography>*/}\r\n                            {/*            </div>*/}\r\n                            {/*        </td>*/}\r\n                            {/*    </tr>}*/}\r\n                            {/*    <tr onClick={data.stream_song?()=>onSelect({stream_song:[data.stream_song]}):null}><td>Song</td><td>{data.stream_song}</td></tr>*/}\r\n                            {/*    <tr><td>Time Monitored</td><td>{timeStation}</td></tr>*/}\r\n                            {/*</table>*/}\r\n                        </Grid>}\r\n                        {(data.spotify_uri || data.youtube_url)&&<Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                                <Typography variant={\"h5\"} component={'div'} sx={{margin: 'auto'}}>Music Platform</Typography>\r\n                                <Divider sx={{mt:2,mb:2, flexGrow:1}}/>\r\n                            </Grid>\r\n                            {data.spotify_uri&&<Grid item xs={12}>\r\n                                <iframe loading=\"lazy\"\r\n                                        src={data.spotify_uri.replace('com/track','com/embed/track')}\r\n                                        width={'100%'} height=\"80\" frameBorder=\"0\"\r\n                                        data-mce-fragment=\"1\"></iframe>\r\n                            </Grid>}\r\n                            {data.youtube_url&&<Grid item xs={12}>\r\n                                <iframe width={'100%'} height={'auto'}\r\n                                        loading=\"lazy\"\r\n                                        src={data.youtube_url.replace(\"youtube.com/watch?v=\",\"youtube-nocookie.com/embed/\")}\r\n                                        title=\"YouTube video player\" frameBorder=\"0\"\r\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\r\n                                        allowFullScreen\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>}\r\n                    </Grid>\r\n                </CardContent>\r\n            </CollapsibleComp>\r\n\r\n            {/*<Typography component=\"div\" variant=\"subtitle1\" color=\"text.secondary\">*/}\r\n            {/*    Time Monitored : {moment(data.time_station).format('LLL')}*/}\r\n            {/*</Typography>*/}\r\n    </>\r\n}\r\nexport default DetailCard\r\n\r\nfunction CollapsibleComp ({header,banner,defaultValue,...props}) {\r\n    const [open,setopen] = useState(defaultValue);\r\n    const runningText = useSpring({\r\n        reset: open,\r\n        cancel: open,\r\n        config:{ duration: 20000},\r\n        loop:!open,\r\n        from: { transform: \"translateX(100%)\" },\r\n        to: { transform: \"translateX(-100%)\" },\r\n    });\r\n    return <Card elevation={10} sx={{mt:1}}>\r\n        <CardActions disableSpacing>\r\n            <Typography variant={\"h5\"}>{header}</Typography>\r\n            {(banner&&!open)&&<div style={{width:'100%', overflow:'hidden', marginLeft: 10, marginRight: 10, whiteSpace: 'nowrap'}}>\r\n                <Typography variant={\"subtitle2\"}>\r\n                    <animated.div style={runningText} className={'textbanner'}>{banner}</animated.div>\r\n                    {/*<div className={'textbanner'}>{banner} | {banner}</div>*/}\r\n                </Typography></div>}\r\n            <ExpandMore expand={open} onClick={()=>setopen(!open)}/>\r\n        </CardActions>\r\n        <Collapse in={open} unmountOnExit={true} {...props}/>\r\n    </Card>\r\n}\r\n","import Plot from 'react-plotly.js';\r\nimport {useTheme} from \"@mui/material/styles\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {color as d3color, extent, scaleLinear, range as d3range,interpolateNumber} from 'd3';\r\nimport './index.css';\r\n\r\nconst countriesScale = scaleLinear().range([5,20]);\r\nconst zoomi = scaleLinear().domain([\r\n    0.0007, 0.0014, 0.003, 0.006, 0.012, 0.024, 0.048, 0.096,\r\n    0.192, 0.3712, 0.768, 1.536, 3.072, 6.144, 11.8784, 23.7568,\r\n    47.5136, 98.304, 190.0544, 360.0\r\n]).range(d3range(0,20).map(d=>20-d))\r\nexport default function  Map ({locs,height,width,highlight}) {\r\n    const theme = useTheme();\r\n    let [data,setData] = useState([]);\r\n    let [domain,setDomain] = useState({center: {lon: 0, lat: 0},zoom:1});\r\n    useEffect(()=>{\r\n        try {\r\n            if (locs.length) {\r\n                // const botColor = d3color(theme.palette.text.primary);\r\n                // botColor.opacity = highlight?0.5:1;\r\n                const _botColor = theme.palette.primary.main;\r\n                countriesScale.domain(extent(locs, d => d?.count));\r\n                let lon = [];\r\n                let lat = [];\r\n                let size = [];\r\n                let text = [];\r\n                // let color=[];\r\n                locs.forEach(d => {\r\n                    lon.push(d.long)\r\n                    lat.push(d.lat)\r\n                    size.push(countriesScale(d?.count))\r\n                    text.push(`${d['title']} (${d?.count})`);\r\n                    // color.push((highlight&&(highlight.country===d['title']))? 'red':_botColor);\r\n                });\r\n                // console.log(highlight,color)\r\n                let ticks = countriesScale.ticks(2);\r\n                let tsize = ticks.map(t => countriesScale(t));\r\n                let tickS = ticks.map((t, i) => ({\r\n                    mapbox: 'mapboxTick',\r\n                    type: 'scattermapbox',\r\n                    name: `${t}`,\r\n                    lon: [0],\r\n                    lat: [0],\r\n                    x: [0],\r\n                    y: [0],\r\n                    marker: {\r\n                        color: _botColor,\r\n                        size: tsize[i]\r\n                    },\r\n                    visible: 'legendonly',\r\n                }))\r\n                let data = [{\r\n                    type: 'scattermapbox',\r\n                    lon,\r\n                    lat,\r\n                    hoverinfo: 'text',\r\n                    text,\r\n                    showlegend: false,\r\n                    marker: {\r\n                        size,\r\n                        color: _botColor,\r\n\r\n                        line: {\r\n                            color: 'black'\r\n                        }\r\n                    },\r\n                    name: \"stream\"\r\n                }, ...tickS\r\n                ];\r\n                const longd = extent(locs, d => d?.long) // [-180,180]\r\n                const latd = extent(locs, d => d?.lat)// [-90,90]\r\n                const center = {lon: (longd[1] + longd[0]) / 2, lat: (latd[1] + latd[0]) / 2};\r\n                const magrin = 1.2\r\n                const zoom = Math.min(10, Math.min(zoomi((longd[1] - longd[0]) * magrin * 2), zoomi((latd[1] - latd[0]) * magrin)) / 1.5);\r\n\r\n                setDomain({zoom, center})\r\n                if (highlight) {\r\n                    const _highlight = locs.find(d => d['city_id'] === highlight.city_id);\r\n                    if (_highlight) {\r\n                        data.push({\r\n                            type: 'scattermapbox',\r\n                            // locationmode: 'world',\r\n                            lon: [_highlight.long],\r\n                            lat: [_highlight.lat],\r\n                            hoverinfo: 'text',\r\n                            text: [`${_highlight['title']} (${_highlight?.count})`],\r\n                            showlegend: true,\r\n                            marker: {\r\n                                size: [countriesScale(_highlight.count)],\r\n                                color: 'red',\r\n                                line: {\r\n                                    color: 'black'\r\n                                }\r\n                            },\r\n                            name: _highlight['title']\r\n                        })\r\n                    }\r\n                }\r\n                setData(data);\r\n            }else\r\n                setData([])\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,highlight])\r\n// console.log(domain.center,domain.zoom)\r\n    let layout = {\r\n        paper_bgcolor: theme.palette.background.paper,\r\n        plot_bgcolor:'rgba(0,0,0,0)',//theme.palette.background.paper,\r\n        autoscale: false,\r\n        height:height,\r\n        width:width,\r\n        margin:{t:10,r:10,l:10,b:10},\r\n        mapboxTick: {\r\n            style: \"whitebg\",\r\n        },\r\n        mapbox: {\r\n            style: \"carto-positron\",\r\n            center:domain.center,\r\n            zoom:domain.zoom,\r\n        },\r\n        font: {\r\n            family: theme.typography.fontFamily,\r\n            size: theme.typography.fontSize,\r\n            color: theme.palette.text.primary\r\n        },\r\n        legend: {\r\n            title: {text: '#Streams'},\r\n            showticksuffix: 'last',\r\n            x: 1,\r\n            xanchor: 'right',\r\n            y: 0,\r\n            orientation: 'h'\r\n        }\r\n    };\r\n    return (\r\n        <Plot\r\n            data={data}\r\n            layout={ layout }\r\n            config = {{'displaylogo': false,\r\n                'toImageButtonOptions': {\r\n                'format': 'svg',//one of png, svg, jpeg, webp 'svg'\r\n                'filename': 'Station_Map',\r\n                'height': 1080,\r\n                'width': 1920,\r\n                'scale': 1// # Multiply title/legend/axis/canvas sizes by this factor\r\n                },\r\n                showEditInChartStudio: true,\r\n                plotlyServerURL: \"https://chart-studio.plotly.com\",\r\n                '#Station':false\r\n        }}\r\n        />\r\n    );\r\n}","import {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Collapse, DialogContent,Dialog,\r\n    IconButton, Paper, Portal,\r\n    Tab,\r\n    Tabs,\r\n    Typography,\r\n    Unstable_Grid2 as Grid\r\n} from \"@mui/material\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport MinimizeIcon from \"@mui/icons-material/Minimize\";\r\nimport CropFreeIcon from '@mui/icons-material/CropFree';\r\nimport FullscreenExitIcon from '@mui/icons-material/FullscreenExit';\r\nimport DetailCard from \"../DetailCard\";\r\nimport {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Map from \"../Map\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\nimport {groups} from \"d3\";\r\n\r\nexport default function ({currentDetail,locs, events,onSelect,sx={}}) {\r\n    const [isFull,setIsFull] = useState(false);\r\n    const [openEventList,setOpenEventList] = useState(true);\r\n    const [valueTab, setValueTab] = useState(0);\r\n    const [eventlocs, setEventlocs] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const _locsMap = {};\r\n            debugger\r\n            locs.forEach(d=>_locsMap[d['city_id']]=d);\r\n            const _locs = groups(events,d=>d['city_id']).map(([c,cou])=>({\r\n                title:_locsMap[c]?.title,\r\n                city_id:c,\r\n                count: cou.length,\r\n                lat: _locsMap[c]?.lat,\r\n                long: _locsMap[c]?.long,\r\n            }))\r\n            setEventlocs(_locs)\r\n        }catch(e){\r\n\r\n        }\r\n    },[locs,events])\r\n\r\n    const handleChangeTab = (event, newValueTab) => {\r\n        setValueTab(newValueTab);\r\n    };\r\n\r\n    const onTogleEventList = useCallback(()=>{\r\n        setOpenEventList(!openEventList);\r\n    },[openEventList])\r\n    const handleClose = useCallback(()=>{\r\n        setIsFull(false)\r\n    },[isFull]);\r\n\r\n    const renderContent = ()=>{\r\n        return <>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }} display={'flex'} justifyContent={\"space-between\"}>\r\n                <Box>\r\n                    <Tabs value={valueTab} onChange={handleChangeTab} aria-label=\"basic tabs example\">\r\n                        <Tab label=\"Map\" {...a11yProps(0)} />\r\n                        <Tab label=\"Event Info\" {...a11yProps(1)} />\r\n                    </Tabs>\r\n                </Box>\r\n                {isFull?<IconButton size={'small'} onClick={() => setIsFull(false)}><FullscreenExitIcon/></IconButton>\r\n                    :<IconButton size={'small'} onClick={() => setIsFull(true)}><CropFreeIcon/></IconButton>}\r\n            </Box>\r\n            {/*<Grid item sx={{height:'100%'}} flexGrow={2}>*/}\r\n            {/*{(valueTab === 0)?<Map/>:''}*/}\r\n            <TabPanel value={valueTab} index={0} sx={{height:'100%'}}>\r\n                <CardContent style={{margin:'auto',display: 'block', maxWidth:'100%',height:'100%',padding:0}}>\r\n                    <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                        {({ height, width }) => {\r\n                            return <Map height={height} width={width}\r\n                                        locs={eventlocs} highlight={currentDetail}/>\r\n                        }}\r\n                    </AutoSizer>\r\n                </CardContent>\r\n            </TabPanel>\r\n            <TabPanel value={valueTab} index={1} style={{height:'100%',overflowY:'auto'}}>\r\n                {(valueTab === 1)&&<CardContent sx={{width:'100%'}}>{currentDetail ?\r\n                    <DetailCard data={currentDetail} onSelect={onSelect}/> : <>Select from Event\r\n                        List</>}\r\n                </CardContent>}\r\n            </TabPanel>\r\n        </>\r\n    }\r\n    return (<>\r\n        <Card sx={{...sx,width:openEventList?'100%':200, backgroundColor: (theme) => semicolor(theme.palette.background.paper)}}>\r\n            <CardContent sx={{height: '100%', position: 'relative'}}>\r\n                <Typography>Song Info & Visualizations</Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onTogleEventList}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 0,\r\n                        top: 0,\r\n                    }}\r\n                >\r\n                    <MinimizeIcon/>\r\n                </IconButton>\r\n                {/*<Collapse in={openEventList} timeout=\"auto\" sx={{height:'100%'}}>*/}\r\n                    <Grid container style={{height:'100%', width:'100%'}} m={0} flexDirection={\"column\"} flexWrap={'nowrap'}\r\n                          sx={{bgcolor:theme=>theme.palette.background.paper}}>\r\n                        {renderContent()}\r\n                    </Grid>\r\n                {/*</Collapse>*/}\r\n            </CardContent>\r\n        </Card>\r\n    <Dialog\r\n        fullScreen\r\n        open={isFull}\r\n        onClose={handleClose}\r\n    >\r\n        <DialogContent sx={{padding:0}}>\r\n            <Grid container style={{width:'100%',height:'100%'}} m={0} flexDirection={\"column\"} flexWrap={'nowrap'} >\r\n                {renderContent()}\r\n            </Grid>\r\n        </DialogContent>\r\n    </Dialog>\r\n    </>\r\n    )\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `event-tab-${index}`,\r\n        'aria-controls': `event-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Card\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`event-tabpanel-${index}`}\r\n            aria-labelledby={`event-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (<>\r\n                    {children}\r\n            </>)}\r\n        </Card>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react'\r\nimport { useIntl } from 'react-intl'\r\nimport Page from \"../../containers/Page/Page\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport {\r\n    Backdrop,\r\n    Box,\r\n    Unstable_Grid2 as Grid,\r\n    LinearProgress,\r\n    Paper,\r\n    Typography,\r\n    Card,\r\n    CardContent, Button, Stack, IconButton, Collapse\r\n} from \"@mui/material\";\r\nimport Earth3D from \"../../components/Earth\";\r\nimport AutoSizer from \"lp-react-virtualized-auto-sizer-react-18\";\r\n\r\nimport EventTable from \"../../components/EventTable\";\r\nimport { Responsive as ResponsiveGridLayout, WidthProvider } from \"react-grid-layout\";\r\nimport UndoRedo from \"../../containers/UndoRedo\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport {semicolor} from \"../../containers/LayoutContainer/theme\";\r\nimport {useQuestions} from \"material-ui-shell/lib/providers/Dialogs/Question\";\r\nimport {SET_MENU} from \"../../reducer/actions/setting\";\r\nimport MinimizeIcon from '@mui/icons-material/Minimize';\r\nimport EventDetail from \"../../components/EventDetail\";\r\nimport useQuery from \"../../Providers/Query\";\r\nimport \"/node_modules/react-grid-layout/css/styles.css\";\r\nimport \"/node_modules/react-resizable/css/styles.css\";\r\n\r\n\r\n\r\nconst LandingPage = () => {\r\n    // const ResponsiveGridLayout = useMemo(()=>WidthProvider(Responsive),[]);\r\n    const layouts = useMemo(()=>({ lg: [\r\n            { i: \"eventList\", x: 0, y: 5, w: 6, h: 5, isBounded:true },\r\n            { i: \"eventDetail\", x: 6, y: 5, w: 6, h: 5, isBounded:true }\r\n        ], md: [\r\n            { i: \"eventList\", x: 0, y: 5, w: 5, h: 5, isBounded:true },\r\n            { i: \"eventDetail\", x: 5, y: 5, w: 5, h: 5, isBounded:true }\r\n        ], sm: [\r\n            { i: \"eventList\", x: 0, y: 0, w: 6, h: 4, isBounded:true },\r\n            { i: \"eventDetail\", x: 2, y: 0, w: 6, h: 4, isBounded:true }\r\n        ], xs: [\r\n            { i: \"eventList\", x: 0, y: 0, w: 4, h: 4, isBounded:true },\r\n            { i: \"eventDetail\", x: 2, y: 0, w: 4, h: 4, isBounded:true }\r\n        ], xxs: [\r\n            { i: \"eventList\", x: 0, y: 0, w: 2, h: 4, isBounded:true },\r\n            { i: \"eventDetail\", x: 2, y: 0, w: 2, h: 4, isBounded:true }\r\n        ] }),[])\r\n    const dispatch = useDispatch();\r\n    const intl = useIntl();\r\n    // const {openDialog,closeDialog, setProcessing} = useQuestions()\r\n    const filters = useSelector(selectFilters);\r\n    // const { appConfig } = useConfig()\r\n    const {getList,isLoading,getEvents,requestEvents,requestDetail,getDetail,setFuncCollection} = useDatabase();\r\n    const [zoomLoc,setZoomLoc] = useState();\r\n    const [openEventList,setOpenEventList] = useState(true);\r\n    const toolbarRef = useRef(null);\r\n    const currentDetail = getDetail();\r\n    // const query = useQuery();\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                setZoomLoc({lng:position.coords.longitude,lat:position.coords.latitude})\r\n            }, ()=>{});\r\n        }\r\n        dispatch({ type: SET_MENU, opened: true });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        if(currentDetail)\r\n            setZoomLoc({lng:currentDetail.long,lat:currentDetail.lat})\r\n    },[currentDetail])\r\n\r\n\r\n    const isLoadingInit = isLoading('rawData');\r\n    const isLoadingEvent = isLoading('events');\r\n    const isLoadingLocs = isLoading('locs');\r\n    useEffect(()=>{\r\n        if (!isLoadingInit) {\r\n            requestEvents(filters, 1000)\r\n        }\r\n    },[isLoadingInit,filters])\r\n    const onSelectStream = useCallback((data)=>{\r\n        requestDetail(data);\r\n    },[getEvents])\r\n\r\n    const onSelect = (value,extra)=>{\r\n        if (extra)\r\n            setZoomLoc({lng:extra.long,lat:extra.lat})\r\n        dispatch(setFilters({value}));\r\n    }\r\n\r\n    const onTogleEventList = useCallback(()=>{\r\n        setOpenEventList(!openEventList);\r\n    },[openEventList])\r\n\r\n    return (<Page appBarContent={<>\r\n        {/*<SearchField/>*/}\r\n            <div ref={toolbarRef}></div>\r\n            <UndoRedo/>\r\n        </>\r\n    }>\r\n            <div style={{position:'absolute',top:0,left:0, zIndex:0, height: '100%', width: '100%', overflow:'hidden'}}>\r\n                <AutoSizer style={{ height: '100%', width: '100%' }} >\r\n                    {({ height, width }) => {\r\n                        return <Earth3D locs={getList('locs')}\r\n                                        countries={getList('countries')}\r\n                                        onSelect={onSelect}\r\n                                        onSelectLegend={setFuncCollection}\r\n                                        width={width} height={height}\r\n                                        toolbarRef={toolbarRef}\r\n                                        zoomLoc={zoomLoc}\r\n                        />\r\n                    }}\r\n                </AutoSizer>\r\n            </div>\r\n        {/*<Grid container sx={{height:'100%', position:'relative', pointerEvents:'none'}} direction={\"column\"} justifyContent=\"space-between\">*/}\r\n        <div style={{height: '100%', position:'relative', pointerEvents:'none', overflow:'hidden'}}>\r\n            <AutoSizer style={{ height: '100%', width: '100%', position:'relative' }} >\r\n                {({ height, width }) => {\r\n                    return <ResponsiveGridLayout className=\"layout\" cols={{ lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 }}\r\n                                  layouts={layouts}\r\n                                  preventCollision={true}\r\n                                  compactType={null}\r\n                                  breakpoints={{ lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 }}\r\n                                 margin={{ lg: [10,10], md: [10,10], sm: [10,10], xs: [10,10], xxs: [10,10] }}\r\n                                     width={width}\r\n                                     rowHeight={(height-20)/10 -10}\r\n                                     height={height}\r\n                                  style={{position:'relative', pointerEvents:'all'}} >\r\n                    <div key={\"eventList\"} style={{pointerEvents:'all'}}>\r\n                        <Card sx={{ backgroundColor:(theme)=> semicolor(theme.palette.background.paper),height:'100%',position:'relative'}}>\r\n                            <CardContent sx={{height: '100%', position: 'relative'}}>\r\n                                <Typography>Song List</Typography>\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    onClick={onTogleEventList}\r\n                                    sx={{\r\n                                        position: 'absolute',\r\n                                        right: 0,\r\n                                        top: 0,\r\n                                    }}\r\n                                >\r\n                                    <MinimizeIcon />\r\n                                </IconButton>\r\n\r\n                                <div style={{height:'100%'}}>\r\n                                    <EventTable data={getEvents()} isLoadingData={isLoadingEvent} onSelectRow={onSelectStream} highlightId={currentDetail}/>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                    <div key={\"eventDetail\"} style={{pointerEvents:'all'}}>\r\n                        <EventDetail currentDetail={currentDetail} onSelect={onSelect}\r\n                                     events={getEvents()}\r\n                                     locs={getList('locs')}\r\n                                     sx={{height:'100%',position:'relative'}}\r\n                                     />\r\n                    </div>\r\n                {/*</Grid>*/}\r\n            </ResponsiveGridLayout>}}\r\n            </AutoSizer>\r\n        </div>\r\n        <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={(isLoadingInit||isLoadingLocs)}\r\n        >\r\n            <Box sx={{ display: 'flex', alignItems: 'center', width:'50%', flexDirection: \"column\", textAlign:'center' }}>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <LinearProgress variant=\"determinate\" value={(isLoadingInit)?40:((isLoadingLocs)?90:100)} />\r\n                </Box>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <h2>{(isLoadingInit)?'Read data....':((isLoadingLocs)?'Process data...':'Done!')}</h2>\r\n                </Box>\r\n            </Box>\r\n        </Backdrop>\r\n    </Page>\r\n    )\r\n}\r\n\r\nexport default LandingPage;"],"names":["exportAsImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","imageFileName","renderer","scene","camera","blob","wrap","_context","prev","next","render","domElement","toDataURL","downloadImage","stop","_x","_x2","apply","arguments","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","TOP","colorArr","arcThickScale","d3","range","labelScale","countriesScale","Earth3D","forwardRef","ref","locs","countries","width","height","onSelect","onSelectLegend","zoomLoc","toolbarRef","legendHolderRef","globeEl","useRef","holderRef","_useState","useState","_useState2","_slicedToArray","colorKey","_useState3","_useState4","selectPoint","setSelectPoint","_useState5","_useState6","currentSequnce","setCurrentSequnce","_useState7","lat","lng","altitude","_useState8","MAP_CENTERs","setMAP_CENTERs","_useState9","_useState10","ringData","setRingData","_useState11","_useState12","setcontriesMap","colorsCategory","useMemo","otherColor","length","undefined","scale","master","val","trim","domain","find","d","handleData","_ref2","contriesMap","count","title","forEach","order","i","long","useEffect","_handleData","_useState13","_useState14","timer","setTimer","current","interval","setTimeout","pointOfView","clearInterval","stopPlay","useCallback","_useState15","_useState16","timerRing","setTimerRing","zoomTo","onSaveImage","country","_jsxs","background","position","children","_jsx","marginTop","Globe","globeImageUrl","earthNight","showAtmosphere","ringsData","ringColor","ringResolution","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","labelsData","labelLat","labelLng","labelAltitude","labelText","labelSize","labelDotRadius","labelColor","_d$color","color","labelResolution","hexBinPointsData","hexBinPointWeight","hexBinPointLng","hexBinPointLat","hexAltitude","sumWeight","hexBinResolution","hexTopColor","points","hexSideColor","hexBinMerge","onHexHover","hex","hexLabel","concat","s","slice","sort","a","b","map","join","onHexClick","_d$points$","city","push","onGlobeClick","Portal","container","IconButton","onClick","SaveIcon","fields","accessorKey","header","dynamic","filterSearch","filter","f","filterDisable","semicolor","_color","d3color","opacity","toString","id","ts","isDarkMode","isRTL","fontSize","_source","source","Function","palette","createTheme","_objectSpread","mode","direction","pageTitle","onBackClick","isLoading","_ref$appBarContent","appBarContent","contentStyle","_ref$tabs","tabs","useAppTheme","isOnline","useOnline","theme","useTheme","_ref3","useConfig","appConfig","menu","_ref3$width","_ref3$appBarLeadingCo","appBarLeadingContent","_useContext","useContext","MenuContext","toggleThis","isDesktop","isMenuOpen","intl","useIntl","headerTitle","String","display","flexDirection","overflow","AppBar","sx","zIndex","transition","transitions","create","easing","sharp","duration","leavingScreen","maxHeight","marginLeft","marginRight","backgroundColor","backgroundImage","boxShadow","Toolbar","edge","MenuIcon","ChevronLeft","Typography","variant","noWrap","flex","alignItems","justifyContent","minHeight","LinearProgress","secondary","main","formatMessage","defaultMessage","data","isLoadingData","onSelectRow","highlightId","columns","rowVirtualizerInstanceRef","setIsLoading","sorting","setSorting","getDownloadData","useDatabase","_rowVirtualizerInstan","scrollToIndex","MaterialReactTable","enableBottomToolbar","enableGlobalFilterModes","enableDensityToggle","enablePagination","enableRowVirtualization","muiTablePaperProps","muiTableContainerProps","flexGrow","initialState","density","onSortingChange","state","rowVirtualizerProps","overscan","muiTableBodyRowProps","row","original","cursor","_id","enableColumnResizing","defaultColumn","minSize","maxSize","size","renderTopToolbarCustomActions","table","Box","gap","p","flexWrap","Button","target","process","startIcon","FileDownloadIcon","disabled","getPrePaginationRowModel","rows","then","datadownload","csvOptions","fieldSeparator","quoteStrings","decimalSeparator","showLabels","filename","Date","toDateString","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","catch","e","UndoRedo","canUndo","canRedo","onUndo","onRedo","_Fragment","UndoIcon","RedoIcon","mapDispatchToProps","UndoActionCreators","undo","redo","connect","streamFilters","past","future","ExpandMore","styled","props","expand","other","_objectWithoutProperties","_excluded","ExpandMoreIcon","transform","shortest","_data$stream_name","_data$broadcast_frequ","_data$stream_artist_c","timeStation","moment","time_station","format","stream_name","component","station","broadcast_frequency","station_description","Link","station_url","MapIcon","url","stream_genre","stream_url","CollapsibleComp","defaultValue","CardContent","gutterBottom","stream_description","Stack","spacing","Chip","label","banner","stream_song","Grid","item","xs","year_released","stream_song_genre","Avatar","src","stream_artist_image_url","mr","stream_artist","stream_artist_country","stream_artist_genre","t","stream_instrument_list","split","stream_lyrics","Divider","mt","mb","margin","stream_lyrics_language","spotify_uri","youtube_url","loading","replace","frameBorder","allow","allowFullScreen","_excluded2","open","setopen","runningText","useSpring","reset","cancel","config","loop","from","to","Card","elevation","CardActions","disableSpacing","whiteSpace","animated","div","className","Collapse","in","unmountOnExit","scaleLinear","zoomi","d3range","Map","highlight","setData","center","lon","zoom","setDomain","_botColor","primary","extent","text","ticks","tsize","tickS","mapbox","type","name","x","y","marker","visible","hoverinfo","showlegend","line","_toConsumableArray","longd","latd","Math","min","_highlight","city_id","layout","paper_bgcolor","paper","plot_bgcolor","autoscale","r","l","mapboxTick","font","family","typography","fontFamily","legend","showticksuffix","xanchor","orientation","Plot","showEditInChartStudio","plotlyServerURL","currentDetail","events","_ref$sx","isFull","setIsFull","openEventList","setOpenEventList","valueTab","setValueTab","eventlocs","setEventlocs","_locsMap","_locs","groups","_locsMap$c","_locsMap$c2","_locsMap$c3","c","cou","handleChangeTab","event","newValueTab","onTogleEventList","handleClose","renderContent","borderBottom","borderColor","Tabs","value","onChange","Tab","a11yProps","FullscreenExitIcon","CropFreeIcon","TabPanel","index","maxWidth","padding","AutoSizer","_ref4","overflowY","DetailCard","right","top","MinimizeIcon","m","bgcolor","Dialog","fullScreen","onClose","DialogContent","role","hidden","layouts","lg","w","h","isBounded","md","sm","xxs","dispatch","useDispatch","filters","useSelector","selectFilters","_useDatabase","getList","getEvents","requestEvents","requestDetail","getDetail","setFuncCollection","setZoomLoc","navigator","geolocation","getCurrentPosition","coords","longitude","latitude","SET_MENU","opened","isLoadingInit","isLoadingEvent","isLoadingLocs","onSelectStream","extra","setFilters","Page","left","pointerEvents","ResponsiveGridLayout","cols","preventCollision","compactType","breakpoints","rowHeight","EventTable","EventDetail","Backdrop","drawer","textAlign"],"sourceRoot":""}