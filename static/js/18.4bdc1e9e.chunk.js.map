{"version":3,"file":"static/js/18.4bdc1e9e.chunk.js","mappings":"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","sources":["components/EventTable/fields.js","components/ListboxComponent/index.js","components/TimeRangePicker/index.js","components/FilterPanel/index.js","components/FontsizeControl/index.js","config/menuItems.js","components/Menu/MenuContent.js"],"sourcesContent":["import moment from \"moment/moment\";\r\nexport const fields = [\r\n    {\r\n        accessorKey: 'city',\r\n        header: 'City',\r\n    },\r\n    {\r\n        accessorKey: 'country',\r\n        header: 'Country',\r\n    },\r\n    {\r\n        accessorKey: 'station',\r\n        header: 'Station',\r\n    },\r\n    {\r\n        accessorKey: 'station_genre',\r\n        header: 'Station Genre',\r\n    },\r\n    {\r\n        accessorKey: 'stream_artist',\r\n        header: 'Artist',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'stream_song',\r\n        header: 'Song',\r\n        dynamic:true,\r\n    },\r\n    {\r\n        accessorKey: 'time_station',\r\n        header: 'Time',\r\n        type:'time',\r\n        filterDisable:true,\r\n        accessorFn:(d)=>d.time_station?moment(d.time_station).format('LLL'):''\r\n    }\r\n];\r\n\r\nexport const filterSearch = fields.filter(f=>!f.filterDisable);","import React, {useRef} from \"react\";\r\nimport { ViewportList } from 'react-viewport-list';\r\n\r\nconst ListboxComponent = React.forwardRef(function ListboxComponent(\r\n    props,\r\n    ref\r\n) {\r\n    const { children, role, ...other } = props;\r\n    const Row = ({props,type:Type}) => {\r\n        return <Type {...props} key={props.id}/>\r\n    }\r\n    const itemCount = Array.isArray(children) ? children.length : 0;\r\n    const viewboxRef = useRef(null)\r\n    return (\r\n        <div ref={ref} role={role} >\r\n            <div {...other} ref={viewboxRef}>\r\n                    <ViewportList\r\n                        viewportRef={viewboxRef}\r\n                        items={children}\r\n                        count={itemCount}\r\n                    >\r\n                        {Row}\r\n                    </ViewportList>\r\n                {/*<List*/}\r\n                {/*    height={250}*/}\r\n                {/*    width={300}*/}\r\n                {/*    rowHeight={itemSize}*/}\r\n                {/*    overscanCount={5}*/}\r\n                {/*    rowCount={itemCount}*/}\r\n                {/*    rowRenderer={props => {*/}\r\n                {/*        return React.cloneElement(children[props.index], {*/}\r\n                {/*            style: props.style*/}\r\n                {/*        });*/}\r\n                {/*    }}*/}\r\n                {/*    role={role}*/}\r\n                {/*/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListboxComponent;","import * as React from 'react';\r\nimport {DateTimePicker} from \"@mui/x-date-pickers\";\r\nimport {useState} from \"react\";\r\nimport {TextField} from \"@mui/material\";\r\nimport {DemoContainer,DemoItem} from \"@mui/x-date-pickers/internals/demo\";\r\n\r\nexport default function TimeRangePicker({fromVal=null,toVal=null,onChange=()=>{}}) {\r\n    // const [fromVal,setFromVal] = useState(null);\r\n    // const [toVal,setToVal] = useState(null);\r\n    return (<DemoContainer components={['DateTimePicker']}>\r\n        <DemoItem >\r\n            <DateTimePicker\r\n                slotProps={{\r\n                    actionBar: {\r\n                        actions: ['clear'],\r\n                    },\r\n                    textField:{\r\n                        size: \"small\"\r\n                    }\r\n                }}\r\n                size=\"small\"\r\n                label=\"From\"\r\n                value={fromVal}\r\n                onChange={(newValue) => onChange('from',newValue)}\r\n            />\r\n        </DemoItem>\r\n        <DemoItem>\r\n            <DateTimePicker\r\n                slotProps={{\r\n                    actionBar: {\r\n                        actions: ['clear'],\r\n                    },\r\n                    textField:{\r\n                    size: \"small\"\r\n                }\r\n                }}\r\n                minDateTime={fromVal}\r\n                label=\"To\"\r\n                size=\"small\"\r\n                value={toVal}\r\n                onChange={(newValue) => onChange('to',newValue)}\r\n            />\r\n        </DemoItem>\r\n    </DemoContainer>);\r\n}","import React, {useEffect, useMemo, useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    setFilter,\r\n    setFilters,\r\n    selectFilters\r\n} from \"../../reducer/streamfilters\";\r\nimport { ActionCreators } from \"redux-undo\";\r\nimport {Autocomplete, createFilterOptions, Stack, TextField} from \"@mui/material\";\r\nimport {filterSearch} from \"../EventTable/fields\";\r\nimport {useDatabase} from \"../../Providers/Database\";\r\nimport ListboxComponent from \"../ListboxComponent\";\r\nimport TimeRangePicker from \"../TimeRangePicker\";\r\n\r\nconst OPTIONS_LIMIT = 50;\r\nconst defaultFilterOptions = createFilterOptions();\r\n\r\nconst filterOptionsFunc = (options, state) => {\r\n    return defaultFilterOptions(options, state).slice(0, OPTIONS_LIMIT);\r\n};\r\n\r\nconst filterSearchAsyn = filterSearch.filter(f=>f.dynamic);\r\nexport default function FilterPanel() {\r\n    const filters = useSelector(selectFilters);\r\n    const dispatch = useDispatch();\r\n    const [filterOptions,setFilterOptions] = useState({});\r\n    const {isLoading,searchByStream,getList} = useDatabase();\r\n\r\n\r\n    // useEffect(()=>{\r\n    //     if (!Object.keys(filters).length) {\r\n    //         // const newfilters = {};\r\n    //         // filterSearch.forEach(f=>{\r\n    //         //     newfilters[f.accessorKey] = null;\r\n    //         // })\r\n    //         // dispatch(setFilters({value: newfilters}));\r\n    //         ActionCreators.clearHistory();\r\n    //     }\r\n    // },[]);\r\n    const fields = getList('fields');\r\n\r\n    useEffect(()=>{\r\n        setFilterOptions({...fields});\r\n    },[fields])\r\n\r\n    return <Stack spacing={2} padding={2}>\r\n        {filterSearch.map(f=><CusAutocomplete\r\n            key={f.accessorKey}\r\n            multiple\r\n            size=\"small\"\r\n            limitTags={2}\r\n            filterOptions={filterOptionsFunc}\r\n            ListboxComponent={ListboxComponent}\r\n            freeSolo\r\n            options={(f.dynamic?getList(`search-${f.accessorKey}`):filterOptions[f.accessorKey])??[]}\r\n            loading={f.dynamic?isLoading(`search-${f.accessorKey}`):false}\r\n            getOptionLabel={(d) => d}\r\n            value={filters[f.accessorKey]??[]}\r\n            onChange={(event, value) => {\r\n                dispatch(setFilter({key:f.accessorKey,value}));\r\n            }}\r\n            onInputChange={f.dynamic?((event, newInputValue) => {\r\n                if (newInputValue&&newInputValue!=='')\r\n                    searchByStream(f.accessorKey,newInputValue);\r\n            }):undefined}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={f.header}\r\n                />\r\n            )}\r\n        />)}\r\n        <TimeRangePicker\r\n            fromVal={(filters[\"time_station\"]?.from)??null}\r\n            toVal={(filters[\"time_station\"]?.to)??null}\r\n            onChange={(key,value) => {\r\n                const val = {...(filters[\"time_station\"] ?? {})};\r\n                if (value)\r\n                    val[key] = value;\r\n                else\r\n                    delete val[key];\r\n                dispatch(setFilter({key:\"time_station\",value:val}));\r\n            }}\r\n        />\r\n    </Stack>\r\n}\r\n\r\nfunction CusAutocomplete ({onInputChange=()=>{},...props}) {\r\n    const [input, setInput] = React.useState('');\r\n    return <Autocomplete\r\n        inputValue={input}\r\n        onInputChange={(event,newValue,reason)=> {\r\n            setInput(newValue);\r\n            onInputChange(event,newValue,reason)\r\n        }}\r\n        onBlur={()=>{setInput('')}}\r\n        {...props}\r\n    />\r\n}","import {ButtonGroup, Button, Stack} from \"@mui/material\";\r\nimport {Add as AddIcon, Remove as RemoveIcon} from '@mui/icons-material';\r\n\r\nexport default function FontsizeControl({title,onChange}) {\r\n    return<Stack direction={\"row\"} alignItems={'center'} justifyContent={'space-between'}>\r\n        {title}\r\n        <ButtonGroup size=\"small\" variant=\"outlined\" aria-label=\"outlined button group\"  sx={{color:\"unset\"}}>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(true)}>\r\n            <AddIcon/>\r\n        </Button>\r\n        <Button  sx={{color:\"unset\"}} onClick={()=>onChange(false)}>\r\n            <RemoveIcon/>\r\n        </Button>\r\n    </ButtonGroup>\r\n    </Stack>\r\n}","import React from 'react'\nimport {\n  AccountBox as AccountBoxIcon,\n  ChatBubble,\n  ChromeReaderMode,\n  Dashboard as DashboardIcon,\n  ExitToApp as ExitToAppIcon,\n  FilterList,\n  FormatTextdirectionRToL as RTLIcon,\n  FormatTextdirectionLToR as LTRIcon,\n  GetApp,\n  InfoOutlined,\n  Language as LanguageIcon,\n  Lock as LockIcon,\n  MenuOpen as MenuOpenIcon,\n  QuestionAnswer,\n  SettingsApplications as SettingsIcon,\n  Style as StyleIcon,\n  Tab,\n  ViewList,\n  Web,\n  FilterAlt,\n  Home as HomeIcon,\n    Map as MapIcon,\n    FileUpload,\n  FormatSize\n} from '@mui/icons-material';\n\nimport allLocales from './locales'\nimport allThemes from './themes'\n// import FilterPanel from \"../components/FilterPanel/index_static\";\nimport FilterPanel from \"../components/FilterPanel\";\nimport FontsizeControl from \"../components/FontsizeControl\";\n\nconst getMenuItems = (props) => {\n  const {\n    intl,\n    updateLocale,\n    locale,\n    menuContext,\n    themeContext,\n    a2HSContext,\n    auth: authData,\n    openAbout,\n    changeFontSize,\n  } = props\n\n  const { toggleThis, isDesktop, isAuthMenuOpen, isMiniSwitchVisibility } =\n    menuContext\n  const { themeID, setThemeID, isRTL, fontSize, toggleThisTheme, setFontSize } = themeContext\n  const { auth, setAuth } = authData\n  const { isAppInstallable, isAppInstalled, deferredPrompt } = a2HSContext\n\n  const localeItems = allLocales.map((l) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: l.locale }),\n      onClick: () => {\n        updateLocale(l.locale)\n      },\n      leftIcon: <LanguageIcon />,\n    }\n  })\n\n  const isAuthorised = auth.isAuthenticated\n\n  const themeItems = allThemes.map((t) => {\n    return {\n      value: undefined,\n      visible: true,\n      primaryText: intl.formatMessage({ id: t.id }),\n      onClick: () => {\n        setThemeID(t.id)\n      },\n      leftIcon: <StyleIcon style={{ color: t.color }} />,\n    }\n  })\n\n  // if (isAuthMenuOpen || !isAuthorised) {\n  //   return [\n  //     {\n  //       value: '/my_account',\n  //       primaryText: intl.formatMessage({\n  //         id: 'my_account',\n  //         defaultMessage: 'My Account',\n  //       }),\n  //       leftIcon: <AccountBoxIcon />,\n  //     },\n  //   ]\n  // }\n  return [\n    {\n      value: null,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'search',\n        defaultMessage: 'Search',\n      }),\n      leftIcon: <FilterAlt />,\n      primaryTogglesNestedList: true,\n      nestedItems: [\n        {\n          primaryText: <FilterPanel/>\n        }\n      ]\n    },\n    {\n      value: '/',\n      visible: isAuthorised,\n      primaryText: intl.formatMessage({ id: 'home' }),\n      leftIcon: <HomeIcon />,\n    },\n    {\n      value: null,\n      visible: true,\n      primaryText: intl.formatMessage({ id: 'about' }),\n      leftIcon: <InfoOutlined />,\n      onClick:openAbout\n    },\n    { divider: true },\n    {\n      primaryText: intl.formatMessage({ id: 'settings' }),\n      primaryTogglesNestedList: true,\n      leftIcon: <SettingsIcon />,\n      nestedItems: [\n        {\n          primaryText: <FontsizeControl title={intl.formatMessage({id: 'Font size'})}\n                                        onChange={changeFontSize}/>,\n          leftIcon: <FormatSize/>,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'theme' }),\n          secondaryText: intl.formatMessage({ id: themeID }),\n          primaryTogglesNestedList: true,\n          leftIcon: <StyleIcon />,\n          nestedItems: themeItems,\n        },\n        {\n          primaryText: intl.formatMessage({ id: 'language' }),\n          secondaryText: intl.formatMessage({ id: locale }),\n          primaryTogglesNestedList: true,\n          leftIcon: <LanguageIcon />,\n          nestedItems: localeItems,\n        },\n        {\n          visible: isDesktop ? true : false,\n          onClick: () => {\n            toggleThis('isMiniSwitchVisibility')\n          },\n          primaryText: intl.formatMessage({\n            id: 'menu_mini_mode',\n          }),\n          leftIcon: isMiniSwitchVisibility ? (\n            <MenuOpenIcon />\n          ) : (\n            <ChromeReaderMode />\n          ),\n        },\n        {\n          onClick: () => {\n            toggleThisTheme('isRTL')\n          },\n          primaryText: `${isRTL ? 'LTR' : 'RTL'} mode`,\n          leftIcon: isRTL ? <LTRIcon /> : <RTLIcon />,\n        },\n      ],\n    },\n    {\n      value: null,\n      visible: isAppInstallable && !isAppInstalled,\n      onClick: () => {\n        deferredPrompt.prompt()\n      },\n      primaryText: intl.formatMessage({\n        id: 'install',\n        defaultMessage: 'Install',\n      }),\n      leftIcon: <GetApp />,\n    },\n  ]\n}\nexport default getMenuItems\n","import React, {useCallback} from 'react'\nimport Scrollbar from 'material-ui-shell/lib/components/Scrollbar/Scrollbar'\nimport SelectableMenuList from 'material-ui-shell/lib/containers/SelectableMenuList'\nimport { useAddToHomeScreen } from 'base-shell/lib/providers/AddToHomeScreen'\nimport { useAuth } from 'base-shell/lib/providers/Auth'\nimport { useConfig } from 'base-shell/lib/providers/Config'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useIntl } from 'react-intl'\nimport { useLocale } from 'base-shell/lib/providers/Locale'\nimport { useMenu } from 'material-ui-shell/lib/providers/Menu'\nimport { useTheme as useAppTheme } from 'material-ui-shell/lib/providers/Theme'\nimport getMenuItems from '../../config/menuItems'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DECREASE_FONT_SIZE, INCREASE_FONT_SIZE, SET_FONT_SIZE, SET_MENU} from \"../../reducer/actions/setting\";\n// import FilterPanel from \"../FilterPanel\";\n\nconst Menu = (props) => {\n  const intl = useIntl()\n  const navigate = useNavigate()\n  const location = useLocation()\n  const auth = useAuth()\n  const menuContext = useMenu()\n  const a2HSContext = useAddToHomeScreen()\n  const { toggleThis, isMiniMode, isMiniSwitchVisibility } = menuContext || {}\n  const { appConfig } = useConfig()\n  const { setLocale, locale = 'en' } = useLocale()\n  const themeContext = useAppTheme();\n  const dispatch = useDispatch();\n  const changeFontSize = (isIncrease)=>{\n    if (isIncrease)\n      dispatch({ type: INCREASE_FONT_SIZE});\n    else\n      dispatch({ type: DECREASE_FONT_SIZE})\n  }\n\n  const menuItems = getMenuItems({\n    intl,\n    locale,\n    updateLocale: setLocale,\n    menuContext,\n    themeContext,\n    appConfig,\n    a2HSContext,\n    auth,\n    openAbout:()=>{dispatch({ type: SET_MENU, opened: true });},\n    changeFontSize,\n    ...props,\n  }).filter((item) => {\n    return item.visible !== false\n  })\n\n\n  const index = location ? location.pathname : '/'\n\n  const handleChange = (event, index) => {\n    if (index !== undefined) {\n      toggleThis('isMobileMenuOpen', false)\n    }\n    if (index !== undefined && index !== Object(index)) {\n      navigate(index)\n    }\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        /*  direction: isRTL ? 'rtl' : 'ltr' */\n      }}\n    >\n      <Scrollbar style={{ flex: 1 }}>\n        {/*<FilterPanel/>*/}\n        <SelectableMenuList\n          key={isMiniSwitchVisibility + themeContext.isRTL}\n          onIndexChange={handleChange}\n          useMinified={isMiniMode}\n          items={menuItems}\n          index={index}\n        />\n      </Scrollbar>\n    </div>\n  )\n}\n\nexport default Menu\n"],"names":["fields","accessorKey","header","dynamic","type","filterDisable","accessorFn","d","time_station","moment","format","filterSearch","filter","f","React","props","ref","children","role","other","itemCount","Array","isArray","length","viewboxRef","useRef","ViewportList","viewportRef","items","count","Type","key","id","TimeRangePicker","fromVal","toVal","onChange","DemoContainer","components","DateTimePicker","slotProps","actionBar","actions","textField","size","label","value","newValue","minDateTime","defaultFilterOptions","createFilterOptions","filterOptionsFunc","options","state","slice","FilterPanel","filters","useSelector","selectFilters","dispatch","useDispatch","useState","filterOptions","setFilterOptions","useDatabase","isLoading","searchByStream","getList","useEffect","Stack","spacing","padding","CusAutocomplete","multiple","limitTags","ListboxComponent","freeSolo","loading","getOptionLabel","event","setFilter","onInputChange","newInputValue","undefined","renderInput","params","TextField","from","to","val","input","setInput","Autocomplete","inputValue","reason","onBlur","FontsizeControl","title","direction","alignItems","justifyContent","ButtonGroup","variant","sx","color","Button","onClick","Add","Remove","intl","updateLocale","locale","menuContext","themeContext","a2HSContext","authData","auth","openAbout","changeFontSize","toggleThis","isDesktop","isMiniSwitchVisibility","isAuthMenuOpen","themeID","setThemeID","isRTL","toggleThisTheme","fontSize","setFontSize","isAppInstallable","setAuth","isAppInstalled","deferredPrompt","localeItems","allLocales","l","visible","primaryText","formatMessage","leftIcon","Language","isAuthorised","isAuthenticated","themeItems","allThemes","t","Style","style","prompt","defaultMessage","FilterAlt","primaryTogglesNestedList","nestedItems","Home","InfoOutlined","divider","FormatSize","secondaryText","MenuOpen","ChromeReaderMode","GetApp","useIntl","navigate","useNavigate","location","useLocation","useAuth","useMenu","useAddToHomeScreen","isMiniMode","appConfig","useConfig","useLocale","setLocale","useAppTheme","menuItems","getMenuItems","SET_MENU","opened","isIncrease","INCREASE_FONT_SIZE","DECREASE_FONT_SIZE","item","index","pathname","display","flexDirection","height","flex","onIndexChange","Object","useMinified"],"sourceRoot":""}